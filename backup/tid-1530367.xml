<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>不能发贴简单回楼用</title>
    <link>https://bbs.saraba1st.com/2b/</link>
    <description>不能发贴简单回楼用</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 09 Jul 2020 20:34:26 +0000</lastBuildDate>
    <item>
      <title>不能发贴简单回楼用[0-50]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1530367-1-1.html</link>
      <description>不能发贴简单回楼用&#13;
 本帖最后由 eggplant 于 2020-3-5 11:30 编辑 

简单回点有用的开源游戏链接，游戏这东西其实能读源码比看教程有用，
&#13;
当然这仅仅是对我个人而言，每个人学习方法不同，或许有人更习惯看教程。
&#13;
========================================
&#13;
2D Platformer
&#13;
1.Mario clone                (C++)
&#13;
https://github.com/MitchellSternke/Mario
&#13;
2.还是马里奥                (C++)
&#13;
https://github.com/atraczyk/2d-engine
&#13;
3.Gamemaker马里奥        (GM)
&#13;
Gatete Mario Engine
&#13;
原网页链接打不开了，只能给个工程名字，还原度非常高的马里奥3复刻，主要基于GM的像素碰撞检测
&#13;
4.盐与避难所 Salt and Sanctuary                (C# XNA)
&#13;
基于Tile和坐标点的碰撞检测
&#13;
5.Celeste 蔚蓝                (C# XNA)
&#13;
6.开源索尼克                (C)
&#13;
之前用VS编译过一个老版本，最近几年没碰过
&#13;
https://sourceforge.net/projects/opensnc
&#13;
========================================
&#13;
2.5D 横版过关，Beat them up
&#13;
1.FIGHT N RAGE                (C# OpenTK)
&#13;
类似卡普空街机2.5D横版过关游戏，Tile地图，Box碰撞，连招，AI行为
&#13;
2.PunchAndKick                (C)
&#13;
https://github.com/lc-soft/PunchAndKick
&#13;
热血格斗传说C语言实现，手感还原，AI还原
&#13;
========================================
&#13;
东方风STG弹幕
&#13;
1.LuaSTGPlus                (C++)
&#13;
开源东方风STG编辑器
&#13;
桌子原版LuaSTG代码据说丢了，有人写了这个，顺便干掉了HGE和bass
&#13;
https://github.com/9chu/LuaSTGPlus
&#13;
2.CrazyStorm2                (C# SlimDX)
&#13;
https://github.com/xysz0824/CrazyStorm2.0
&#13;
开源弹幕编辑器
&#13;
3.东方百花宴                (C# SlimDX)
&#13;
还有之后发布的一些游戏，但是素材表现效果没有这个好
&#13;
特点，弯曲激光C#实现，节奏弹幕
&#13;
4.东方幕华祭春雪篇        （C# XNA)
&#13;
基于CrazyStorm，关卡设计，Boss设计值得学习</description>
      <content:encoded><![CDATA[<p><b>eggplant: </b><br>
<span>不能发贴简单回楼用</span><br>
<span> 本帖最后由 eggplant 于 2020-3-5 11:30 编辑 </span><br>
<span>简单回点有用的开源游戏链接，游戏这东西其实能读源码比看教程有用，</span><br>
<span>当然这仅仅是对我个人而言，每个人学习方法不同，或许有人更习惯看教程。</span><br>
<span>========================================</span><br>
<span>2D Platformer</span><br>
<span>1.Mario clone                (C++)</span><br>
<span>https://github.com/MitchellSternke/Mario</span><br>
<span>2.还是马里奥                (C++)</span><br>
<span>https://github.com/atraczyk/2d-engine</span><br>
<span>3.Gamemaker马里奥        (GM)</span><br>
<span>Gatete Mario Engine</span><br>
<span>原网页链接打不开了，只能给个工程名字，还原度非常高的马里奥3复刻，主要基于GM的像素碰撞检测</span><br>
<span>4.盐与避难所 Salt and Sanctuary                (C# XNA)</span><br>
<span>基于Tile和坐标点的碰撞检测</span><br>
<span>5.Celeste 蔚蓝                (C# XNA)</span><br>
<span>6.开源索尼克                (C)</span><br>
<span>之前用VS编译过一个老版本，最近几年没碰过</span><br>
<span>https://sourceforge.net/projects/opensnc</span><br>
<span>========================================</span><br>
<span>2.5D 横版过关，Beat them up</span><br>
<span>1.FIGHT N RAGE                (C# OpenTK)</span><br>
<span>类似卡普空街机2.5D横版过关游戏，Tile地图，Box碰撞，连招，AI行为</span><br>
<span>2.PunchAndKick                (C)</span><br>
<span>https://github.com/lc-soft/PunchAndKick</span><br>
<span>热血格斗传说C语言实现，手感还原，AI还原</span><br>
<span>========================================</span><br>
<span>东方风STG弹幕</span><br>
<span>1.LuaSTGPlus                (C++)</span><br>
<span>开源东方风STG编辑器</span><br>
<span>桌子原版LuaSTG代码据说丢了，有人写了这个，顺便干掉了HGE和bass</span><br>
<span>https://github.com/9chu/LuaSTGPlus</span><br>
<span>2.CrazyStorm2                (C# SlimDX)</span><br>
<span>https://github.com/xysz0824/CrazyStorm2.0</span><br>
<span>开源弹幕编辑器</span><br>
<span>3.东方百花宴                (C# SlimDX)</span><br>
<span>还有之后发布的一些游戏，但是素材表现效果没有这个好</span><br>
<span>特点，弯曲激光C#实现，节奏弹幕</span><br>
<span>4.东方幕华祭春雪篇        （C# XNA)</span><br>
<span>基于CrazyStorm，关卡设计，Boss设计值得学习</span><br>
</p><p><b>w30of: </b><br>
<span>我帮补充一下</span><br>
<span>个人很喜欢matt make games，横版开发经验十年有余的老将</span><br>
<span>Celeste角色部分源码：</span><br>
<span>https://github.com/NoelFB/Celeste</span><br>
<span>实现方式真的粗暴</span><br>
<span>TowerFall Physics 塔倒的物理系统文章</span><br>
<span>https://mattmakesgames.tumblr.com/post/127890619821/towerfall-physics</span><br>
</p><p><b>mes: </b><br>
<span>看码就太辛苦了，虽然可以试试，但是至少还是想要地图编辑器，比如能配合tiled使用的，反正也看过一下SDL的，就显示个hello也有一大堆，最后也要close些什么，觉得暂时还是</span><br>
</p><p><b>asion617: </b><br>
<span>mark一下</span><br>
</p><p><b>woodcoin: </b><br>
<span>光看这个</span><br>
<span>C#似乎是最适合独立游戏作者自编的语言？</span><br>
</p><p><b>mes: </b><br>
<span>不如说说怎么编译？要说为什么难这也是个问题。</span><br>
</p><p><b>w30of: </b><br>
<span>woodcoin 发表于 2020-3-5 14:55</span><br>
<span>光看这个</span><br>
<span>C#似乎是最适合独立游戏作者自编的语言？</span><br>
<span>门槛低，语法糖多，Windows开发环境配置方便</span><br>
<span>不过主要还是得益于XNA和Unity在独立开发者社群中的影响吧</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-5 14:58</span><br>
<span>不如说说怎么编译？要说为什么难这也是个问题。</span><br>
<span>第一个项目：</span><br>
<span>Compiling</span><br>
<span>You will need a compiler supporting C++11. So far, only mingw-w64-g++ 4.8 on Windows has been used, although the code is very portable. You will also need the following libraries:</span><br>
<span>SDL2</span><br>
<span>SDL2_mixer</span><br>
<span>opengl</span><br>
<span>DevIL</span><br>
<span>boost</span><br>
<span>rapidxml</span><br>
<span>如果那个工程支持独立编译运行，如何编译作者都会写在ReadMe里的呀</span><br>
</p><p><b>爱护动物抓根宝: </b><br>
<span>马克一下。</span><br>
</p><p><b>Smile_D_up: </b><br>
<span>—— 来自 OnePlus GM1910, Android 10上的 S1Next-鹅版 v2.2.0.1</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-5 15:23</span><br>
<span>第一个项目：</span><br>
<span>Compiling</span><br>
<span>You will need a compiler supporting C++11. So far, only mingw-w64-g++ 4.8 o ...</span><br>
<span>这些libraries就是个谜，怎么包括的，路径之类，还要改电脑属性之类，如果mingw还好，好像还能网上自动安装，还有如果自己写那就没项目文件了，又怎么编译？</span><br>
</p><p><b>seducer0719: </b><br>
<span>说到马里奥…我记得PC上有一个只有几关的马里奥…具体几关忘记了…但是全打完会自动回到第一关重新开始…印象里是Pascal写的（存疑）…这个不知道有源码么</span><br>
<span>—— 来自 OnePlus ONEPLUS A6010, Android 10上的 S1Next-鹅版 v2.2.0.1</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-5 15:43</span><br>
<span>这些libraries就是个谜，怎么包括的，路径之类，还要改电脑属性之类，如果mingw还好，好像还能网上自动安 ...</span><br>
<span>他用这个mingw我接触的不是很多</span><br>
<span>不过我用过这些库，boost、rapidxml啥的下载下来的都是一些.hpp .cpp啥的</span><br>
<span>下载下来再放在mingw的那个库路径里就行了</span><br>
<span>搜一下相关答案很多</span><br>
<span>https://stackoverflow.com/questions/4537377/add-extra-include-lib-paths-to-mingw</span><br>
<span>自己写没项目文件啥意思？</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-5 16:26</span><br>
<span>他用这个mingw我接触的不是很多</span><br>
<span>不过我用过这些库，boost、rapidxml啥的下载下来的都是一些.hpp .cpp啥的 ...</span><br>
<span>如果自己写一堆.c文件。</span><br>
</p><p><b>Lunamos: </b><br>
<span>只要是想做游戏而不是做引擎，物理、渲染、资源管理这些底层轮子都别碰了。从GL、SDL、XNA开始写看起来是要酷一些，但都是历史的烟尘。现在的独立作者没有不从通用引擎开始的理由。</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-5 17:06</span><br>
<span>如果自己写一堆.c文件。</span><br>
<span>c文件的话 我所知是用cmake 配置好可以直接生成.exe</span><br>
<span>网上随便找个教程</span><br>
<span>https://zhuanlan.zhihu.com/p/74070812</span><br>
<span>再配合官方文档</span><br>
<span>https://cmake.org/cmake/help/latest/guide/tutorial/index.html</span><br>
<span>呃……你确定要折腾这玩意？</span><br>
<span>如果从这步开始折腾的话，你之后还会碰一鼻子灰</span><br>
<span>并且与最开始的意愿已经大相径庭了，现在也很少从这开始开发的</span><br>
<span>我建议还是只看代码学习一下</span><br>
<span>感觉有点偏离主题，要不要删一下贴？</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-5 18:18</span><br>
<span>c文件的话 我所知是用cmake 配置好可以直接生成.exe</span><br>
<span>网上随便找个教程</span><br>
<span>https://zhuanlan.zhihu.com/p/7407 ...</span><br>
<span>我已经碰过了，反正也只是碰碰，其他有心人可以再努力点，我个人还是推荐经典2D游戏用Sdl这些比较高效的。</span><br>
</p><p><b>mes: </b><br>
<img src="https://i.niupic.com/images/2020/03/06/6YIA.jpg" title="https://i.niupic.com/images/2020/03/06/6YIA.jpg"><br>
<span>问个纯属技术上感兴趣，因为现在肯定没人想写，3D碰撞的问题。某3D塞尔达似乎是只有向上永远对齐Y轴的圆柱和可以不对齐任何轴的三角形和四角形（也许可以看成两个三角形），那么怎么算它们有没有碰撞？</span><br>
<span>github.com/n64decomp/sm64/blob/master/src/engine/surface_collision.c</span><br>
<span>听说和mario 64比较像，不过看不懂。</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1530367[0-50]</guid>
    </item>
  </channel>
</rss>
