<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>关于魂系列的判定范围</title>
    <link>https://bbs.saraba1st.com/2b/</link>
    <description>关于魂系列的判定范围</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 09 Jul 2020 15:47:46 +0000</lastBuildDate>
    <item>
      <title>关于魂系列的判定范围[50-100]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1917034-1-1.html</link>
      <description>关于旧2d游戏的判定框&#13;
看游戏制作教程没遇到过详细介绍怎么制作这部分的，不知哪比较有详细的资料，除了多大以外还有持续多少秒，最好有视频动图之类。
&#13;
还是格斗游戏的比较常见。</description>
      <content:encoded><![CDATA[<p><b>mes: </b><br>
<span>洗刷刷 发表于 2020-3-4 16:41</span><br>
<span>我还没怀疑你数学不好你到考虑起我的年龄来了？？</span><br>
<span>我这个例子就是最简单的一个移动的二次函数，你连求解 ...</span><br>
<span>哈哈哈哈，就当是吧，不是的话老师就太惨了。</span><br>
<span>那认真说吧，退一步不用标准物理公式，那也肯定是更简单的式子而不是什么“移动的二次函数”。</span><br>
</p><p><b>w30of: </b><br>
<span>这个就是一个编辑器，逐帧查看或者按事件查看动画</span><br>
<span>并能让设计师在指定帧上配置hitbox、hurtbox、硬直等信息然后按特定的格式保存</span><br>
<span>然后程序运行时读取这个数据文件，在动画播放到指定位置的时候进行判定检测</span><br>
<span>步骤无非是：读动画，定格动画到指定帧/时间，画判定，填数据，序列化保存</span><br>
<span>要制作的话理解原理其实是比较简单的，就是个填表软件</span><br>
<span>要难一点的话也就是要让游戏好玩合理，你需要经常更改判定的配置，所以需要反复测试非常多次</span><br>
<span>那么这一套框架最好做的能快速在运行时/编辑器状态切换来验证你的配置</span><br>
<span>编辑器中需要配置哪些东西，这里有一篇应该会提供帮助：</span><br>
<span>A Glossary of Fighting Game Terminology</span><br>
<span>https://tiltingatpixels.com/post/Terms-to-know-during-EVO/</span><br>
<span>至于你说为什么圆形判定用方的，我的理解是判定框对玩家不可见，只要合理，有说服力即可用</span><br>
<span>大乱斗的判定区域是圆形，什么你躯干长条凳，他判定都是圆形，这也并不影响游戏好玩</span><br>
<span>你要是非想让判定符合图像，也有办法，就像楼里朋友图里说的骷髅女孩</span><br>
<span>用常用的计算图片填充率的方法生成一下动画中对应帧的多边形数据，然后点选哪些多边形是Hitbox、哪些是hurtbox就好了</span><br>
<span>用圆形还是用什么奇怪的形状，都可以的，但判定区域只是工具，你做精确是完全可以，但没必要，开发量的处理也是个人开发游戏的重中之重</span><br>
<span>至于手感，攻方受方多少硬直才合适取决于你自己的决定，这是另一门学问了</span><br>
<span>我自己是在用Spine库做一套这种框架，也乐于见得跟老哥们讨论的呀</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span>w30of 发表于 2020-3-4 17:02</span><br>
<span>这个就是一个编辑器，逐帧查看或者按事件查看动画</span><br>
<span>并能让设计师在指定帧上配置hitbox、hurtbox、硬直等信息 ...</span><br>
<span>大乱斗是3D游戏直接骨骼绑胶囊体了,这样其实最省事也最符合实际观感,但是也会有2D3D视角错觉导致的一些额外问题</span><br>
</p><p><b>洗刷刷: </b><br>
<span>mes 发表于 2020-3-4 17:00</span><br>
<span>哈哈哈哈，就当是吧，不是的话老师就太惨了。</span><br>
<span>那认真说吧，退一步不用标准物理公式，那也肯定是更 ...</span><br>
<span>从物理来说当然是起跳速度和重力系数决定最大高度，但是从游戏设计来说没人会这么搞的，都是先确定角色能跳的最高高度，然后选择合适的重力系数控制下落速度和滞空时间（影响游戏体验），倒推回应该给与的初始起跳速度。懂吗？</span><br>
<span>这你要还是看不懂我一定会扣你鹅</span><br>
</p><p><b>mes: </b><br>
<span>kraxia 发表于 2020-3-4 16:49</span><br>
<span>嗯嗯，继续聊下去的话还是会有一些技术点可以说的。之所以我喜欢提格斗游戏，是因为如果你能实际做出一个 ...</span><br>
<span>怎么做简单也是一种技术，用方形做出斜射弹的好像还真见过，在不能完全框住怎么框也是一种技术，还有是只能用一个框的话怎么画动作也是一种技术，格斗比较起来就太自由了点。</span><br>
</p><p><b>mes: </b><br>
<span>洗刷刷 发表于 2020-3-4 17:23</span><br>
<span>从物理来说当然是起跳速度和重力系数决定最大高度，但是从游戏设计来说没人会这么搞的，都是先确定角色能 ...</span><br>
<span>没有人会用绿色的跳法谢谢，你应该从脚开始画，是不是就很明显了？以前墙又不会给个摩擦力，就算碰到墙一样可以跳过。</span><br>
<span>总之就是，哎，为什么搞这么复杂，脚开始，最高碰到平台，最高点在墙或者右边就是过去了，还是得……好好学习，我的意思是如果确定了最高点的话……哎，算了看看有没别人能看懂我列的式子吧。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span> 本帖最后由 虎纹鲨鱼鱼鱼 于 2020-3-4 17:41 编辑 </span><br>
<span>mes 发表于 2020-3-4 17:35</span><br>
<span>没有人会用绿色的跳法谢谢，你应该从脚开始画，是不是就很明显了？以前墙又不会给个摩擦力，就算碰到墙一 ...</span><br>
<span>如果你按照你的想法做一下你就知道你做出来的这个平台跳跃根本没法玩...</span><br>
<span>说真的,自己弄个UE4鼓捣鼓捣就能明白很多东西,很多游戏类型都有模板可以直接研究各项参数细节以及具体实现</span><br>
<span>比起在论坛上打嘴炮,你还是太缺很多实践的东西了,你说出来的很多东西明显是没做过才会这么想当然的</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-4 17:02</span><br>
<span>这个就是一个编辑器，逐帧查看或者按事件查看动画</span><br>
<span>并能让设计师在指定帧上配置hitbox、hurtbox、硬直等信息 ...</span><br>
<span>那种圆形恐怕已经不一样，直接物理引擎，完全另一回事，以前大概是这种算法</span><br>
<span>(x2-x1)^2+(y2-y1)^2与半径（a+b）^2比较</span><br>
<span>格斗暂时没打算深入了，但还是谢谢材料。</span><br>
</p><p><b>mes: </b><br>
<span>虎纹鲨鱼鱼鱼 发表于 2020-3-4 17:40</span><br>
<span>如果你按照你的想法做一下你就知道你做出来的这个平台跳跃根本没法玩...</span><br>
<span>说真的,自己弄个UE4鼓捣鼓捣就能 ...</span><br>
<span>所以说你们不在乎，这么新用物理引擎的游戏引擎是不适合做“像素”游戏的，反正不懂就不懂，我只弄懂我想弄懂的，别人懂不懂，我觉得没闲心管。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span>算了,感觉回了这么多帖子的我脑子简直有问题</span><br>
</p><p><b>w30of: </b><br>
<span>其实用两点间距离 小于 两圆半径和这样算更快</span><br>
<span>想再快还可以不开方判断</span><br>
<span>不过判定这部分不会是性能瓶颈的</span><br>
<span>不过就像楼上所说的 两个坐标轴绑定骨骼 加上用半径缩放来配合角色动作以改变判定区域</span><br>
<span>这个会降低设计师的编辑工作量</span><br>
<span>尤其是hurtbox的编辑不会像老游戏那样累人</span><br>
<span>但大乱斗这个判定的设计比较异类 或者说有灵性</span><br>
<span>相比格斗游戏 大乱斗应该更适合或近似你的需求</span><br>
</p><p><b>w30of: </b><br>
<span>怎么点了回复却还是丢引用呢</span><br>
</p><p><b>cjcjason: </b><br>
<span>你看到老游戏的这些判定框都是不断测试迭代调出来的，你的角色实际大小跟洛克人马里奥又不一样。</span><br>
<span>参考意义在研究手感，跟自己的效果做对比，哪里该停顿，哪里该加帧，不是去纠结为啥他是方的圆的。</span><br>
<span>跳跃的话也是一样的，网上character controller的例子那么多，拿来改改看看代码怎么写的自己也会实现了，但是参数还是要自己调的，你想轻飘飘还是沉甸甸都看你自己的想法。</span><br>
</p><p><b>电风扇: </b><br>
<span>mes 发表于 2020-3-4 16:25</span><br>
<span>如果你这么觉得可以@卡普空试试。</span><br>
<span>这也不是只是一个框的问题，持续时间呢？而且这么一说就只能说明你们不 ...</span><br>
<span>为什么你什么都要问别人？为什么你自己不思考？</span><br>
<span>是你自己要做游戏还是要网友手把手教你做游戏？</span><br>
<span>我现在用全是问句的方式和你对话，你难受不难受？你有没有考虑过别人难受不难受？</span><br>
<span>回到正题上来，你可能有一个误区：你认为旧游戏的每一个判定框这么设计都有它的道理，</span><br>
<span>你有没有考虑过其实没想太多的可能性，其实只是节约机能/只要不太离谱就行</span><br>
<span>就拿圆弧斩实际是方形判定框来讲，我们都知道圆弧斩肯定是圆弧形的碰撞判定才准确，方的不准确</span><br>
<span>那仔细想想，方形判定框在哪些场合劣于弧形判定框，又在哪些场合可以近似替代弧形判定框？</span><br>
<span>这个不难想明白，当你用攻击判定的前端去撩别的物体（格斗游戏中常见的情形），方形和弧形是一样的</span><br>
<span>只有当你要用斜上/斜下判定去攻击的时候，方形框会看到刀光覆盖了被击物体却打不中，而弧形框可以打中</span><br>
<span>那么问题来了，具体到某个游戏，这种斜向攻击判定的情形多不多，决定了有没有必要采用更耗费机能的弧形框</span><br>
<span>以及，上面是问题1，接下来还有问题2</span><br>
<span>我们知道不管是骨裂勾脚还是zero的光剑劈砍，其攻击判定本质是一个长条物体快速转动，拉出的弧光其实是对视觉暂留现象的模拟（以及美术上的考虑）</span><br>
<span>换句话说其实你要追求真实的话，沿着攻击轨迹快速变换位置的长方形框反而是准确的，弧光有没有攻击判定反而是次要的</span><br>
<span>那么问题来了：弧光盖到了敌人却没有算你攻击到，这会让玩家不爽。那么我在设计判定框的时候，应该向真实严谨的方向靠拢，还是向夸张豪迈的方向靠拢？</span><br>
<span>这个问题没有标准答案，取决于游戏中需要什么样的体验（比如鬼泣4尼禄可以刀光残留判定长的一逼，街霸中的骨裂就必须收敛），以及你想呈现给玩家什么样的体验</span><br>
</p><p><b>蕾丝控: </b><br>
<span>s32244153 发表于 2020-3-4 08:44</span><br>
<span>想到这个...</span><br>
<span>最后一格喷了</span><br>
<span>—— 来自 HUAWEI HLK-AL00, Android 9上的 S1Next-鹅版 v2.2.0.1</span><br>
</p><p><b>weiweiEX: </b><br>
<span>模拟器里可以直接弄到这些帧数之类的数据吧</span><br>
</p><p><b>mes: </b><br>
<span>电风扇 发表于 2020-3-4 19:25</span><br>
<span>为什么你什么都要问别人？为什么你自己不思考？</span><br>
<span>是你自己要做游戏还是要网友手把手教你做游戏？</span><br>
<span>我现在用 ...</span><br>
<span>说真的我想过了，and怀疑很多回帖的没想过，你知道看那些教程会遇到什么吗？明白3D旋转是怎么回事吗？想过2d俯视游戏物体是怎么分层的吗？我问了这些了吗？</span><br>
<span>我也明白这种框普通又看不见，要不是真的喜欢的游戏里大概不会知道，那不知道就完了，干嘛还要我反问？</span><br>
<span>正题就是，如果要还原这种节约机能该如何，最好能做到什么程度。</span><br>
<span>还有就是前面也说了，这些是算出来的，弄个弧形框怎么算和别的形状有没有重叠呢？就算能算，算得再漂亮也不符合当年的“机能”吧。</span><br>
<span>还有这些正是不懂的表现，如果至少想过“这要算出来”就不会说出弧形框了，也不会问这判定要在图像前还是后。当然我也不懂，不然问啥？</span><br>
<span>还有一点让人很不爽的是你们觉得这就“性能问题”就完了，要是当年的制作人员都这样那我们就只有一大堆sh t game了，看到一些FTG判定框图也能感到某种坚持，看来这种坚持真的传不下去了吧。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-4 23:02 编辑 </span><br>
<span>weiweiEX 发表于 2020-3-4 20:01</span><br>
<span>模拟器里可以直接弄到这些帧数之类的数据吧</span><br>
<span>可能可以吧，speedrun的人也应该熟得不得了，但我需要大量比较容易看的形式，就像格斗游戏那些判定框和帧数图。</span><br>
<span>聊胜于无了</span><br>
</p><p><b>yyman1980: </b><br>
<span>   这就是一感觉！</span><br>
</p><p><b>w30of: </b><br>
<span> 本帖最后由 w30of 于 2020-3-4 23:51 编辑 </span><br>
<span>mes 发表于 2020-3-4 20:17</span><br>
<span>可能可以吧，speedrun的人也应该熟得不得了，但我需要大量比较容易看的形式，就像格斗游戏那些判定框和帧 ...</span><br>
<span>难得有同好呀</span><br>
<span>看你第一帖问“如何制作这部分”，我还以为你问如何制作判定编辑器，原来是想找前人怎么放置判定框比较合理的资料……</span><br>
<span>横板游戏判定框确实有一些可研究的地方</span><br>
<span>但你的敌人美术形象是什么样的，判定框在哪里舒服，你想让玩家哪招打中哪种敌人，得根据你的游戏来</span><br>
<span>还要在运行时来回砍中击中测试才能感觉出来怎么回事</span><br>
<span>分析完这些老游戏，也没法一笔就画出契合你的游戏的完美的判定框，至少也不会减少多少测试次数，你还是得测</span><br>
<span>除非你直接扣他的图用，然后照着它的判定框抄</span><br>
<span>等你测完了，你会发现你做这么个东西也能总结出看那些老游戏所总结出的东西</span><br>
<span>它的学问要是真这么深，各大开发社区不会少讨论的，你去看看大家在讨论什么，健壮的2D平台跳跃碰撞，格斗游戏的碰撞盒，是这些</span><br>
<span>更何况现在的横板游戏开发有更加新的知识，内容也比老横板游戏复杂</span><br>
<span>有这时间自己写个玩具测测都值呀：</span><br>
<span>另外那个射击游戏，对于同一个部位，不同方向射入的**，判定框可以是不同的，目的是为了让**打在敌人“内部”</span><br>
</p><p><b>凉宫绿豆沙: </b><br>
<span>w30of 发表于 2020-3-4 23:36</span><br>
<span>难得有同好呀</span><br>
<span>看你第一帖问“如何制作这部分”，我还以为你问如何制作判定编辑器，原来是想找前人怎么放置 ...</span><br>
<span>这个小人太熟悉了，spine自带工程之一，demo也会出场的角色。</span><br>
</p><p><b>屑猫猫: </b><br>
<span>码了码了，这帖子干货量很高，谢谢各位坛友</span><br>
<span>-- 来自 能手机投票的 Stage1官方 Android客户端</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-4 23:36</span><br>
<span>难得有同好呀</span><br>
<span>看你第一帖问“如何制作这部分”，我还以为你问如何制作判定编辑器，原来是想找前人怎么放置 ...</span><br>
<span>这也包括人物比例和敌方人物比例，玩家的敌人近身攻击伸多长比较合理，大型BOSS都有些什么形式等，</span><br>
<span>横版的话鉴于我也没啥技术力，目前考虑学自己重写整个“物理”，因为用物理系统也好像没法解决的有斜坡上以人物底部正中间为接触点，如果是马奥能踩敌人，真没想好如何完全准确区分是“踩”还是“侧碰”了，移动平台移动人的码在哪里才能完全同步，还有除此以外的像梯子还没考虑过，反正搁置。对我来说也就技术上看看某些部分，最后能做出游戏当然好，但不是目的。</span><br>
<span>还有就是教程都太基本，至少我看过的免费教程，比如打飞机，怎么做哪些固定路线移动的敌机并没有教，要做当然我随便搞搞是能出来，但更想知道有哪些方法，有什么特点于是用哪种比较好。</span><br>
</p><p><b>vhk908: </b><br>
<span>感谢各路大神分享经验...</span><br>
</p><p><b>zag: </b><br>
<span>mes 发表于 2020-3-4 00:46</span><br>
<span>射击出来的当然简单，教程也做射击游戏多，问题是近身攻击怎么配合视觉作出判定框。</span><br>
<span>话说怎么做轨道曲线和 ...</span><br>
<span>弹幕游戏有优化算法的，比如sweep and prune，然后结合空间分割，这块感兴趣可以读《the nature of code》</span><br>
</p><p><b>mes: </b><br>
<span>洗刷刷 发表于 2020-3-4 17:23</span><br>
<span>从物理来说当然是起跳速度和重力系数决定最大高度，但是从游戏设计来说没人会这么搞的，都是先确定角色能 ...</span><br>
<span>反正很闲，就当你认真的吧，不过再说一遍我可不是老师，是的话早气死了。就说一般数学解题思路，就是化简，以前人们以为地球是中心，结果星星运行轨道乱成一团，所以这个从身体开始画线我真的不懂是想干什么。</span><br>
<span>另外我没见过蓝色跳不过去的旧游戏，要是能攀墙，那就不会这么设计，因为很明显会出现这种难受的情况。为什么能跳过是因为移动逻辑是水平和垂直分开，虽然水平被挡，但垂直还是会移动到最顶。只是如果你也做游戏，那我知道为什么，因为你把人物物理斜着“拖”到墙上，就完全被挡住了 ，但这当然能解决，而且完全不符合游戏的逻辑，不管是做游戏还是玩游戏都不该有这种想法。</span><br>
</p><p><b>zzy516232108: </b><br>
<span> 本帖最后由 zzy516232108 于 2020-3-5 07:45 编辑 </span><br>
<span>s32244153 发表于 2020-03-04 08:44:23</span><br>
<span>想到这个...</span><br>
<span>能不能问一下这里红框和蓝框有什么区别啊</span><br>
<span>不用了，一大早没睡醒脑子短路了，问了这么个弱智问题</span><br>
<span>-- 来自 能手机投票的 Stage1官方 Android客户端</span><br>
</p><p><b>w30of: </b><br>
<span>凉宫绿豆沙 发表于 2020-3-5 00:40</span><br>
<span>这个小人太熟悉了，spine自带工程之一，demo也会出场的角色。</span><br>
<span>是的就是spine自带的</span><br>
<span>基础动作齐全 还有个攻击 测试经常用</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-5 00:56</span><br>
<span>这也包括人物比例和敌方人物比例，玩家的敌人近身攻击伸多长比较合理，大型BOSS都有些什么形式等，</span><br>
<span>横版 ...</span><br>
<span>横版平台的话，我刚好有些经验，有一个拙作叫超级幻影猫，它的碰撞底层就是纯自己造轮子出来的</span><br>
<span>恰好实现了人物底部中央接触地面，同时也实现了平路下斜坡角色会“黏”在地上而不是按自由落体飞开地面</span><br>
<span>而要实现底部中心点接触地面，以在斜坡上让角色的脚“插入”到地面里，有好几种方案</span><br>
<span>把角色碰撞视为点，再将地面的实际碰撞区域放大，大于视觉上的碰撞区域</span><br>
<span>角色碰撞仍是矩形，让美术把斜坡的高度增高，但实际碰撞区比斜坡低</span><br>
<span>干脆用菱形作为角色的碰撞框</span><br>
<span>等等等等</span><br>
<span>幻影猫用的是第一种方法</span><br>
<span>这也不是从看老游戏判定框总结出来的</span><br>
<span>是看老游戏，而不看判定框自己总结出来的</span><br>
<span>踩跟侧碰的判定模糊，具体情况在于角色判定与敌人收集框重叠时，角色在敌人九宫格的左上或右上方，并且这时判定框重叠区接近正方形时候</span><br>
<span>这个时候可以根据速度的方向判断是侧碰还是踩踏</span><br>
<span>都是一个大于号小于号就解决的问题，没那么复杂</span><br>
<span>实际的效果，最后还是会根据你的游戏调整，我制作的那款游戏，最终选择踩踏判定不用角色的物理碰撞区判断，为了让手机玩家更舒服点，完全换了另外一种方式……</span><br>
<span>另外现在老外不少游戏都是用射线判断，什么悬挂边缘检测都是射线，一个角色身上一堆射线，实在是太粗暴了</span><br>
<span>但对现在的机能来说，都不是事，它就是跑的很好</span><br>
<span>https://twitter.com/ironicaccount/status/1230135605369044995具体做法在评论里</span><br>
<span>说教程不讲这点我不同意，教程负责带入门，或者讲一些重要的部分，这些细节没法讲</span><br>
<span>这些细节学问也没深到需要讲</span><br>
<span>每款游戏都可能不同，完全依照你的设计来决定，教程不会细到给你讲这些</span><br>
<span>要是讲这些，那真的是手把手教你做游戏了</span><br>
<span>做出来的游戏也不过是他的仿制品</span><br>
<span>每个人做出来的都一样，这样好吗？</span><br>
<span>这些办法都是要自己想去解决的，也不难解决，站在前人肩膀上也不是站这些个点</span><br>
<span>顺便加鹅那位说新手教程没干货，怎么可能</span><br>
<span>The guide to implementing 2D platformers</span><br>
<span>http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/</span><br>
<span>够新手吧，上来就告诉你四种方法，楼梯也提到了，我觉得你应该看过</span><br>
<span>N+作者的教程，大到地图数据结构，小到分离轴碰撞算法法都给你讲的很细，还给源码</span><br>
<span>而且他的游戏角色会根据地面倾斜度改变角色角度，又从另一个角度解决底部中央接触地面问题，作者也没有教你，但实现方式也不难，完全可以自己做</span><br>
<span>https://www.metanetsoftware.com/technique/tutorialA.html</span><br>
<span>https://www.metanetsoftware.com/technique/tutorialB.html</span><br>
<span>这还都是十年前的资料了</span><br>
</p><p><b>Errey: </b><br>
<span>时间就是这么被浪费的，这么多时间不去设计关卡，研究为什么一个圆弧斩为什么用一个大方块，为什么不用3个长方形拼起来，为什么不跟着样子描</span><br>
<span>-- 来自 能手机投票的 Stage1官方 Android客户端</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-5 09:57</span><br>
<span>横版平台的话，我刚好有些经验，有一个拙作叫超级幻影猫，它的碰撞底层就是纯自己造轮子出来的</span><br>
<span>恰好实现 ...</span><br>
<span>要实现应该不是不能，但如果在制作那边了，那就还有这样做“好不好看”，还有既然都要扔掉物理了，那等能做出这种程度再继续。</span><br>
<span>info.sonicretro.org/SPG:Solid_Tiles</span><br>
<img src="https://i.niupic.com/images/2020/03/05/6Y8e.jpg" title="https://i.niupic.com/images/2020/03/05/6Y8e.jpg"><br>
<span>仿制是没关系的，只要有自己的东西，以前的游戏不也一堆类似，当然那时就算说像也差很远。</span><br>
<span>所以说我没技术力，必须具体到能做出整个范例，抛去物理首先要面对的问题就是地图怎么办，u ity的逻辑是现实和碰撞是分开的，就是说默认只是它从图块生成了碰撞形状，如果不用它的物理引擎，那怎么另外弄个地图数据已经是问题。</span><br>
</p><p><b>mes: </b><br>
<span>题外话，为什么说物理引擎不适合做“像素”游戏？我试过的其实只有平台游戏，原理上，比较简单来说就是如果两个碰撞判定从分开到碰在一起，会知道碰的那一点上对方表面的角度和陷入的距离，那就能比如按那个表面的垂直线移动那个距离而分开到刚好接触，但是如果已经陷入了呢？没有办法，因为已经没有表面，要么掉下去，要么飞上天你们自己选。如果用来做单方向平台，就是说只有向下能站的平台</span><br>
<img src="https://i.niupic.com/images/2020/03/05/6Y8V.jpg" title="https://i.niupic.com/images/2020/03/05/6Y8V.jpg"><br>
<span>单做这么一个是不难的，但是</span><br>
<img src="https://i.niupic.com/images/2020/03/05/6Y91.jpg" title="https://i.niupic.com/images/2020/03/05/6Y91.jpg"><br>
<span>这种情况，就是刚好进入另一个平台的区域，就会失去“表面”，就会直接掉下去。</span><br>
<span>其他还用多说吗？做游戏多么快乐</span><br>
</p><p><b>汪达: </b><br>
<span> 本帖最后由 汪达 于 2020-3-5 11:20 编辑 </span><br>
<span>mes 发表于 2020-3-4 20:08</span><br>
<span>说真的我想过了，and怀疑很多回帖的没想过，你知道看那些教程会遇到什么吗？明白3D旋转是怎么回事吗？想 ...</span><br>
<span>你考证这个如果是为了应用，有人告诉你老游戏是出于省性能省事其实是相当负责的说法。因为把受创判定做到空气上都是绝对绝对不会符合玩家心理预期的设计，不是因为省事，那图什么？</span><br>
<span>你要是硬解释，那也可以考虑几种可能。</span><br>
<span>可能性1：判定框太窄可能游戏里某些快速的子 弹会跃过判定框，做这么宽这些子 弹就不用优化判定了。</span><br>
<span>可能性2：洛克人来自垂直方向的攻击较少，且很多垂直方向的攻击是炸 弹，所以哪怕头部的判定已经明显偏离视觉判断，但根据脚制作受创判定会更符合设计者的预期效果。</span><br>
<span>等等等等。</span><br>
<span>但游戏里有没有这么快的子 弹，或者有没有其他什么原因，还是需要花费很多时间来理解、计算、印证的，而且最后可能发现并没有，您笑话别人缺乏坚持，那还是劳您大架，自己琢磨吧。再说归根结底，完全可以用更复杂的方式实现更好的效果。理由还是那句话，把受创判定做到空气上都是绝对绝对不会符合玩家心理预期的设计，不是因为省事，那图什么？</span><br>
<span>如果你觉得游戏公司这么做不是冲着省性能省事，而是有什么精妙的哲思与构想，你倒是说出个理由来，难不成你的意思是格斗游戏那么费心做判定，所以射击游戏肯定也是在判定上下了苦功夫的？那格斗游戏也没把头的判定做那么大吧。</span><br>
<span>别人好心告诉你，老游戏其实没那么讲究，人家更在意开发效率吧，你觉得不可能。让你自己去试试吧，估算下开发效率差距会有多大，换你你会不会那么讲究，你又说自己试“效率”不高，连试都懒得试。觉得效率不是问题的是你，觉得效率是大问题的也是你。别人好心建议重视效率，结果你一个连自己试试都懒得试的，反倒笑话别人不懂“坚持”，这我是没想到的。我是不知道你发这个帖子究竟是冲着什么来的，可能假期真的太长了。</span><br>
</p><p><b>GloryXie: </b><br>
<span>虎纹鲨鱼鱼鱼 发表于 2020-3-4 17:53</span><br>
<span>算了,感觉回了这么多帖子的我脑子简直有问题</span><br>
<span>我爬楼下来也为你觉得不值。不过你还有那位哥们讲的都挺好的。</span><br>
</p><p><b>mes: </b><br>
<span>汪达 发表于 2020-3-5 11:19</span><br>
<span>你考证这个如果是为了应用，有人告诉你老游戏是出于省性能省事其实是相当负责的说法。因为把受创判定做到 ...</span><br>
<span>要说可能性就太多了，要说游戏公司怎样还是等开过游戏公司再说吧。现在的玩家想不想要更复杂的方式也是个疑问，我觉得他们只想一直点触屏吧。与其说老游戏不讲究，不如说有讲究的地方也不知还有没人看得出来，那还有必要讲究吗？所以说可能流传不下来了。</span><br>
<span>要说游戏制作的话如果觉得假期长你也可以试试啊，我也懂得不多，更多技术上感兴趣，要是你能做出来的话可以再回来看看自己的回复。</span><br>
</p><p><b>w30of: </b><br>
<span> 本帖最后由 w30of 于 2020-3-5 12:27 编辑 </span><br>
<span>mes 发表于 2020-3-5 10:31</span><br>
<span>要实现应该不是不能，但如果在制作那边了，那就还有这样做“好不好看”，还有既然都要扔掉物理了，那等能 ...</span><br>
<span>地图数据怎么设计这个数据结构都可以</span><br>
<span>英文论坛很早就有用文本文件写地图的</span><br>
<span>用0表示空白 1表示地面 C表示金币 B表示砖块</span><br>
<span>碰撞就是Tile based基本9宫格碰撞法</span><br>
<span>我不太理解你说的现实和碰撞分开的是什么意思，Unity里OnCollision事件的触发时机确实不如人意</span><br>
<span>地图的话，目前独立游戏用的比较多的就是Tiled了，这个软件实在太出名</span><br>
<span>https://www.mapeditor.org/Tiled导入unity并渲染的包又非常多，还免费</span><br>
<span>另外这里有一个用Tiled实现整个洛克人的教程，绝对的干货</span><br>
<span>你可以看下它的静态地图是如何生成的</span><br>
<span>跟老游戏里可完全不一样了，但仍然能用</span><br>
<span>虽然我也不是很喜欢他这种，我自做还是用老式的9宫格碰撞</span><br>
<span>https://seanba.com/megadadadventures.html</span><br>
<span>顺带他也讲了下斜坡上脚悬空的其中一个处理方式</span><br>
</p><p><b>汪达: </b><br>
<span>mes 发表于 2020-3-5 12:01</span><br>
<span>要说可能性就太多了，要说游戏公司怎样还是等开过游戏公司再说吧。现在的玩家想不想要更复杂的方式也是个 ...</span><br>
<span>所以您虽然谦虚地说自己不知道，但实际上给自己预设的形象是什么都知道。隔着网线连我试没试过游戏制作都知道了。那就多谢您的建议了。</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-5 12:04</span><br>
<span>地图数据怎么设计这个数据结构都可以</span><br>
<span>英文论坛很早就有用文本文件写地图的</span><br>
<span>用0表示空白 1表示地面 C表示 ...</span><br>
<span>因为麻烦，本来我就没技术力，还是希望有RPG MAKER的易用程度。</span><br>
<span>是显示和碰撞分开，工作流程大概是，用内置画图块工具画图块，好像还会为图块自动生成碰撞形状，但可以调整，到游戏运行的时候，它会把整大片图块生成1个碰撞形状，就是说其实是在碰整个地图而不是分开一个个图块，这也就出现了82L的情况。</span><br>
</p><p><b>mes: </b><br>
<span>那我也不回了，只是如果有人问“为什么月亮和星星不会撞一起呢”就已经包含了太多信息，让我们都下台阶，要么说说真技术，要么发发判定框图OK?</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-5 10:57</span><br>
<span>题外话，为什么说物理引擎不适合做“像素”游戏？我试过的其实只有平台游戏，原理上，比较简单来说就是如果 ...</span><br>
<span>对于横版游戏，物理引擎最大的作用是角色行动，还有重叠判断+推挤</span><br>
<span>物理引擎不适合做像素游戏，是哪里不适合呢？</span><br>
<span>我可否理解你说的是，“通用物理引擎”不适合做像素横版动作游戏？</span><br>
<span>这个我也同意，通常游戏不是那么符合物理定律的，但没必要这样硬说出来</span><br>
<span>而且通用物理引擎合不合适，也得看使用的人会不会调校，不能一口断定</span><br>
<span>如果不用物理引擎，你还是得自己实现一套角色运动+碰撞物理</span><br>
<span>我也是这么做的，这一套东西，就是你自己游戏的“物理引擎”</span><br>
<span>既然你如此热爱这方面，也不必太担心技术力的问题，资料这么多，研究这么多，水到渠成</span><br>
<span>顺带说一下你第一张图，横版游戏做运动物体判断有一个很重要的辅助参数是last position</span><br>
<span>就是上一帧的位置，有了这个，在判断两物体重叠的时候，你就可以判定它是从哪个方向飞入的</span><br>
<span>然后你有推挤权重，谁推谁，推多少距离这些问题都变得非常好解决</span><br>
<span>第二张图，为什么会直接掉下去呢？</span><br>
<span>在物理中，角色每帧都会计算重力加速度，角色每帧都会下降，也就是说它每帧都会被左边的方块向上推挤</span><br>
<span>然后右边的方块还会把角色往左边推挤</span><br>
<span>实际的结果就是角色通过四叉树还是什么的数据结构，获取周围的对象，一个一个计算自己被推挤的坐标再相加</span><br>
<span>得到最终的位置</span><br>
<span>所以任何物理引擎，还是你自己制作的物理系统，玩家都会被这两个障碍物挡住，而不会掉下去</span><br>
<span>另一个可能是被挤上去，这个还是要看你的需求</span><br>
<span>至于更加细节的东西</span><br>
<span>https://www.metanetsoftware.com/technique/tutorialA.html</span><br>
<span>中 SECTION 5: Fast-Moving Objects 里有讲几种方法去处理你第一张图的情况</span><br>
<span>但这也不是什么困难的问题</span><br>
</p><p><b>w30of: </b><br>
<span>三连回帖一下</span><br>
<span>eggplant：有用的开源游戏链接，游戏这东西其实能读源码比看教程有用</span><br>
<span>https://bbs.saraba1st.com/2b/thread-1530367-1-1.html</span><br>
<span>帮那位不能回帖的发一下</span><br>
<span>顺便能否帮我扣个鹅，让我战斗力保持在5</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-5 12:19</span><br>
<span>因为麻烦，本来我就没技术力，还是希望有RPG MAKER的易用程度。</span><br>
<span>是显示和碰撞分开，工作流程大概是，用 ...</span><br>
<span>哦哦 那我86楼的回复里 那个洛克人实现的教程就有一个工具</span><br>
<span>自动生成多边形地图碰撞区，这种方法也可以自己写一个，拿到顶点生成多边形算法网上也有很多</span><br>
<span>技术力我觉得真不是什么问题，毕竟做横版游戏难的不在这</span><br>
<span>而且个人开发，这些作为常用工具的技术是大家都无法绕过的坎呀，没有什么捷径可走</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-5 12:25</span><br>
<span>对于横版游戏，物理引擎最大的作用是角色行动，还有重叠判断+推挤</span><br>
<span>物理引擎不适合做像素游戏，是哪里不适 ...</span><br>
<span>因为这是一个只对向下有反应的平台，首先最基本，不能用默认物理，所以是角色当成k字头的那种用脚本驱动的碰撞形状，陷入多少就拉出来，而这个平台则在这个基础上，只对角色有向下方向时才有反应，但是如果碰到另一个这种平台的左边或右边的话那就已经等于陷入了，因为它们是连在一起的，那物理系统再也不觉得是站在某个表面上，因为已经陷入，自然掉下去了。</span><br>
</p><p><b>w30of: </b><br>
<span>你是Rigibody设置成Kinematic</span><br>
<span>然后想在OnCollision事件里处理角色推挤对吧</span><br>
<span>这样角色会先陷入碰撞体再弹出来，最后的表现形式是角色在上面抖动</span><br>
<span>更复杂的碰撞情况还会有更多不可预知的结果</span><br>
<span>这个你要看一下他这个事件在Unity里发送的时机</span><br>
<span>我一开始也是这么想的，但我测试后认为这个时机适合用来处理碰撞重叠事件而不是推挤</span><br>
<span>所以我自己写了套流程，就在一个Update里，这样这些事件的时机就完全可控了</span><br>
<span>但意味着性能要你自己优化</span><br>
<span>如果你的游戏是画面比较高级，元素比较复杂的，还是推荐用通用的物理组件，有许多干出</span><br>
<span>至少他的碰撞计算并发处理比你自己写的效率高多了</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-5 12:47</span><br>
<span>因为这是一个只对向下有反应的平台，首先最基本，不能用默认物理，所以是角色当成k字头的那种用脚本驱动 ...</span><br>
<span>另外只对向下有反应的平台</span><br>
<span>你是说单向平台对吧</span><br>
<span>这个我实现的时候是记录上一帧坐标</span><br>
<span>用两帧做线段碰撞检测防止穿越的</span><br>
<span>毕竟单向平台是可以抽象成线的，而不是矩形</span><br>
<span>另外这个你要是在OnCollision里做的话也是会有抖动的</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-5 15:45 编辑 </span><br>
<span>w30of 发表于 2020-3-5 13:01</span><br>
<span>另外只对向下有反应的平台</span><br>
<span>你是说单向平台对吧</span><br>
<span>平台游戏很多教程和范例，会抖可能就是默认物理引擎，k那个完全不会抖，因为它纯脚本控制，只是它想去哪就去哪，没有东西可以挡着它，所以也用脚本，当它陷进图块时候就拉出来，当然无法保证它就永远不会陷入，因为这其实还是物理引擎，但我觉得这就是基础了，控制怎么动肯定是脚本，而不是当成默认物理块给它速度或其他（其实也是脚本）。</span><br>
<span>至于线不知道如何实现，如果自己另外写一套那已经可以不用这种物理。</span><br>
<span>另一个问题</span><br>
<span>learn.unity.com/project/survival-shooter-tutorial/</span><br>
<span>以前还有项目下载，现在好像没了，这个的问题是，我觉得鼠标瞄准的地方不是我想射的地方。</span><br>
<span>那么一般这种视角鼠标瞄准的到底是什么呢？怎么实现呢？</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-6 16:32 编辑 </span><br>
<span>回帖顶顶，还有其实不太记得，而且搁置了目前并不想翻出来，好像是直接给个“到顶”的距离，而不用自己用减法求，但本质还是一样的，没有人说明这物理系统再具体一点的情况，它想陷就会陷。</span><br>
</p><p><b>rzy: </b><br>
<span>https://weibo.com/3195876175/IyygVzjRf?type=repost#_rnd1584181739429 </span><br>
</p><p><b>mes: </b><br>
<span>rzy 发表于 2020-3-14 18:29</span><br>
<span>https://weibo.com/3195876175/IyygVzjRf?type=repost#_rnd1584181739429</span><br>
<span>怎么回这里，但主题的问题仍然有效。</span><br>
<span>1太夸张了，这种情况直接送回边缘是不是更自然？</span><br>
<span>2我还是想问，是不是按住跳就一直原地跳？</span><br>
<span>3总之就是按着跳得话下落过程（到哪里为止不明）重力减半？</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1917034[50-100]</guid>
    </item>
    <item>
      <title>关于魂系列的判定范围[0-50]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1917034-1-1.html</link>
      <description>关于旧2d游戏的判定框&#13;
看游戏制作教程没遇到过详细介绍怎么制作这部分的，不知哪比较有详细的资料，除了多大以外还有持续多少秒，最好有视频动图之类。
&#13;
还是格斗游戏的比较常见。</description>
      <content:encoded><![CDATA[<p><b>mes: </b><br>
<span>关于旧2d游戏的判定框</span><br>
<span>看游戏制作教程没遇到过详细介绍怎么制作这部分的，不知哪比较有详细的资料，除了多大以外还有持续多少秒，最好有视频动图之类。</span><br>
<span>还是格斗游戏的比较常见。</span><br>
</p><p><b>metalwill: </b><br>
<span> 本帖最后由 metalwill 于 2020-3-4 00:43 编辑 </span><br>
<span>持续时长,行进速度,绑定效果,碰撞后行为,这些都是可调试的.没啥可介绍的吧..</span><br>
<span>比如你要实现一颗像前飞的**,命中后消失.你需要有一个发射器,一个**特效,一个碰撞框,一个命中特效.</span><br>
<span>碰撞框从发射点出发,特效绑定在碰撞上,碰撞自己填写移动速度,存活时间,命中后生成命中特效,并删除碰撞框.一颗**就实现了.</span><br>
</p><p><b>seicing: </b><br>
<span>和打击硬直一样，这些部分基本上就是要靠经验养出来的</span><br>
<span>基本上就要遵循可见即可得的原则，不要产生让玩家觉得太大或者太小的迷惑判定就可以</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-4 01:09 编辑 </span><br>
<span>metalwill 发表于 2020-3-4 00:37</span><br>
<span>持续时长,行进速度,绑定效果,碰撞后行为,这些都是可调试的.没啥可介绍的吧..</span><br>
<span>比如你要实现一颗像前飞的**, ...</span><br>
<span>射击出来的当然简单，教程也做射击游戏多，问题是近身攻击怎么配合视觉作出判定框。</span><br>
<span>话说怎么做轨道曲线和大量子弾（不卡）又是另一个问题。</span><br>
<span>大概这种复杂程度的，而且想看格斗外的游戏的。</span><br>
<img src="https://i.niupic.com/images/2020/03/04/6XJb.jpg" title="https://i.niupic.com/images/2020/03/04/6XJb.jpg"><br>
</p><p><b>kraxia: </b><br>
<span> 本帖最后由 kraxia 于 2020-3-4 08:43 编辑 </span><br>
<span>lz随便百度一个mugen人物教程，这些资料应该很多。我印象中有个存在了很多年的国内资料站详细解释了mugen制作的各种技术要点和专有名词。至于判定框我不知道lz是想要怎样的资料，就矩形区域计算相交啊。很多时候人物造型不能用矩形概括或者想做精细一点，那就多用几个矩形。比如脑袋用个方形框住，身体用一个，伸出去的胳膊用一个。算力比较强的基板可以支持相当细的判定，比如街霸3，一个人物的站姿是叠了十几个判定框的，非常接近像素外表</span><br>
<span>然后，轨道曲线的判定是用矩形模拟的。只要还是矩形，就算叠很多个也不会很消费算力，毕竟0202年了，**撑死算你1000发同屏，算力消费还没有你叠几个光效来的多。至于出招时判定怎么设置，那要看角色的发力帧、你想要的判定效果，比如1hit还是多hit，再就是平衡性了。各游戏的风格不同，比如拳皇的判定一般比像素要大一点(但11以后的不是)，街霸由于没有跑步，判定一般比实际像素要小，更强调贴身。如果还是没感觉，可以找几个街霸3或者bb的人物包打开看看。</span><br>
</p><p><b>s32244153: </b><br>
<span>想到这个...</span><br>
</p><p><b>mes: </b><br>
<span>kraxia 发表于 2020-3-4 08:36</span><br>
<span>lz随便百度一个mugen人物教程，这些资料应该很多。我印象中有个存在了很多年的国内资料站详细解释了mugen制 ...</span><br>
<span>因为并不是想看格斗的，是想看其他一般横版和俯视动作游戏怎么处理，而且是最准确的，才能学（抄），原理还是会的，但格斗的太复杂，比如一般游戏肯定用一个框就是人物身体，那问题就是怎么做这个框看起来最自然。</span><br>
</p><p><b>洗刷刷: </b><br>
<span>mes 发表于 2020-3-4 11:16</span><br>
<span>因为并不是想看格斗的，是想看其他一般横版和俯视动作游戏怎么处理，而且是最准确的，才能学（抄），原理 ...</span><br>
<span>这个东西只能自己手动调啊。而且你搞错了方向，不是考虑怎么做更自然准确，而是你想带给玩家什么样的感觉。</span><br>
<span>如果是快节奏的游戏，可以把玩家攻击框做的比看起来更大，受击框更小。如果是高难度游戏，就把判定做的更精确。大威力的技能判定框比看起来更大等等。</span><br>
<span>越是不真实的游戏玩家对游戏判定的接受度就越强，对所谓“自然”的接受度也就越大，这之间都是你自己决定的，这也是不同游戏不一样手感的原因。</span><br>
</p><p><b>kraxia: </b><br>
<span>mes 发表于 2020-3-4 11:16</span><br>
<span>因为并不是想看格斗的，是想看其他一般横版和俯视动作游戏怎么处理，而且是最准确的，才能学（抄），原理 ...</span><br>
<span>并不用纠结太多，毕竟判定框是看不见的，判定要做多大取决于你游戏本身的设计思路。比如画面上人物比例本来就很大，那判定自然要细一点甚至比像素还小一圈。但要是突出快节奏和进攻性的话，判定就要做的够大。比如你看三国无双，早年间用真空书来增加攻击范围，攻击范围就是武器前端伸出去的气刃。后期都不这么搞了，直接怼个光效，实际范围一般比看上去要大一点。最终判定怎么样是你的游戏类型决定的，你到底是做act还是格斗还是射击。如果是射击那就是我方判定小敌人判定大，如果是act那就是两边判定都大，如果是格斗那看情况要不要缩小。但总得来讲做大点没啥问题，不会有人喜欢攻击打不到敌人的。</span><br>
</p><p><b>mes: </b><br>
<span>洗刷刷 发表于 2020-3-4 11:27</span><br>
<span>这个东西只能自己手动调啊。而且你搞错了方向，不是考虑怎么做更自然准确，而是你想带给玩家什么样的感觉 ...</span><br>
<span>不，我的方向就是尽量还原旧游戏那种感觉（不打算做出来，只是技术上实现看看），这也影响动作设计，人物比例等等……</span><br>
</p><p><b>mes: </b><br>
<span>kraxia 发表于 2020-3-4 11:30</span><br>
<span>并不用纠结太多，毕竟判定框是看不见的，判定要做多大取决于你游戏本身的设计思路。比如画面上人物比例本 ...</span><br>
<span>还有一点是为什么这样设计，意义在哪里，比如上面洛克人明显框在头前面一点，但腿却伸出来了，弹的框也明显前一点。如果不搞懂自己摸要很多时间吧，可以站着前人的肩膀上的话为什么不站？</span><br>
</p><p><b>saied: </b><br>
<span>这些都是反复迭代的的结果，不测试的话永远不知道感觉对的判定是怎样的，还是要看实际的情况</span><br>
</p><p><b>szrxs: </b><br>
<span>判定的配置全靠经验和自己希望实现的效果进行手调，纯粹是制作者的个人体感喜好，不存在什么理由也所以也不要去找什么理由。最终效果只要你个人觉得可以接受就行了</span><br>
</p><p><b>汪达: </b><br>
<span>mes 发表于 2020-3-4 12:13</span><br>
<span>还有一点是为什么这样设计，意义在哪里，比如上面洛克人明显框在头前面一点，但腿却伸出来了，弹的框也明 ...</span><br>
<span>不用想太多，因为判定框做少点节约开发时间也节约性能，同时矩形判定框最节约性能，所以洛克人只用了一个判定框，那个姿势自然头部判断偏大腿部判定偏小</span><br>
</p><p><b>metalwill: </b><br>
<span>碰撞分为简单碰撞和复杂碰撞</span><br>
<span>简单碰撞就是个框,根据角色动作可添加多个,比如角色出脚,受击框脚上包一个,身上包一个,被命中任意一个都判断被击.</span><br>
<span>复杂碰撞用在3D玩法游戏中,根据角色模型来包裹胶囊体,胶囊体绑定在角色某一根骨骼上,跟随骨骼旋转和位移,例如一个人形角色,简单点的复杂碰撞需要包裹头部,驱赶,胳膊两段,腿两段.胳膊和腿分成两段是因为它们可弯曲,用一个碰撞无法实现效果.</span><br>
<span>有兴趣的话可以下个UE4,然后直接找商店中的免费工程,去里面能看到角色受击碰撞胶囊.</span><br>
<span>2D游戏固定**曲线需要把弹道分段,并分别填写偏移角度,更复杂的还需要有目标坐标判断,让**开始以自己的角度偏移,之后向目标坐标每帧修正</span><br>
</p><p><b>kraxia: </b><br>
<span> 本帖最后由 kraxia 于 2020-3-4 12:54 编辑 </span><br>
<span>mes 发表于 2020-3-4 12:13</span><br>
<span>还有一点是为什么这样设计，意义在哪里，比如上面洛克人明显框在头前面一点，但腿却伸出来了，弹的框也明 ...</span><br>
<span>你这个所谓还原并没有太大意义，大家喜欢旧游戏喜欢的是像素风格而不是落后的设计理念，而且判定框只要差不多的话，对游戏的手感影响很小，你问老游戏为啥这么做，我回答你因为无所谓，稍微大点稍微小点，毛的影响都没有，当年大家做游戏的时候也没有多少在判定框上花大力气的，甚至过于纠结这个还会适得其反。老游戏判定画的比较简单是因为硬件算力不足实现不了精确的判定。而从原则上讲，增加手感的最简单无脑方式就是把己方攻击判定弄大一点，受创判定弄小一点，敌方尽量还原像素覆盖区域就行。所有游戏里恰恰只有格斗是有必要设计判定框的，但你却不想参考，不知意义何在。我之所以让你参考街霸33和bb的判定框，而不是你给的恶魔战士的例子，就是因为老游戏大家做判定都太不上心了，硬件也达不到。你还记得街霸2里隔半屏都能打到人的升龙吗？这算老游戏的“值得学习”的“优秀手感”吗？为啥街霸3就不会这样了？因为街霸2的人物判定就是两三个大方块，而街霸3做的上心多了。如果是模仿老游戏手感的话，为了还原手感需要研究的其他东西远比这个复杂得多，真正的门道都在像素里。不过lz如果还不理解，还要一板一眼去老游戏抄作业的话，恐怕再聊游戏设计理念什么的也不太有用了，还是弄个街机游戏rom解包自己看看数据吧</span><br>
<span>还有，6楼贴的那张图非常精髓的概括了这几个游戏的判定特点，你可以自己理解一下为什么这些游戏要这么做。就算你想抄作业，每个游戏也都是不一样的，好坏并没有绝对标准，那抄哪个呢？最终要看你自己对游戏的理解</span><br>
</p><p><b>mes: </b><br>
<span>汪达 发表于 2020-3-4 12:26</span><br>
<span>不用想太多，因为判定框做少点节约开发时间也节约性能，同时矩形判定框最节约性能，所以洛克人只用了一个 ...</span><br>
<span>那为什么人物不画成刚好框住的大小，非得脚比较大？</span><br>
<span>另外游戏的逻辑就是越简单越好，不管性能如何都是越少越好。</span><br>
</p><p><b>藤井紫: </b><br>
<span>我记得有个ACT游戏制作软件</span><br>
<span>下载一个看看就好了吧</span><br>
</p><p><b>mes: </b><br>
<span>kraxia 发表于 2020-3-4 12:46</span><br>
<span>你这个所谓还原并没有太大意义，大家喜欢旧游戏喜欢的是像素风格而不是落后的设计理念，而且判定框只要差 ...</span><br>
<span>我觉得是你不明白，还是洛克人，不过是零，剑一挥，弯的一个区域，判定框怎么画？可能这个画面比例太小就是一个框住，那人物占大点呢？而且这不是格斗游戏，肯定需要更简单的判定方法，那怎么按格斗游戏的基础简化？至于个别游戏个别部分做得好不好是另一回事。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span>mes 发表于 2020-3-4 14:25</span><br>
<span>我觉得是你不明白，还是洛克人，不过是零，剑一挥，弯的一个区域，判定框怎么画？可能这个画面比例太小就 ...</span><br>
<span>所以说你说的这些东西你自己先把功能做出来,然后体验过自己调整一下感受感受</span><br>
</p><p><b>mes: </b><br>
<span>虎纹鲨鱼鱼鱼 发表于 2020-3-4 14:43</span><br>
<span>所以说你说的这些东西你自己先把功能做出来,然后体验过自己调整一下感受感受 ...</span><br>
<span>那还不如模器试呢，我要看的是各种动作游戏怎么处理。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span>mes 发表于 2020-3-4 14:44</span><br>
<span>那还不如模器试呢，我要看的是各种动作游戏怎么处理。</span><br>
<span>每个游戏的处理方式和结果都是不一样的,上面有图已经告诉你了.你需要的是考虑你要做的东西要做成哪种样子以及为什么要是这个样子</span><br>
</p><p><b>汪达: </b><br>
<span>mes 发表于 2020-3-4 14:20</span><br>
<span>那为什么人物不画成刚好框住的大小，非得脚比较大？</span><br>
<span>另外游戏的逻辑就是越简单越好，不管性能如何都是越 ...</span><br>
<span>那我觉得就没必要争了，你自己随便做个小游戏，只弄个主角先，战蹲跑跳攻击技能画个百八十帧，每帧调一下判定框，或者每帧都画成严丝合缝符合矩形判定框的站姿，试试可行度如何，看看所有动作都必须符合矩形判定的画面是否顺眼，然后自己就会有答案了。你觉得可行，那就可行。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span>还有我觉得你有一个理解上的误区判定框只是制作战斗内容中的一个流程,最终目的是让人能合理的打到人或者被打到,追求某一道机械化工序的具体实现设计规则是没啥意义的,而且其实调判定框这个事情是很主观的,重要的还是结果符合你的预期</span><br>
</p><p><b>mes: </b><br>
<span>虎纹鲨鱼鱼鱼 发表于 2020-3-4 14:45</span><br>
<span>每个游戏的处理方式和结果都是不一样的,上面有图已经告诉你了.你需要的是考虑你要做的东西要做成哪种样子 ...</span><br>
<span>那图我也搜到了，那我得问为什么它们不同？就因为不懂才需要更多的资料，如果你懂可以告诉我。</span><br>
</p><p><b>mes: </b><br>
<span>汪达 发表于 2020-3-4 14:46</span><br>
<span>那我觉得就没必要争了，你自己随便做个小游戏，只弄个主角先，战蹲跑跳攻击技能画个百八十帧，每帧调一下 ...</span><br>
<span>自己随便用有图形界面的游戏引擎做个游戏发上网的免费游戏还不够多吗，我也见过不少了，觉得自己搞并没效率才需要先看以前全盛期的是怎么做的。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span> 本帖最后由 虎纹鲨鱼鱼鱼 于 2020-3-4 15:05 编辑 </span><br>
<span>mes 发表于 2020-3-4 14:53</span><br>
<span>那图我也搜到了，那我得问为什么它们不同？就因为不懂才需要更多的资料，如果你懂可以告诉我。 ...</span><br>
<span>其实里面总的就2个区别,一个是有些游戏调的细有些调的粗,一般来说就是项目需求和工时协商的结果;另一个就是有些游戏在HITBOX部分不做HURTBOX,这就是功能设计上的区别了,比如打差合,相杀之类的功能</span><br>
</p><p><b>mes: </b><br>
<span>虎纹鲨鱼鱼鱼 发表于 2020-3-4 14:52</span><br>
<span>还有我觉得你有一个理解上的误区判定框只是制作战斗内容中的一个流程,最终目的是让人能合理的打到人或者被 ...</span><br>
<span>举个例子就是画画，比如上色之类有个正确的做法，当然不学自己乱来还是能画出来吧，我问的就是正确的做法，在那个基础上才能自己发挥。</span><br>
<span>可能做菜的菜谱更贴切。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span>mes 发表于 2020-3-4 14:59</span><br>
<span>举个例子就是画画，比如上色之类有个正确的做法，当然不学自己乱来还是能画出来吧，我问的就是正确的做法 ...</span><br>
<span>只能说没有什么正确不正确.. 就像画画有不同的流派一样,只要最终让别人试玩感觉没什么问题那就是正确的</span><br>
</p><p><b>mes: </b><br>
<span>虎纹鲨鱼鱼鱼 发表于 2020-3-4 15:01</span><br>
<span>只能说没有什么正确不正确.. 就像画画有不同的流派一样,只要最终让别人试玩感觉没什么问题那就是正确的 ...</span><br>
<span>你看我们都没艺术天分，只能学某个流派具体什么样的然后仿一个。</span><br>
</p><p><b>虎纹鲨鱼鱼鱼: </b><br>
<span> 本帖最后由 虎纹鲨鱼鱼鱼 于 2020-3-4 15:08 编辑 </span><br>
<span>mes 发表于 2020-3-4 15:04</span><br>
<span>你看我们都没艺术天分，只能学某个流派具体什么样的然后仿一个。</span><br>
<span>那你就找一个你玩的最熟悉理解最深觉得判定体验最好的游戏解他的数据来抄,抄完再改</span><br>
</p><p><b>mes: </b><br>
<span>虎纹鲨鱼鱼鱼 发表于 2020-3-4 15:06</span><br>
<span>那你就找一个你玩的最熟悉理解最深觉得判定体验最好的游戏解他的数据来抄,抄完再改 ...</span><br>
<span>我不是说具体那幅画，还没决定要选哪个流派呢。</span><br>
</p><p><b>wolfwood: </b><br>
<span>说到判定，最近玩的一个游戏做的非常傻逼，蜘蛛型怪物贼小而且爬的又快，结果鼠标在蜘蛛的腿间空隙是点不到的，体验极差</span><br>
</p><p><b>洗刷刷: </b><br>
<span>mes 发表于 2020-3-4 14:59</span><br>
<span>举个例子就是画画，比如上色之类有个正确的做法，当然不学自己乱来还是能画出来吧，我问的就是正确的做法 ...</span><br>
<span>非常可惜关乎手感数值的部分的确没什么公式或是法则。很多人以为有，其实没有。</span><br>
<span>优秀的手感是通过一次又一次试玩迭代试出来的，每个新动作游戏都要经过搭建系统、调整数值、反复试玩修改、邀请资深玩家试玩，根据反馈反复修改。这么一套流程。</span><br>
<span>不存在什么根据人物像素大小计算出最佳判定框大小之类的公式，这也是为什么游戏制作经验很重要。</span><br>
</p><p><b>mes: </b><br>
<span>wolfwood 发表于 2020-3-4 15:15</span><br>
<span>说到判定，最近玩的一个游戏做的非常傻逼，蜘蛛型怪物贼小而且爬的又快，结果鼠标在蜘蛛的腿间空隙是点不到 ...</span><br>
<span>说到蜘蛛想起以前MD试过好像是迪尼角色的游戏，boss是大蜘蛛，感觉它冲过来时前腿特别高和大，用看的根本躲不掉。</span><br>
</p><p><b>mes: </b><br>
<span>洗刷刷 发表于 2020-3-4 15:17</span><br>
<span>非常可惜关乎手感数值的部分的确没什么公式或是法则。很多人以为有，其实没有。</span><br>
<span>优秀的手感是通过一次又 ...</span><br>
<span>有的，看图就明白以前的角色大小肯定很整齐，以格为单位，如果搞出1.145141919格宽这种就已经偏了。</span><br>
</p><p><b>洗刷刷: </b><br>
<span>mes 发表于 2020-3-4 14:59</span><br>
<span>举个例子就是画画，比如上色之类有个正确的做法，当然不学自己乱来还是能画出来吧，我问的就是正确的做法 ...</span><br>
<span>如果你想知道第一步应该怎么做的话，应该从基本单位开始着手。</span><br>
<span>比如说跳跃高度一般用操控人物的身高比为基本单位。不同游戏可能有1身跳、3身跳、5身跳等等。冲刺也可以用身位或是格子数作为基本单位。</span><br>
<span>在你通过基本单位确定主角性能之后，就可以根据性能设计关卡和技能，比如普通能跳上去的高坡最多多少身高，助跑最多能跳多少格子，根据角色惯性参数确定多远攻击距离的敌人会对主角造成威胁。</span><br>
<span>这些都是实际开发的流程，不存在一开始就知道正确答案，需要不停迭代知道满意为止。</span><br>
</p><p><b>洗刷刷: </b><br>
<span>mes 发表于 2020-3-4 15:23</span><br>
<span>有的，看图就明白以前的角色大小肯定很整齐，以格为单位，如果搞出1.145141919格宽这种就已经偏了。 ...</span><br>
<span>有重力系数和惯性系数，没办法完全按格子来的。比如马里奥跑到最高速起跳，跳跃距离肯定不是整数格子。</span><br>
<span>瓦片地图看上去是一个个格子但判定框完全不用和外观保持一致的，比如很多平台跳跃游戏及时和格子差几个像素也能成功起跳和落地。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-4 15:46 编辑 </span><br>
<span>洗刷刷 发表于 2020-3-4 15:28</span><br>
<span>如果你想知道第一步应该怎么做的话，应该从基本单位开始着手。</span><br>
<span>比如说跳跃高度一般用操控人物的身高比为 ...</span><br>
<span>虽然我也业余，修正一下，是按地图格子的高度为单位，需要跳满刚好到某一格的高度，不然就是“不正确”。</span><br>
<span>而跳要考虑重力g，按高中的知识可以算算，</span><br>
<span>s=v初t-1/2*gt^2</span><br>
<span>v初=gt</span><br>
<span>→s=1/2*gt^2</span><br>
<span>可以看到g和t的数值是可以调，但最终它们必须算得等于s，这就是必须“正确”的部分。</span><br>
<span>而且一移动必须最小移动一个像素，就是说必须取整，怎么取整就不太确定。</span><br>
</p><p><b>绝霜: </b><br>
<span>mes 发表于 2020-3-4 15:10</span><br>
<span>我不是说具体那幅画，还没决定要选哪个流派呢。</span><br>
<span>你是想别人授你以鱼而不是授你以渔？</span><br>
<span>没有那个鱼，活下来的鱼每条都是不一样的</span><br>
</p><p><b>洗刷刷: </b><br>
<span> 本帖最后由 洗刷刷 于 2020-3-4 15:57 编辑 </span><br>
<span>mes 发表于 2020-3-4 15:39</span><br>
<span>虽然我也业余，修正一下，是按地图格子的高度为单位，需要跳满刚好到某一格的高度，不然就是“不正确”。 ...</span><br>
<span>怎么会刚好跳到某一格，你想想你会玩只有在跳跃最高点才能刚好跳到最高格的平台跳跃游戏吗？跑起来一次起跳时机不对就跳不过去一个最高障碍物？</span><br>
<span>如果你想知道更多相关知识可以关注这个UP主，你的疑问这两个视频解答的很好</span><br>
<span>【游戏制作工具箱】《铲子骑士》的招牌动作设计</span><br>
<span>https://www.bilibili.com/video/av92690449</span><br>
<span>【游戏幕后】《蔚蓝》的开发故事</span><br>
<span>https://www.bilibili.com/video/av68415003</span><br>
<span>【游戏制作工具箱】《蔚蓝》的手感为何迷人？https://www.bilibili.com/video/av63154083</span><br>
<span>格子游戏一点也不像看上去那样是一个个格子，有一万个细节保证手感，这些细节都是靠反复迭代才试出来的。</span><br>
</p><p><b>mes: </b><br>
<span>洗刷刷 发表于 2020-3-4 15:51</span><br>
<span>怎么会刚好跳到某一格，你想想你会玩只有在跳跃最高点才能刚好跳到最高格的平台跳跃游戏吗？跑起来一次起 ...</span><br>
<span>不管它们怎么做，已经太新了，要参考还是想先看看旧的。</span><br>
<span>为什么不是刚好？一起跳看到配合地图块过线一点点不是很难受吗？就算不按格，公式也是成立的，知道t也就知道如果平地起跳能跳多宽，而不需要一个个试，这就是意义，你们等于在说不要读书直接出来工作就行了。</span><br>
</p><p><b>kraxia: </b><br>
<span> 本帖最后由 kraxia 于 2020-3-4 16:22 编辑 </span><br>
<span>mes 发表于 2020-3-4 14:25</span><br>
<span>我觉得是你不明白，还是洛克人，不过是零，剑一挥，弯的一个区域，判定框怎么画？可能这个画面比例太小就 ...</span><br>
<span>你看大家都在劝你实际做一下试试，因为你的这个议题有点脱离实际。洛克人那个弯刀判定为啥要弄个方形的判定框？我再次认真的回答你，1、是因为这个游戏的判定做得很糙，设计师并不是深思熟虑之后选择这么做，而是随便就做了，真正包含设计思想的不是判定做成圆的还是弯的，而是设计招式的攻击范围，也就是距离，这个才是最重要的。2、判定做得糙并不是一个问题，你可以照抄也可以闭着眼自己做，最终的效果几乎不会有差别。只要攻击距离定好了，接下来你把判定做成圆的或者方的，在游戏里基本感觉不出来，所以大家图省事会做成方的。3、世界上确实有认真做判定的游戏，那就是格斗游戏和现在的3d act。回顾一下历史就可以发现，旧时代的3d act们判定做得也很糙。为什么现在做的细了呢，因为分辨率上去了，角色动作的细节也能看清了，这时做的糙容易穿帮。4、为什么低清像素游戏不用太在意判定呢，因为低清里一个像素本来就占了较大的面积，相当于把各种距离计算降维了。而且2d游戏通常会使用光效来表示命中，光效本身能很好的抹平判定框的微小差异。</span><br>
<span>如果一定要从老游戏的判定框设计体会作者的设计思想，有一点像从打油诗里强行阅读理解的感觉。而如果连这么小的细节都要如此认真的研究……这个态度固然好，但总感觉稍微有点打歪了我只是觉得，不要盲目迷信老游戏。老游戏并不是什么都好；有很多当时的设计是受制于时代，现在早已有了更好的、成本更低的方案。当然不管怎么样，只要能带有自己的思考和观点，出来讨论，然后加深理解，最后主动选择，就没多大问题。如果闭眼抄作业，可能就算抄完也学不到多少东西的。</span><br>
</p><p><b>洗刷刷: </b><br>
<span>mes 发表于 2020-3-4 16:09</span><br>
<span>不管它们怎么做，已经太新了，要参考还是想先看看旧的。</span><br>
<span>为什么不是刚好？一起跳看到配合地图块过线一点 ...</span><br>
<span>比如说你最高跳3格，你前面有一个3格高的高地，你开始助跑，你必须卡死一个唯一的起跳时机才能跳上去，太早没到最高点，太晚会开始下落。</span><br>
<span>如果你最高能跳3.5格，根据你的起跳速度和降落速度，你的滞空高度大于3格的时间就是个时间段，你就能有一个很宽松的时间段起跳，早一些晚一些都能跳上3格的高地。</span><br>
<span>如何调整起跳速度、降落速度、最高跳跃高度，让这个是时间段最舒服，最符合直觉，就是用功的地方。</span><br>
<span>如果这个例子都没法让你理解为什么跳跃高度不会是整数格子，那我劝你别再瞎折腾了。</span><br>
</p><p><b>mes: </b><br>
<span>kraxia 发表于 2020-3-4 16:18</span><br>
<span>你看大家都在劝你实际做一下试试，因为你的这个议题有点脱离实际。洛克人那个弯刀判定为啥要弄个方形的判 ...</span><br>
<span>如果你这么觉得可以@卡普空试试。</span><br>
<span>这也不是只是一个框的问题，持续时间呢？而且这么一说就只能说明你们不在意，首先为什么是方形而不是其他形状？因为最好算，其次为什么是圆形？因为虽稍费时间还是好算，这里说的是方形配方形，圆形配圆形，我猜肯定有人觉得圆形配方形也行，好啊，你算我看看。得说我也会谷我也查过，只是懒得一个个游戏来一个个按帧截图而已。</span><br>
</p><p><b>mes: </b><br>
<span>洗刷刷 发表于 2020-3-4 16:22</span><br>
<span>比如说你最高跳3格，你前面有一个3格高的高地，你开始助跑，你必须卡死一个唯一的起跳时机才能跳上去，太 ...</span><br>
<span>其实我也很久不玩，只是记得是有游戏刚好就能跳上，也许高半格也可以，至于物理方面……看注册时间会不会是还没学到？反正还能学就好好学习吧，青春只有一次，要是过了的话建议百度一下加速度。</span><br>
</p><p><b>mes: </b><br>
<span>其实就是……大家都不在意，要不为什么不截你们喜欢的游戏来呢？算了确实也只是瞎折腾，反正也可以先瞎折腾别的。</span><br>
</p><p><b>洗刷刷: </b><br>
<span>mes 发表于 2020-3-4 16:32</span><br>
<span>其实我也很久不玩，只是记得是有游戏刚好就能跳上，也许高半格也可以，至于物理方面……看注册时间会不会 ...</span><br>
<span>我还没怀疑你数学不好你到考虑起我的年龄来了？？</span><br>
<span>我这个例子就是最简单的一个移动的二次函数，你连求解这个移动二次函数大于某个Y值的t值区间都想不明白真是绝了，没救了告辞</span><br>
</p><p><b>w30of: </b><br>
<span>格斗游戏分Hitbox hurtbox 还有 pushbox的</span><br>
<span>但横版游戏不少不分hurtbox和pushbox，pushbox就是hurtbox</span><br>
<span>毕竟横版游戏里编辑hurtbox，性价比不高</span><br>
<span>代价就是美术创作角色动画的时候，躯干部分不会做一些大幅度的动作</span><br>
</p><p><b>kraxia: </b><br>
<span> 本帖最后由 kraxia 于 2020-3-4 16:52 编辑 </span><br>
<span>mes 发表于 2020-3-4 16:25</span><br>
<span>如果你这么觉得可以@卡普空试试。</span><br>
<span>这也不是只是一个框的问题，持续时间呢？而且这么一说就只能说明你们不 ...</span><br>
<span>嗯嗯，继续聊下去的话还是会有一些技术点可以说的。之所以我喜欢提格斗游戏，是因为如果你能实际做出一个格斗人物，能还原出与拳皇或者街霸一样的手感，这时你对判定和手感这件事的理解已经相当高，去做act游戏可以降维打击了。单说判定框设计这件事，各个游戏的思路大体上是通用的。你看2dact游戏，大部分都是用方形的判定框。但你也提到圆形判定框了，stg就有这么做的。这个区别体现了stg与一般act性质上的不同，因为stg里无论主角还是敌人的弹幕，一般不会经常改变形状。而躲避弹幕的操作，与弹幕的入射角也有关系，这时会非常关心判定框的角度。用方形的判定框会导致在对角线位置判定失准，而堆叠多个方形来模拟圆就有点不划算了。lz是想找一个比较范例的标准答案来参考吧？我觉得可能stg不是lz想要的，但其他2d游戏的判定我自己关注的基本都是格斗，act的话我推荐拿街机清版系列试试。如果还要找更老的，那就要看你是想研究什么了。比如fc魂斗罗，那时候压根没有判定框的说法，直接就是算活动块的。魂斗罗一个角色一个活动块，**只要碰到活动块就算命中，没有设计调整的余地。而你前面提到的判定持续时间，是另一个问题了，就是角色的动作力学，这个还是有很多经验可以讲的：但总的来讲，对这一点应用的最深的也还是格斗游戏，act游戏是简化的版本。你的有些问题还是有点强行阅读理解。如果去问那些老游戏的制作人判定框为什么这么做呀，得到的回答会是 硬件限制/做起来简单 之类的，可能全世界也拿不出你想要的那个想象中的答案。特别是如果你真的不厌其烦的打开所有游戏挨个看数据，你会发现大家都是按照一些大概的惯例在做判定框，这个惯例并没有什么成文的规矩或者最优化的保证；而除开这些惯例，具体到里面的细节，比如大小，堆叠数量，粗细之类，各个游戏都不一样，具体每个游戏要怎么做取决于游戏自己的设计思路，没有一个宇宙通用的统一标准，所以对主楼的问题，其实是没有标准答案。当然你要找那些惯例和设计思路的一些成文资料，还是能找到的，就在我们说的mugen资料站，而且我保证，只要你能做得出格斗游戏的角色，做act游戏绝对没有问题，不用再单独研究act的做法。要是不信就算了，你可以继续找答案。不过就像其他坛友说的，最好的理解方式莫过于自己实操一下，不要怕走弯路。如果往那一躺说，我不要走弯路，你们把100分的答案给我抄。那我还是那句话，100分答案就是格斗游戏，act里你顶多找到80分的答案。你会问act里为什么这样这样做，因为它们没必要做得更好，差不多就够了。还是说你就是想要抄60分的答案呢？这个我就不懂了，100分比起60分到底有何劣势？</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1917034[0-50]</guid>
    </item>
  </channel>
</rss>
