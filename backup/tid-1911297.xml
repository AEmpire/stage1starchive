<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>算法问题问外野，关于打分排序的算法</title>
    <link>https://bbs.saraba1st.com/2b/</link>
    <description>算法问题问外野，关于打分排序的算法</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 09 Jul 2020 16:31:33 +0000</lastBuildDate>
    <item>
      <title>算法问题问外野，关于打分排序的算法[0-50]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1911297-1-1.html</link>
      <description>算法问题问外野，关于打分排序的算法&#13;
假设小明同时给动画A和动画B打了评分，动画A打了+2，动画B打了x0。然后小明看到一个动画排行榜单，如果A排在B前面，那么这个榜单在小明心中的可信度+1，但如果B排在A的前面，那么这个榜单在小明心中的可信度-1。
&#13;
小明当然不只给动画A和B打了评分，还给动画CDEFGHI……打了评分。对于任意两个小明评分不同的动画，小明都会在动画排行榜单中寻找它们的先后关系，然后根据上述的规则对可信度加加减减，最终得出一个该榜单在小明心中的最终可信度。（小明对该榜单的初始可信度为0）
&#13;
当然小明不一定会给所有动画都打分，毕竟有些动画他还没有看过。
&#13;
不止小明会给动画打分，小红、小亮、小李……都会给动画打分，它们心中也各自有一个对动画榜单的可信度，计算方法和小明相同。
&#13;
现在，给你每个人的打分记录，让你计算出一个动画排名榜单，使得所有人心目中对该榜单的可信度之和最大。（可信度最大的排序可能不只一个，只要输出其中一个就行）
&#13;
样例输入：
&#13;
小明：
&#13;
        动画A +2
&#13;
        动画B x0
&#13;
小红：
&#13;
        动画B x0
&#13;
        动画C +2
&#13;
小亮：
&#13;
        动画A x0
&#13;
        动画C x0
&#13;
小李：
&#13;
        动画A +2
&#13;
        动画B +1
&#13;
        动画C x0
&#13;
样例输出：
&#13;
动画A &gt; 动画B &gt; 动画C （可信度：小明(+1)，小红(-1)，小亮(0)，小李(+3)）
&#13;
或者
&#13;
动画A &gt; 动画C &gt; 动画B （可信度：小明(+1)，小红(+1)，小亮(0)，小李(+1)）
&#13;
我知道这个算法在现实中并不一定合理，比如说一个人评价得越多对榜单的影响越大，或者说“即使我给A的分数比B高也不一定意味着我认为A比B好，它们是根本不同类型的动画我没有要比较的意思”。先不管这些只考虑算法，我只想到可以从任意一个序列出发，如果交换任意两个动画的位置可以得到更大的可信度值，那就往这个方向前进，直至没有交换的可能。但我没办法证明这是最大值，得到的可能只是局部最优解。
&#13;
有没有办法可以证明：如果一个序列，交换任意两个动画的位置，得到的新序列的总可信度值都不比原序列大，那么这个序列的可信度一定是最大值？</description>
      <content:encoded><![CDATA[<p><b>RobinEatCorn: </b><br>
<span>算法问题问外野，关于打分排序的算法</span><br>
<span>假设小明同时给动画A和动画B打了评分，动画A打了+2，动画B打了x0。然后小明看到一个动画排行榜单，如果A排在B前面，那么这个榜单在小明心中的可信度+1，但如果B排在A的前面，那么这个榜单在小明心中的可信度-1。</span><br>
<span>小明当然不只给动画A和B打了评分，还给动画CDEFGHI……打了评分。对于任意两个小明评分不同的动画，小明都会在动画排行榜单中寻找它们的先后关系，然后根据上述的规则对可信度加加减减，最终得出一个该榜单在小明心中的最终可信度。（小明对该榜单的初始可信度为0）</span><br>
<span>当然小明不一定会给所有动画都打分，毕竟有些动画他还没有看过。</span><br>
<span>不止小明会给动画打分，小红、小亮、小李……都会给动画打分，它们心中也各自有一个对动画榜单的可信度，计算方法和小明相同。</span><br>
<span>现在，给你每个人的打分记录，让你计算出一个动画排名榜单，使得所有人心目中对该榜单的可信度之和最大。（可信度最大的排序可能不只一个，只要输出其中一个就行）</span><br>
<span>样例输入：</span><br>
<span>小明：</span><br>
<span>        动画A +2</span><br>
<span>        动画B x0</span><br>
<span>小红：</span><br>
<span>        动画B x0</span><br>
<span>        动画C +2</span><br>
<span>小亮：</span><br>
<span>        动画A x0</span><br>
<span>        动画C x0</span><br>
<span>小李：</span><br>
<span>        动画A +2</span><br>
<span>        动画B +1</span><br>
<span>        动画C x0</span><br>
<span>样例输出：</span><br>
<span>动画A > 动画B > 动画C （可信度：小明(+1)，小红(-1)，小亮(0)，小李(+3)）</span><br>
<span>或者</span><br>
<span>动画A > 动画C > 动画B （可信度：小明(+1)，小红(+1)，小亮(0)，小李(+1)）</span><br>
<span>我知道这个算法在现实中并不一定合理，比如说一个人评价得越多对榜单的影响越大，或者说“即使我给A的分数比B高也不一定意味着我认为A比B好，它们是根本不同类型的动画我没有要比较的意思”。先不管这些只考虑算法，我只想到可以从任意一个序列出发，如果交换任意两个动画的位置可以得到更大的可信度值，那就往这个方向前进，直至没有交换的可能。但我没办法证明这是最大值，得到的可能只是局部最优解。</span><br>
<span>有没有办法可以证明：如果一个序列，交换任意两个动画的位置，得到的新序列的总可信度值都不比原序列大，那么这个序列的可信度一定是最大值？</span><br>
</p><p><b>dodolee: </b><br>
<span> 本帖最后由 dodolee 于 2020-1-29 17:58 编辑 </span><br>
<span>首先想到的是遗传算法，然后模拟退火，然后梯度下降，etc</span><br>
<span>但似乎都不能保证找到全局最值？</span><br>
<span>你最后那个问题是想证明单峰函数从而证明局部极值就是全局最值？</span><br>
<span>不如你试试证明这个优化问题是NP-Hard，放弃找全局最优解的高效算法吧</span><br>
</p><p><b>blueshift: </b><br>
<span> 本帖最后由 blueshift 于 2020-1-29 19:11 编辑 </span><br>
<span>关于你的最后的问题，纳什均衡不一定是帕雷托最优。</span><br>
</p><p><b>一百三十万颗星: </b><br>
<span>blueshift 发表于 2020-1-29 19:08</span><br>
<span>关于你的最后的问题，纳什均衡不是帕雷托最优</span><br>
<span>我怀疑你在用博弈论xjb回答算法问题</span><br>
</p><p><b>macos: </b><br>
<span>一般人的可信度应该接近于乘法关系，各有一定的系数，加减法不太准确</span><br>
</p><p><b>blueshift: </b><br>
<span>一百三十万颗星 发表于 2020-1-29 19:11</span><br>
<span>我怀疑你在用博弈论xjb回答算法问题</span><br>
<span>你说得对。</span><br>
<span>不过我只是从直觉上认为他的整个问题可以等价变成寻找某种商品消费组合使得所有人的效用总合最大化，因此这时提出纳什均衡。</span><br>
</p><p><b>蓝泽玲: </b><br>
<span>最优化问题</span><br>
<span>晚些时候试试</span><br>
</p><p><b>蓝泽玲: </b><br>
<span>你这个方法搜索效率不是很好</span><br>
<span>可以先简单看一下约束条件构成的形状</span><br>
<span>凸优化的话你那个方法就行</span><br>
<span>但是效率不是很好</span><br>
</p><p><b>Lunamos: </b><br>
<span> 本帖最后由 Lunamos 于 2020-1-29 20:31 编辑 </span><br>
<span>第一感觉，有可能可以归纳证最优解逆序数为全员逆序数平均，有机会把搜索空间从几何降到...小一点的几何</span><br>
</p><p><b>24k纯帅: </b><br>
<span>算法没想出来，但是你最后这个命题大概率是错的，我总觉得做题有进过类似的坑，</span><br>
<span>有的时候你确实交换任意两个都不会变大，但是你一下换多点比如ABCD换成CDAB，就真的变大了，。。</span><br>
</p><p><b>Ephi: </b><br>
<span>直觉上你最后的命题应该能找出一个否定的证明。</span><br>
</p><p><b>qaweqa: </b><br>
<span>对于题目给的条件建图</span><br>
<span>简化成以下问题</span><br>
<span>给定一个n个点的带权有向图 求一个边权和最大的无环子图</span><br>
<span>没想到什么复杂度比较优秀的做法 可能网络流/费用流可以？</span><br>
</p><p><b>xwendotnet: </b><br>
<span>万事不决用递归</span><br>
</p><p><b>Ephi: </b><br>
<span>24k纯帅 发表于 2020-1-29 19:37</span><br>
<span>算法没想出来，但是你最后这个命题大概率是错的，我总觉得做题有进过类似的坑，</span><br>
<span>有的时候你确实交换任意两 ...</span><br>
<span>因为如果定义邻域移动为2-opt，他给出的命题只是搜索了邻域</span><br>
</p><p><b>R.I.P: </b><br>
<span>LOP搞不好可以归约到这个问题，前者是NP-Hard的</span><br>
</p><p><b>QShen: </b><br>
<span>羡慕你们这些在S1还能花时间和精力看楼主帖子并且思考的</span><br>
</p><p><b>wsuFish: </b><br>
<span>首先，最后的命题是错的，反例如下：</span><br>
<span>四位观众分别对a、b、c打分</span><br>
<span> 小明 [['a', 2], ['b', 0], ['c', 1]]</span><br>
<span> 小红 [['c', 2], ['b', 0], ]</span><br>
<span> 小李 [['c', 1], ['b', 1], ['a', 0]]</span><br>
<span> 小亮 [['a', 0], ['b', 1], ]</span><br>
<span>对于排行榜 acb 得分为 1</span><br>
<span>而任意交换一次位置，分别得到 abc（-3）、 cab（1）、bca（-1），没有更高分，算法结束</span><br>
<span>然而最优解是cba（3分）</span><br>
<span>个人思路是首先将所有打分者的分计算成一张“交换表”，表的x和y是所有动画，内容是数，表项（a，b）= x 表示如果动画a在排行榜上名次优于动画b，则总分会增加x</span><br>
<span>计算就是从表中选择一个动画-》计算该动画所在行的总和-》删除含有该动画的行和列...重复直至整张表为空</span><br>
<span>原问题就转换为了使最终值最大的取出顺序，这个问题可以用动态规划来解决：大表-》取出一行一列变成小表....重复直到变为只有两行两列的迷你表</span><br>
</p><p><b>海底铁锚: </b><br>
<span>一个想法，不一定对。</span><br>
<span>先根据12楼的想法，建图，可以发现这个图是n个点的双向边带权有向完全图。</span><br>
<span>然后就是求最大无环子图，在完全图里面将边权取反后用朱刘算法求出最小树形图后即可。</span><br>
<span>因为在这个图里面，如果存在一种完美序列，那么这个序列有可能是多个生成树合并在一起的，但也一定能由一颗生成树展示出来。</span><br>
<span>复杂度大概可并堆改进的朱刘算法O（2V^2+Vlog(V)）,无改进是O(2V^3)</span><br>
</p><p><b>ustslayer: </b><br>
<span>想起了这个：https://zh.wikipedia.org/wiki/%E9%98%BF%E7%BD%97%E6%82%96%E8%AE%BA</span><br>
<span>阿罗悖论</span><br>
</p><p><b>君往何处: </b><br>
<span> 本帖最后由 君往何处 于 2020-1-30 09:37 编辑 </span><br>
<span>海底铁锚 发表于 2020-1-30 00:02</span><br>
<span>一个想法，不一定对。</span><br>
<span>先根据12楼的想法，建图，可以发现这个图是n个点的双向边带权有向完全图。</span><br>
<span>然后就是 ...</span><br>
<span>应该是旅行商吧，最大无环子图分叉的部分怎么合并成一个序列？</span><br>
<span>想了想旅行商也不对，前面的选择会影响后面的权值</span><br>
</p><p><b>一百三十万颗星: </b><br>
<span>海底铁锚 发表于 2020-1-30 00:02</span><br>
<span>一个想法，不一定对。</span><br>
<span>先根据12楼的想法，建图，可以发现这个图是n个点的双向边带权有向完全图。</span><br>
<span>然后就是 ...</span><br>
<span>我觉得对</span><br>
</p><p><b>一百三十万颗星: </b><br>
<span>君往何处 发表于 2020-1-30 09:33</span><br>
<span>应该是旅行商吧，最大无环子图分叉的部分怎么合并成一个序列？</span><br>
<span>想了想旅行商也不对，前面的选择会影响后面 ...</span><br>
<span>分叉部分之间的顺序无所谓 只要保证一个链上的数顺序对就行</span><br>
</p><p><b>海底铁锚: </b><br>
<span>君往何处 发表于 2020-01-30 09:33:43</span><br>
<span>应该是旅行商吧，最大无环子图分叉的部分怎么合并成一个序列？</span><br>
<span>想了想旅行商也不对，前面的选择会影响后 ...一个序列在这个完全图里面的表现是有不同形状的，理论上无论什么形状权值都应该相等。</span><br>
<span>-- 来自 能看大图的 Stage1官方 Android客户端</span><br>
</p><p><b>君往何处: </b><br>
<span>海底铁锚 发表于 2020-1-30 12:21</span><br>
<span>一个序列在这个完全图里面的表现是有不同形状的，理论上无论什么形状权值都应该相等。</span><br>
<span>-- 来自 能看大图 ...</span><br>
<span>一个序列对应的子图是固定的吧，因为每个点对应到它的后续节点的权值都需要考虑进去，意味着边不是选出来的，而是根据节点顺序定下来的，这样并不是一个树形图。</span><br>
<span>不过我不太确定你说的图的定义方式，我开始乍一看的理解是a -> b的边权表示 当 a在b前面时对总分数的贡献值</span><br>
</p><p><b>一百三十万颗星: </b><br>
<span>海底铁锚 发表于 2020-1-30 12:21</span><br>
<span>一个序列在这个完全图里面的表现是有不同形状的，理论上无论什么形状权值都应该相等。</span><br>
<span>-- 来自 能看大图 ...</span><br>
<span>一个序列生成n*(n-1)个数对，对应一个确定的图</span><br>
</p><p><b>海底铁锚: </b><br>
<span> 本帖最后由 海底铁锚 于 2020-1-30 15:59 编辑 </span><br>
<span>君往何处 发表于 2020-1-30 15:27</span><br>
<span>一个序列对应的子图是固定的吧，因为每个点对应到它的后续节点的权值都需要考虑进去，意味着边不是选出来 ...</span><br>
<span>就是你理解的边权</span><br>
<span>一个序列对应的子图不固定，是因为对于拓扑排序来说，同一层的顺序并不重要，因为同一层并没有所谓先后顺序之分。需要注意的是同一条链上的先后顺序要保证。</span><br>
<span>对于这个图来说，会有非常多的边权为0的点，这样的话无论连边不连边都无所谓。</span><br>
<span>比如说如果存在以下关系</span><br>
<span>a->b</span><br>
<span>c->d</span><br>
<span>那么顺序无论是abcd还是cabd都没关系那么对于abcd这个序列在这个完全图上的表现来说，就有可能是</span><br>
<span>选择a->b,c->d这两个边，但还可能是这样选</span><br>
<span>a->b</span><br>
<span>b->c</span><br>
<span>c->d</span><br>
<span>这两个选法的权值应该是相同的,因为b->c的权值为0</span><br>
</p><p><b>RobinEatCorn: </b><br>
<span>感谢，好多不认识的算法最后还是选择退火了</span><br>
</p><p><b>海底铁锚: </b><br>
<span>一百三十万颗星 发表于 2020-1-30 15:50</span><br>
<span>一个序列生成n*(n-1)个数对，对应一个确定的图</span><br>
<span>懂你意思了，按照你的理解的确是一个序列确定一个图。</span><br>
<span>我的意思说的完善一点就是一个序列里面有些数对的边权为0，可以略去，故而在这个图里面还通过省略一些边提取出权值相同的子图。</span><br>
<span>实际上如果数据足够大和完善，最小树形图选取出来的确实是这样的子图，而且几乎是唯一的。</span><br>
</p><p><b>海底铁锚: </b><br>
<span>RobinEatCorn 发表于 2020-1-30 15:58</span><br>
<span>感谢，好多不认识的算法最后还是选择退火了</span><br>
<span>不要遇事不决搞退火。虽然很省力就是了。想了想这题也是个模板题。</span><br>
<span>另外我想把这题改改题面出在我校ACM新生赛，不知题主同意吗？会注明来源出处的。</span><br>
</p><p><b>君往何处: </b><br>
<span>海底铁锚 发表于 2020-1-30 15:57</span><br>
<span>就是你理解的边权</span><br>
<span>一个序列对应的子图不固定，是因为对于拓扑排序来说，同一层的顺序并不重要，因为同一层 ...</span><br>
<span>你这个说法是不是反了，讲的是同一个子图对应的序列不固定吧……？</span><br>
<span>不如建图的时候不考虑没有关系的边，这样如果是完全图就是所有点之间都有关联。在完全图的情况下最小树形图能保证是一条单链吗？</span><br>
</p><p><b>海底铁锚: </b><br>
<span> 本帖最后由 海底铁锚 于 2020-1-30 16:20 编辑 </span><br>
<span>君往何处 发表于 2020-1-30 16:09</span><br>
<span>你这个说法是不是反了，讲的是同一个子图对应的序列不固定吧……？</span><br>
<span>不如建图的时候不考虑没有关系的边， ...</span><br>
<span>根据泥潭网友的建议改一下吧。</span><br>
<span>如果是单纯考虑边权和，</span><br>
<span>那么一个子图对应的序列不固定，但是序列的贡献是固定的。</span><br>
<span>一个序列在图上的表现是固定的，参考25楼，只是对于算法来说可能只会找到其中的子图，可能是一条链，可能是一个生成树。</span><br>
<span>不一定要找到一条链，找到一个生成树也能确定一个序列，毕竟之后只要做个拓扑排序就可以了。</span><br>
<span>————————————</span><br>
<span>这个想法错了，如果选择了a->b,b->c,朱刘算法也许不会考虑a->c</span><br>
<span>这也许不是图问题。</span><br>
</p><p><b>一百三十万颗星: </b><br>
<span>海底铁锚 发表于 2020-1-30 16:09</span><br>
<span>不要遇事不决搞退火。虽然很省力就是了。想了想这题也是个模板题。</span><br>
<span>另外我想把这题改改题面出在我校ACM新 ...</span><br>
<span>tp新生赛？最小树形图是个比较冷门的东西吧</span><br>
</p><p><b>海底铁锚: </b><br>
<span>一百三十万颗星 发表于 2020-1-30 16:19</span><br>
<span>tp新生赛？最小树形图是个比较冷门的东西吧</span><br>
<span>说错了，不是新生赛，校赛那一种。</span><br>
<span>还行吧，牛客和hdu的暑期集训基本都考到过。</span><br>
<span>不过基本不会用到改进型算法，一般O(ve)给过。</span><br>
<span>顺便因为你提到了图的问题，我想了想朱刘算法不能解决。考虑了一下这个图的感觉，也许不是一个图问题。</span><br>
</p><p><b>一百三十万颗星: </b><br>
<span>海底铁锚 发表于 2020-1-30 16:23</span><br>
<span>说错了，不是新生赛，校赛那一种。</span><br>
<span>还行吧，牛客和hdu的暑期集训基本都考到过。</span><br>
<span>不过基本不会用到改进型 ...</span><br>
<span>虽然一个序列给出的偏序关系对应在图上出来有大量冗余信息，但是大量序列的时候可以让完全图的每条边的权之间关系不明显，甚至说对于某些测试数据，我们要考虑一个边权随机的完全图。</span><br>
<span>这样看和偏序的关系就不大了。 我猜 是个图问题。</span><br>
<span>反过来看，在数据范围微妙，序列数较少的时候应该有其他做法。</span><br>
<span>不过我觉得现在这个做法已经足够优秀。</span><br>
</p><p><b>yyly: </b><br>
<span> 本帖最后由 yyly 于 2020-1-30 16:37 编辑 </span><br>
<span>qaweqa 发表于 2020-1-29 21:18</span><br>
<span>对于题目给的条件建图</span><br>
<span>简化成以下问题</span><br>
<span>给定一个n个点的带权有向图 求一个边权和最大的无环子图</span><br>
<span>这个问题不知道最大生成树能不能解决</span><br>
<span>回复的时候没看下面几楼 看来是不行（。</span><br>
</p><p><b>海底铁锚: </b><br>
<span>吾又有一计</span><br>
<span>如果数据范围小，比如只有20左右，加上这个序列算分的特征，那么可以用状压dp解决。</span><br>
<span>dp定义为 当前最右边的动画是第i个，在此之前的动画状态（包含i）状压为j 在这个情况下最优权值。</span><br>
<span>二进制状压解释的清楚一点，如果说有三个动画0,1,2，那么给三个二进制位，比如如果选择了0,1，那么状压数位3，选择了1,2，状压数为6</span><br>
<span>再预处理贡献数组v,定义的是最右边的动画是i，左边的动画情况是j的时候的贡献。</span><br>
<span>因为对于当前动画i的贡献来说，左边动画的顺序无所谓。</span><br>
<span>那么有如下转移公式dp=max{dp[(j^(1<<i)]+v}，k为j中不包含i的其他动画}</span><br>
<span>举个例子</span><br>
<span>有三个动画a,b,c,数字就是0,1,2吧</span><br>
<span>比如要计算dp那么就是在</span><br>
<span>dp+v</span><br>
<span>dp+v</span><br>
<span>选个最大的</span><br>
<span>形象的说，就是比较210和120中哪个大</span><br>
<span>最后在dp中选个最大的就是答案</span><br>
<span>时间复杂度是O(n*2^n)</span><br>
</p><p><b>海底铁锚: </b><br>
<span>一百三十万颗星 发表于 2020-1-30 16:28</span><br>
<span>虽然一个序列给出的偏序关系对应在图上出来有大量冗余信息，但是大量序列的时候可以让完全图的每条边的权 ...</span><br>
<span>序列数少的做法写在36楼了，多谢提醒。</span><br>
<span>退役后还是有一些坏习惯，感觉没数据范围就写不了题了。</span><br>
</p><p><b>一百三十万颗星: </b><br>
<span>我不懂朱刘算法，但是这个问题等价于寻找一个图的最大DAG子图</span><br>
<span>google之后找到了一篇论文</span><br>
<span>https://www.aclweb.org/anthology/S15-1031.pdf</span><br>
<span>这篇论文我就看了摘要，意思就是这个问题是APX-Hard的，有高效的估计算法，但寻找最优解仍然是NP的。</span><br>
<span>泥潭最近问的算法题都是NP的，深深感觉到人类的无力。。。</span><br>
</p><p><b>R.I.P: </b><br>
<span>一百三十万颗星 发表于 2020-1-30 18:01</span><br>
<span>我不懂朱刘算法，但是这个问题等价于寻找一个图的最大DAG子图</span><br>
<span>google之后找到了一篇论文</span><br>
<span>https://www.aclwe ...</span><br>
<span>瞎问问出来大多都是NP-Hard，蛮正常的</span><br>
</p><p><b>海底铁锚: </b><br>
<span>一百三十万颗星 发表于 2020-01-30 18:01:37</span><br>
<span>我不懂朱刘算法，但是这个问题等价于寻找一个图的最大DAG子图</span><br>
<span>google之后找到了一篇论文</span><br>
<span>这篇论文我就看了 ...学习了</span><br>
<span>-- 来自 能看大图的 Stage1官方 Android客户端</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1911297[0-50]</guid>
    </item>
  </channel>
</rss>
