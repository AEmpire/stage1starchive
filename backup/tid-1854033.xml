<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>关于转码农学习计划的人生湘潭</title>
    <link>https://bbs.saraba1st.com/2b/</link>
    <description>关于转码农学习计划的人生湘潭</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 09 Jul 2020 18:15:51 +0000</lastBuildDate>
    <item>
      <title>关于转码农学习计划的人生湘潭[0-50]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1854033-1-1.html</link>
      <description>关于转码农学习计划的人生湘潭&#13;
先简单介绍下，我本科普通一本，研究生普通985研一，均是传统工科，和计算机没什么关系。出于个人兴趣和某些原因决定转码农，目标是后端。先说清楚，并非是为了钱转行的，本专业的校招钱虽然不高，但还过得去。家里条件也还可以。
&#13;
因此目前的学习计划是JAVA基础语法 ——》C++基础语法 ——》算法与数据结构 ——》 CSAPP　——》　SICP　——》操作系统(暂定OSTEP) ——》计算机网络 ——》数据库原理 ——》 设计模式 ——》开始找开源项目练手 ——》实习 ——》秋招
&#13;
目前到了第四步。因为不是科班出身，所以希望把基础打得牢一些，不知道这个计划有什么问题，或者大家有什么其他建议也可以提出。 
&#13;
谢谢大家！</description>
      <content:encoded><![CDATA[<p><b>Armavilla: </b><br>
<span>关于转码农学习计划的人生湘潭</span><br>
<span>先简单介绍下，我本科普通一本，研究生普通985研一，均是传统工科，和计算机没什么关系。出于个人兴趣和某些原因决定转码农，目标是后端。先说清楚，并非是为了钱转行的，本专业的校招钱虽然不高，但还过得去。家里条件也还可以。</span><br>
<span>因此目前的学习计划是JAVA基础语法 ——》C++基础语法 ——》算法与数据结构 ——》 CSAPP　——》　SICP　——》操作系统(暂定OSTEP) ——》计算机网络 ——》数据库原理 ——》 设计模式 ——》开始找开源项目练手 ——》实习 ——》秋招</span><br>
<span>目前到了第四步。因为不是科班出身，所以希望把基础打得牢一些，不知道这个计划有什么问题，或者大家有什么其他建议也可以提出。 </span><br>
<span>谢谢大家！</span><br>
</p><p><b>爱吃冻鳗的猫: </b><br>
<span>哇噢，是新形式的自问自答</span><br>
</p><p><b>jayjoke: </b><br>
<span> 本帖最后由 jayjoke 于 2019-8-17 15:56 编辑 </span><br>
<span>这个论坛是湘潭本地论坛吗</span><br>
<span>每天都有湘潭人发帖</span><br>
</p><p><b>小野賢章: </b><br>
<span>SICP 没必要作为其他课程的前置，可以并行。设计模式个人感觉没必要特意学。</span><br>
<span>搞后端开发，一般来说肯定要熟悉 Linux，而且你都学过 C++ 了，建议在计算机网络之后看看 APUE 和 UNP。</span><br>
</p><p><b>proted2401: </b><br>
<span>后端为什么要学c++，你又不去生产线搞维护开发。。。反正最后选择哪种语言还是到工作后的具体项目的技术路线决定的。。</span><br>
</p><p><b>chachi: </b><br>
<span>不是科班出生学习科目还这么随性，请去找个培训中心的课程好好研究下</span><br>
<span>----发送自 samsung SM-N9600,Android 9</span><br>
</p><p><b>精钢魔像: </b><br>
<span>操作系统应该排前面的，搞明白资源分配和回收，crt，编译和链接就可以了</span><br>
</p><p><b>洗刷刷: </b><br>
<span>proted2401 发表于 2019-8-17 16:00</span><br>
<span>后端为什么要学c++，你又不去生产线搞维护开发。。。反正最后选择哪种语言还是到工作后的具体项目的技术路 ...</span><br>
<span>C++地位太高，几乎是编程语言的国际语，而且学C++可以加深对计算机语言原理的理解，承上启下，学了很有好处的</span><br>
</p><p><b>Armavilla: </b><br>
<span>chachi 发表于 2019-8-17 16:01</span><br>
<span>不是科班出生学习科目还这么随性，请去找个培训中心的课程好好研究下</span><br>
<span>----发送自 samsung SM-N9600,Androi ...</span><br>
<span>培训中心根本不上底层原理的，就是参考了科班的培养计划才定的这个步骤</span><br>
</p><p><b>Armavilla: </b><br>
<span>洗刷刷 发表于 2019-8-17 16:04</span><br>
<span>C++地位太高，几乎是编程语言的国际语，而且学C++可以加深对计算机语言原理的理解，承上启下，学了很有好 ...</span><br>
<span>对，我cs的朋友说C++很重要，而且很多书代码都是C或C++写的。不过我Ｃ＋＋就学了基础语法，复杂的暂时就没看了。</span><br>
</p><p><b>由比ケ浜結衣: </b><br>
<span>你看的东西互联网一线大厂的面试基本问不到，leetcode先刷起来吧，好歹能进面试。</span><br>
</p><p><b>Armavilla: </b><br>
<span>由比ケ浜結衣 发表于 2019-8-17 16:13</span><br>
<span>你看的东西互联网一线大厂的面试基本问不到，leetcode先刷起来吧，好歹能进面试。 ...</span><br>
<span>我看牛客上的面经操作系统和网络经常问啊</span><br>
</p><p><b>chachi: </b><br>
<span>你又不是科班出生，认清自己的位置啊</span><br>
</p><p><b>革萌: </b><br>
<span>今者臣来，见人于大行，方北面而持其驾，告臣曰：“吾欲之楚。”臣曰：“君之楚，将奚为北面？”曰：“吾马良。”臣曰：“马虽良，此非楚之路也。”曰：“吾用多。”臣曰：“用虽多，此非楚之路也。”曰：“吾御者善。”此数者愈善，而离楚愈远耳。</span><br>
</p><p><b>Armavilla: </b><br>
<span>革萌 发表于 2019-8-17 16:35</span><br>
<span>为何说我这是南辕北辙。</span><br>
</p><p><b>Armavilla: </b><br>
<span>chachi 发表于 2019-8-17 16:29</span><br>
<span>你又不是科班出生，认清自己的位置啊</span><br>
<span>意思是我直接上框架？ 不管底层了？</span><br>
</p><p><b>mimighost: </b><br>
<span>Armavilla 发表于 2019-8-17 16:17</span><br>
<span>我看牛客上的面经操作系统和网络经常问啊</span><br>
<span>你突击是不可能面面俱到的，人家只要稍微一问你就露馅了</span><br>
<span>所以，我还是建议刷点儿实用的，面向面试的编程比较好。选点儿java还有js或者python这些学学，掌握一下框架，搞点实用的。眼光放低，以小公司为主，待遇也不要要求太高</span><br>
<span>就这样</span><br>
</p><p><b>chachi: </b><br>
<span>Armavilla 发表于 2019-8-17 16:40</span><br>
<span>意思是我直接上框架？ 不管底层了？</span><br>
<span>直接上实务</span><br>
<span>比如数据库直接找个mysql之类的学学</span><br>
<span>CSAPP、SICP、操作系统、计算机网络、设计模式 都不用学</span><br>
<span>总体上要贴近项目，贴近实务</span><br>
<span>花那么多时间学了那么多务虚的，需要实际工作中才能理解的东西，对你面试有用吗？</span><br>
<span>你和科班出身的一起竞争，你业余学的凭什么比别人上课老师教的学的好？不如另辟蹊径。</span><br>
</p><p><b>neetking123: </b><br>
<span> 本帖最后由 neetking123 于 2019-8-17 17:07 编辑 </span><br>
<span>不用看视频和课本学那些科班的书，会劝退的。github有校招笔记，900页把，基本上把面试需要的所有东西给你讲明白了，我觉得比看书好用多了。</span><br>
<span>你这种出身好，刷LeetCode，自己做几个能拿得出手的project是最好的（不是说黑马之类的那些视频里讲的不好，但是它们里面的实战项目实在是太多人用了），这个过程中鞋垫博客啥的。</span><br>
<span>你可以自己在这个过程中，先写爬虫看51job之类的上后端须要的技术栈，然后再跟着黑马之类的跳着加速看看，做点自己想要做的东西，这个是最棒的，也并不会想你说的那么枯燥。等你做完了几个project，你觉得还想夯实基础，再去找大牛的博客或者自己看书跳着看视频来学吧，不过到时候你去v2ex之类的地方发帖自然有hr来勾搭你了，之前看过专科的还有超大龄40岁转行的，一个是项目确实牛逼在github trending上刷了几次榜，另外一个是写的博客被他同事无意中访问到了这样子。</span><br>
<span>框架啥的看招聘网上的需求来，现在Springcloud之类的很火，但是实际招聘的不是很多，你自己考虑吧。</span><br>
</p><p><b>合同工: </b><br>
<span>JAVA基础语法 -> 有用，Java仍然是业界最流行的语言，除了啰嗦点基本没缺点</span><br>
<span>C++基础语法 -> 没用，屠龙之术，纯浪费时间，除非你想搞后台或者做游戏，两者都很苦逼</span><br>
<span>算法与数据结构 -> 非常有用</span><br>
<span>CSAPP/SICP/操作系统(暂定OSTEP)/计算机网络 -> 有用</span><br>
<span>数据库原理-> RMDBS有点过时了，随便看看就行</span><br>
<span>设计模式 -> 随便看看就行，得实践遇到问题之后才能知道这玩意儿到底在说什么解决了什么问题，而且这玩意儿要解决的很多问题在新的语言框架里面都不存在</span><br>
<span>开始找开源项目练手 -> 有用</span><br>
</p><p><b>proted2401: </b><br>
<span>洗刷刷 发表于 2019-8-17 16:04</span><br>
<span>C++地位太高，几乎是编程语言的国际语，而且学C++可以加深对计算机语言原理的理解，承上启下，学了很有好 ...</span><br>
<span>想太多的经典案例。。。。</span><br>
</p><p><b>plusSharp: </b><br>
<span>既然是出于兴趣的话可以学一下编译原理，先试着写个词法分析器</span><br>
<span>—— 来自 samsung SM-A6060, Android 9上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>proted2401: </b><br>
<span>Armavilla 发表于 2019-8-17 16:40</span><br>
<span>意思是我直接上框架？ 不管底层了？</span><br>
<span>就业水平需要达到照着产品经理的需求文档自己独立设计自己负责子模块的数据库等这种程度就行了</span><br>
</p><p><b>mixt: </b><br>
<span>我的意见：</span><br>
<span>java -> 有用，后端适用面最广的语言，日后校招选择面比较广</span><br>
<span>c++ -> 慎重吧，很花时间，工作选择面没java广</span><br>
<span>算法和数据结构 -> 非常有用，建议看书 + 刷题，尤其要搞清楚面试里最常见的一些数据结构，比如各种树，二叉堆，栈等等，刷题建议趁早，比较花时间，leetcode就行，如果嫌题多或者缺少思路，推荐你一本书 https://book.douban.com/subject/30422021/选题和讲解很不错，java代码实现</span><br>
<span>CSAPP/SICP/操作系统(暂定OSTEP)/计算机网络 -> 有用，但是建议以面经为导向挑着看，SICP就不用看了，网络这块，七层里面下面的几层不用看，http协议可以研究下面试常考的点，另外建议结合语言的IO特性看一下，比如java NIO</span><br>
<span>数据库原理 -> 太理论的不用看，还是结合具体技术，一般是mysql，事务、锁、数据表设计常用模式了解下，sql常问的问题了解下</span><br>
<span>设计模式 -> 完整理论不用看，熟悉几个最常见的模式并会用自己主打的开发语言实现sample即可，比较常问的单例模式、工厂模式、观察者模式等等</span><br>
<span>开源项目练手 -> 非常必要</span><br>
</p><p><b>F4keTear: </b><br>
<span>java数据结构两本一看，leetcode刷题就完事了</span><br>
</p><p><b>dogfight: </b><br>
<span>学好英文就可以了</span><br>
</p><p><b>千惊万喜: </b><br>
<span>不为钱转什么码农？</span><br>
<span>-- 来自 能手机投票的 Stage1官方 Android客户端</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1854033[0-50]</guid>
    </item>
  </channel>
</rss>
