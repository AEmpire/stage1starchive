<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>【转】阻止文明倒塌</title>
    <link>https://bbs.saraba1st.com/2b/</link>
    <description>【转】阻止文明倒塌</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 09 Jul 2020 20:01:40 +0000</lastBuildDate>
    <item>
      <title>【转】阻止文明倒塌[150-200]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1837113-1-1.html</link>
      <description>【转】阻止文明倒塌&#13;
来源：https://www.gcores.com/articles/110509
&#13;
乔纳森布洛，2019年5月在莫斯科
&#13;
演讲从1957年苏联发射 Sputnik 上天引发的美苏太空争霸谈起，回顾了首次卫星发射、首次宇航员上天，以及首次登月的过程。在1962年9月肯尼迪总统在一次国会演讲中宣称我们要在这个十年结束之前实现登月。结果1969年阿波罗11号实现了这个目标。Blow 的要点在于：人类（这里指美国）从一无所知，到实现登月只用了12年。然而从那时之后，人类的载人航天事业很大程度上停滞，甚至出现了倒退。这是不是很令人遗憾？
&#13;
Blow 播放了一段后来解密的阿波罗11号现场纪录片片段，那种震撼的感觉难以名状，只有看的人能了解其中直观的『退步感』。
&#13;
然后 Blow 播放了一段 Elon Musk 的 TED 访谈，其中 Elon 指出：我们一定要意识到：不同于可持续能源的未来是必然的，Spacefare civilization（多星球文明）绝对不是必然会发生的（它需要巨大的努力）。1969年人类可以登月，然后人类只能用航天飞机把人送到近地轨道。然后航天飞机退役，近地轨道也没法送上去了——连起来看，趋势是向着0倒退。这和人们对于“科技当然显然必然自动地向前进步”这样的信念相违背。
&#13;
Elon 认为，正好相反，科技在不付出巨大努力的情况下，是逐渐倒退的。
&#13;
从古埃及的后人忘记金字塔，到古罗马人忘记如何建造罗马水道。
&#13;
Elon 的火箭创业公司则非常成功，他们的目标是2024年重新实现载人登月。Blow 接下来给出了几个科技倒退的实例：
&#13;
第一个是 Lycurgus Cup，公元300年。从正面看它的反光是青色的，透光来看，则呈现为红色。原因是其银和金的颗粒体积非常小，小到50-70纳米，如此之小以至于物理放大镜看不见它们，想观测需要用电子显微镜。然后西罗马帝国覆灭，后人忘记了这个工艺。
&#13;
很多人认为这就是扯淡，当时的人并不知道其任何原理只是误打误撞做出了这些东西。Blow 则认为有如此观点的人显然没有用心亲手打磨过任何东西，否则他们一定会明白，达到这样水平的结果，是不可能通过偶然和运气的，对于工艺的掌握必然在不断迭代过程中达到了非常高的水平，它才有任何可能出现。比如这个图案中人的身体的肉红色，肯定是费劲千辛万苦不断改进实现出来的。这就是一种材料科学。然后 Blow 提到了拜占庭的喷火筒。拜占庭的战船上安装了这种金属喷管，喷出某种成分的“水扑不灭”的有机物燃烧导致的火焰，焚毁敌人船只。这是拜占庭帝国的国家机密，它在帝国灭亡之前就被遗忘，原因不明，具体实现方式已经不可考证。（顺便补充一句：东罗马帝国只是不再使用气压泵动式喷管，希腊火在1453年仍然存在。只不过变成了装在罐子里的燃烧瓶。）
&#13;
第三个例子是机械日历，一种安提凯希拉装置（Antikythera Mechanism），1901年于希腊安提凯特拉岛上的一艘古船残骸中被发现的随船沉没2100余年的钟形装置。这个机械日历的实际模型被复原为一段动画（自己看视频，语言无法描述），它的精密程度是高档机械手表的范畴。它的存在意味着背后多么复杂的一整套制造能力呢？
&#13;
这样的例子还有很多，就不说了，Blow 这时候放了地动仪的图片。要点是：在人类历史上，杰出的科技被完全遗忘，这件事经常发生。当代也一样。然后 Blow 给出的例子是 Bob Colwell，早期英特尔的首席芯片架构师，在计算机发展初期的时候接受采访的片段内容，背景是他们发现合作的零部件制造商TI（德州仪器公司）送来的产品不能稳定使用，质量残次。Bob 去找 TI 质询，本来以为对方会说“那是你们不知道怎么使用，我们的产品是好的”，实际对方的答复是：“是，我们知道，我看看你的清单。哦，我们还有更多你们不知道的（不好使的产品）。”实际情况是，TI 没有比任何其他竞争对手更差，摩托罗拉、Fairchild 也一样。这些硅制品让英特尔的芯片研发停滞不前，为何会如此？TI的人回答道：“第一代 TTL（逻辑门电路）是那帮胡子花白的老头子做的，他们知道其中的道理；现在的工程师都是毛头小子，学校毕业过来搞生产，他们不知道内部组装的改变，会导致感应峰（inductive spikes）。”这里的spike就是指每一个点的电压变化时，都会产生磁场，而磁场变化的相互干扰，没有被设计者纳入考虑，因为他们不理解。这就是科技退步的原因。代际之间的交流和传承需要巨大的努力，这过程中有损失。如果代际的传承失败，文明就灭亡。接下来 Blow 给出了历史中文明灭亡的实例，来自于 Eric Clive 的一个演讲，题目是《公元前1700年的文明灭亡》，具体来说是青铜器时代晚期，爱琴海，古埃及，塞浦路斯，迈锡尼，赫梯，古巴比伦等。这一圈围绕在美索不达米亚平原和地中海一带的文明曾经形成了一个非常复杂的贸易网络。在下图中，每个节点是一个文明，不是每一个都能和每一个贸易，但通过中间节点，所有贸易都达到非常优化的效率。
&#13;
这一点非常重要，因为青铜作为国防和生产的重要资料，非常难以制造。你需要用锡和铜一起生产。铜产地比较少，比如塞浦路斯岛。而锡则更难找，而且离铜产地非常远，比如阿富汗。而这些文明需要把它们运到一起以生产青铜。而这些文明的灭亡至今没有确切原因，有人说是自然环境恶化导致互相攻击，贸易变成战争。它们灭亡到什么程度呢，不仅是国家不存在了，城市也消失了，语言和文化也消失了。刻在石碑上的文字大多数至今我们不能翻译。Blow 的要点是：软件正在倒退，而人类空前依赖软件。尽管，这和我们置身其中的人的观感是相反的。波音飞机掉下来的主要原因就是软件问题（编者不能同意）。文明衰退的速度如果很慢，我们能意识到这个衰退么？这里 Blow 给出了他对于“软件明显在蓬勃发展”之直观感受的解释：软件正在享受硬件能力提升的红利，它只是“看上去”蓬勃发展而已。机器学习是最明显的例子。一方面，它在二十年前不能存在主要是因为硬件性能无法支持而已。另一方面，它只是人类依赖着的软件世界中极小极小的部分。属于软件的进步已经很长时间停滞。比如，我们使用软件给自己AI换脸成明星的样子，或者配上猪耳朵，这个有趣的部分，只占这个app极小极小的部分，而这个部分非常简单，另外的极大部分却极度复杂，包括把你的脸加载到屏幕上，以及处理你的点击，等等。出问题的是这些部分。人工智能的局部成就，没法和软件世界整体的退化的巨大惯性抗衡。最明显的迹象，就是“我们已经不指望软件能长期稳定工作了。”我们的标准一降再降，还能降到多低？降低到哪里会出大问题？接下来 Blow 疯狂吐槽了十分钟，关于电脑上一切软件都经常 bug，以至于用户对于一切软件“重启试试”成为不假思索的操作。包括 Emacs 的问题、Visual Studio 不能处理最最简单的指令，只能连续报错，微软 Word 的字符换行 bug 二十年后仍然没有消灭，像幽灵一样此起彼伏；于是他为了缓解自己的愤怒想打游戏，打开 Epic Store 和 Steam 又连续遇到 bug；于是他关掉游戏客户端去看 CS 直播，发现 CS 直播电竞比赛里全程有一个多余的名为“未定义”的 bug 玩家出现在地图里，直到比赛结束；然后他进入俄罗斯签证申请页面，被死活不能通过，且不能刷新的手机号验证脚本逼得只能刷新整个页面重新填写申请；然后他来到莫斯科住进酒店，他的房间的座机有5%的概率会空调开关触发响铃……等等。编者这里就不赘述了。这让90年代电脑销售的一个常见推销语“五个9”（指，本设备可以99.999%时间稳定运行）成为今日的讽刺。Blow的电脑连两个9都没有。对于这个问题，软件行业的普遍答案是：市场不会为更好的稳定性买单。Blow则认为：对于一个从未提供出足够稳健的产品的行业，为什么会有人会相信它『能』？接下来，Blow 从正面描述了软件的结构：抽象层次的序列。机器语言、汇编语言、Fortran/C/C++、C#/Haskell/Javascript……在这个序列里，绝大多数工程师在最高抽象层次进行工作，因为这是“聪明、省力、高效率的”。在这个抽象从低到高的序列里的某些位置，问题就出在这里。Blow 认为，全行业的高抽象层次工作，多数人的“高效率”的另一面，是失去（或者从未拥有过）能力。考虑 Facebook 作为一个软件的功能增加，和它要多雇佣的成千上万的工程师，二者相除得到的平均每人的价值创造是趋近于零的。这和“抽象层次越高效率越高”明显矛盾。
&#13;
Blow 给出的对比，是 UNIX 发明者 Ken Thompson 的一个演讲片段。他回忆道他趁老婆孩子出去度假，用了三个礼拜写了三个东西（编辑器、编译器、软硬件交互层或者叫操作系统），做出了 UNIX。现场爆发笑声和掌声——当今程序员可没有这种效率。而 Blow 认为这是个悲剧，它并不好笑。今天软件显没有在进步，它的鲁棒性和生产力都在衰退。Blow 从图形计算的角度给出了一些“最最基本的，你不能直接做的事情”，其中一个编者能听懂的例子是，把一个程序拷贝到另一个设备（安装是个复杂过程）——而这并不是因为 CPU，CPU 不能背锅因为今天各类设备的 CPU 一致性已经相当好。安装程序不是为了对接 CPU，而是为了解决操作系统层面不可思议之多的兼容问题，其绝大部分是我们不想打交道的。操作系统本来是给 CPU 赋予能力，但同时你也可以说它防止着 CPU 具备很多能力。在编程过程中，你绝大多数时间在处理那些，你很难理解、也不可能预料到的各种和你的设计思路没有关系的问题。更可怕的是，你不能直接编写一个独立程序进行编译和 linking。微软为了能让人这么做，专门设计了一个 vswhere 的软件。现在有一种叫做LSP的东西，开源的语言服务器协定。在Blow看来它基本上是一种更复杂、更费劲的编写和调用库的方式，而其满足的需求都是非常基本的操作，比如在你的编辑器里临时起意，查看一个变量的特征或者类型，LSP给你提供一个工具条，或者鼠标点击直接查询的功能。为了实现这个，你需要一个标准化服务跑在服务器上，好让你的编辑器和服务器用socket交互——为了使用方便，你把本地的、单一的编程工作置于分布式的系统之中。
&#13;
这样的做法推而广之，你依赖了越来越多的库，库又依赖了越来越多的库，关键是这些库/服务本身可能是在变化的、并且没有被中心化地存储和管理，这样一来我们就陷入了无穷无尽的debug的、重启服务的、互相同步的……我们自身所不能掌握的问题海洋之中。
&#13;
现在大家竟然在积极主动建设着这样一个东西。程序员们忙着把简单事情复杂化的同时……电脑游戏却变得连最基本的事情都很难实现了。比如游戏现在很难保持全屏, 经常跳出为窗口。再比如，辛辛苦苦做的游戏，很难稳定在一个帧数上跑，无论你多努力也不行。Allen（全称听不清楚）在GDC上介绍了他的一篇论文讲述了这个简单的能力我们现在无法具备的原因。复杂性的提高，加速了知识的丢失：
&#13;
1、知识总量更多，我们就让每个人知道的比例变得更小来应对。
&#13;
每个人对全局的把握一弱再弱，既难以传承知识，也难以做好自己的工作。
&#13;
2、『深知识』被『琐碎信息』替代。
&#13;
典型的深知识，如理解Cache Coherency（缓存一致性，指保留在高速缓存中的共享资源，保持数据一致性的机制），可以让人优化程序在多个处理器上跑得更快。典型的琐碎信息，如『这个Unity里的小图标不知道为啥不显示了，请教老师傅得知，是某个深藏不露的菜单里看似没有关联的一个开关关闭了导致的，打开就好了，过了一阵子它不知道为何又关闭了，总之，编译之前一定要记得检查那开关打开没有』。后者作为知识，往往几个月后随着Unity版本更新就完全作废，作为程序员要花很多脑力学习这种速朽的所谓知识，这件事情非常缺（offensive）。
&#13;
3、好信息被噪音淹没。
&#13;
症状是谷歌越来越难用，你的问题越复杂，网上搜来搜去看到的答案就越大概率是错的，或者只是浪费你的时间。Blow认为，显而易见的是，复杂性越高，我们承受灾难，或者体制性腐化（参考上文东罗马帝国），的能力就越差。而现在大家似乎相信，我们能承担的复杂性上限，是无限的。想象现在大公司里那种极少数能够透彻理解整个系统的工程师离退休之后后继无人、且很难把整套知识传递给年轻员工的情况，答案已经很明显了。这一切和游戏有什么关系呢？
&#13;
曾经的游戏，是关于如何榨干性能，将机器的潜力推至极限的。推至极限，要求我们透彻理解机器本身，这就自然导致我们倾向于做出非常鲁棒的程序。今天整个行业转向Unity和Unreal。自己写引擎的人越来越少。一整代程序员从学习到工作，一直在写支离破碎的C#片段，放在Unity的这里那里，从来没写过系统性的，或者底层的程序。这本身倒没什么，它缩短开发时间，提高个人效率，缩短游戏开发时间。但这意味着放弃，对其他能力的放弃，对整体性知识的放弃。Blow说，割裂性的分工没问题，但是如果所有人都这样分工，那么没有任何人会做这之外的事情了。Unity和Unreal又是怎么来的呢？它们生长于这样一个环境：所有的游戏公司都在自己写引擎，专门的引擎公司就从这些游戏公司里雇人过来，做出了如今的垄断性引擎。现在没有这样的环境，彻底没有那种人了的话，Unity去哪里雇人？首先的结果，是他们彻底断绝了新引擎作为竞争对手的涌现可能。然后，这几个大引擎怎么继续维护和发展，也成了问题，自身开始衰退，也是很有可能的。
&#13;
游戏开发者社群的情况很像阿西莫夫的《基地》：我们有一群人知道怎么用电脑编程、也有一群人精通嵌入式系统/高性能计算这些事。当很多程序败坏、丢失、难以维护的时候，我们这群人的知识可以重建它们——但我（Blow）真的不确定，我们是否有足够多的底层人才，以及对底层充分了解的高层人才，能做好系统底层的工作。也许，我们需要一个新的『基地』（foundation，也有基础的意思）。不好意思，剧透了。说回到青铜时代的文明失落，无数历史显示了一种现象：当只有精英阶层可以读和写的时候，很多能力无法普及，文明变得脆弱——普通人也主观上不想学习那些。今天的我们，几乎没有人能理解自己的程序跑着的时候，CPU里正在发生什么。这就是脆弱。如果青铜器时代那个程度的知识都会失落，那面对我们现在如此复杂的系统，我们怎么能相信它的存续和发展？各种各样的生存压力随时可能爆发，考验我们的软件世界。比如气候变迁。比如国际争端，比如一些国家切断国际互联网了，比如中国不给我们加工芯片了。别笑，现在有些国家的程序员连上stackoverflow复制粘贴代码都费劲。这些事情单独来看肯定都不至于伤害我们的文明，系统复杂到今天程度，抗折腾能力会很差。
&#13;
正如Elon Musk所言，技术会自然地退步。我们要警惕，要对抗，就一定要在每一个层级上简化：硬件、操作系统、库、应用层面的代码、网络、编译、debug、内容分发、人机交互。而这一切又完全可以如此简单，因为它们的现状如此荒谬！我们需要的只是『意愿』（will）和『品位』（taste）而已！大家都充分认识到复杂之荒谬，简单之美——简化可以让事情变得更好。退一万步讲，也许你认为软件不会让文明倒塌。没关系，咱们就只从自身利益出发——所有程序员都每天气呼呼的工作着，因为他们知道自己大量的时间精力用在没有意义的荒唐事上，而不是真正有趣的，创造性的事上。如果我们不改变做事的方式，未来的程序员工作会更加庸俗不堪，就跟没有SpaceX时候的美国航天事业一样。再退一步，假设你只是独立游戏开发者，你可能觉得，自己无力改变任何事情，只要忍几个月，把游戏做完就好了，毕竟重构、重写需要大量的时间——我想告诉你这种想法永远是错误的，因为我们永远低估了自己做游戏需要的时间，你以为的五个月，大概率实际是几年。糟糕的工作方式让你付出的代价，比你以为的，要大得多，长得多。也许那拖延的几年时间，就是拜复杂系统所赐。反过来，如果你积极应战，简化架构和代码，兴许很值得。听起来像是又基础又无聊的建议，但我要大胆断言——我们大多数人甚至都不太知道怎么做这件事了。最后Blow给大家提供了三个补充阅读/观看的资料，此处包括本演讲的视频和所有资料均不能提供链接，你可以去不存在的地方很容易搜索到：
&#13;
[*]Casey Muratori，『三千万行代码难题』。
&#13;
[*]Samo Burja，『文明：体制、知识与未来』。
&#13;
[*]Eric Cline，『公元前1177：文明倒塌时』。
&#13;
===================================================================================================================================================================================
&#13;
编者按：在2019年5月17号，莫斯科的 DevGAMM上，Jonathan Blow发表了一个题为『阻止文明倒塌』的长达一小时的奇怪演讲。我把这个演讲总结为下面这篇文字记录。善意提醒：不懂编程不代表你我不能阅读一篇和计算机有关的演讲，并有所思考，只能跟风刷刷梗；另外，对于Blow的观点，作为成年人我们应该可以有自己的反思。我个人对这个演讲的逻辑非常赞叹，但也认为他明显偏重了软件系统本身的问题，而对另一个甚至更根本的问题选择了视而不见。那就是当代效率提升过程中的真正瓶颈：人的协作。如果仔细观察软件，以及其他可以类比的当代文明复杂系统，大规模的人际协作中无法改进的沟通效率、责任分配、人性的不可管理，都让系统不可避免地显现为笨拙甚至荒谬的面貌。而抽象层级的提高，也绝不仅仅是软件的趋势而已，正如它所带来的问题也绝不仅是机器的问题。===================================================================================================================================================================================
&#13;
所以任何现在还坚持认为“兴都库什山脉里的神棍没有胜算，因为我们已经消灭了他们两百万人”的家伙都是傻逼，所有不怕教权派的人都喜欢重复“我们有多少飞机，多少坦克，多少军舰，他们只有多少”，生活在现代社会产生了“无限稳定”的错觉。就算是工业党里学过马哲的人也能够指出，现代文明本身的复杂性与其易碎性成正比，尤其是在全球的上层建筑与生产基础脱节时。上层建筑一旦崩溃，发达国家秒回19世纪甚至不如。教权派根本不在乎你有多少飞机坦克航母，他们只是等着现代文明的上层建筑自动崩溃，然后他们的人就可以接管整个世界了，一切自上而下的组织，在这个过程中会自动灭亡，无论看上去多强。自下而上的还能有点用。能和教权派对抗的摩门教这个时候就天下无敌了。</description>
      <content:encoded><![CDATA[<p><b>peter723pan: </b><br>
<span>这文章主题， 可以类比成:</span><br>
<span>初级多细胞生物，只是一堆生活在起的单个细胞，没有神经系统没有循环系统，把它切成几段，各段还能活得好好的功能完整。</span><br>
<span>高级多细胞生物，身上破个大一点的洞，多流点血，就整体崩溃步向死亡。</span><br>
<span>所以谁想倒着活回去当个水螅吗？</span><br>
</p><p><b>胡桃丶: </b><br>
<span>所以说，应该大力发展提升人类性能的技术啊，如果人类的学习效率能提高10倍百倍，那这个问题是不是不攻自破？</span><br>
</p><p><b>yinfu: </b><br>
<span> 本帖最后由 yinfu 于 2019-6-6 10:24 编辑 </span><br>
<span>看到编者按才意识到这演讲者是Jonathan Blow啊</span><br>
<span>建议配合联动机核的节目食用，这位老哥真的有点东西关于游戏的信仰-Jonathan blow的创作哲学https://www.gcores.com/radios/95312</span><br>
<span>见证见证者：解读Jonathan Blow的游戏《The Witness》https://www.gcores.com/radios/96753</span><br>
<span>译介 | Jonathan Blow谈科学、语言、现实https://www.gcores.com/articles/100269</span><br>
<span>再一看主楼这篇演讲还就是重轻老师翻译的</span><br>
<span>按我的理解是，在不断用效率、技术更迭实现历史螺旋上升发展的过程中，还是有必要对那些被效率、成本控制所忽略的部分做挖掘、做保存，可能是对已有技术的深入挖掘和钻研，可能是对已淘汰技术的再开发，即使只是作为储备，但对文明整体的多样性有好处，在未来的某一时刻可能会焕发新的生命力。</span><br>
<span>不过这种事可能也只有blow这样的大神or大神棍来做了</span><br>
</p><p><b>焚尘: </b><br>
<span>yinfu 发表于 2019-6-6 10:06</span><br>
<span>看到编者按才意识到这演讲者是Jonathan Blow啊</span><br>
<span>建议配合联动机核的节目食用，这位老哥真的有点东西关于游戏 ...</span><br>
<span>我看几段感觉这思维逻辑有点眼熟，回顶部一看，果然是吹哥</span><br>
</p><p><b>焚尘: </b><br>
<span>你那段私货说的什么玩意？</span><br>
</p><p><b>霜叶舞影: </b><br>
<span>yinfu 发表于 2019-6-6 10:06</span><br>
<span>看到编者按才意识到这演讲者是Jonathan Blow啊</span><br>
<span>建议配合联动机核的节目食用，这位老哥真的有点东西关于游戏 ...</span><br>
<span>对技术成果进行阶段性冻结来保证下次想从同一领域开始的时候不用重新发明轮子的意思？比如搞个STC</span><br>
</p><p><b>随风来去: </b><br>
<span>mimighost 发表于 2019-6-5 18:09</span><br>
<span>交给市场吧</span><br>
<span>你看各种服务器被hack，几千万几亿账户数据的泄漏，每年都不少，但是依然阻止不了大众把越来越 ...</span><br>
<span>你这话可以翻译为：</span><br>
<span>程序员：重写代码，给钱</span><br>
</p><p><b>刺兔: </b><br>
<span>thisism 发表于 2019-6-5 13:23</span><br>
<span>又是Elon 。</span><br>
<span>Elon 认为特斯拉不需要融资</span><br>
<span>整体文章不看，甚至elon提出观点的对错也不看</span><br>
<span>先把能喷的喷了</span><br>
<span>真是本文佐证</span><br>
</p><p><b>VictorWJ: </b><br>
<span>Lzzyf 发表于 2019-06-05 13:59:15</span><br>
<span>为了有一天能去太空我闭着眼睛同意主文观点艹，算我一个</span><br>
<span>-- 来自 有消息提醒的 Stage1官方 Android客户端</span><br>
</p><p><b>yinfu: </b><br>
<span>霜叶舞影 发表于 2019-6-6 10:32</span><br>
<span>对技术成果进行阶段性冻结来保证下次想从同一领域开始的时候不用重新发明轮子的意思？比如搞个STC ...</span><br>
<span>这是我往假大空方向瞎想的，像流浪地球里的文明图书馆（墓碑），在热点技术发展到瓶颈的时候保留另辟蹊径的火种</span><br>
<span>现实情况是这楼里有人说的那样，理想的管理架构设计遇上实际的草台班子管理现状+技术爆炸中商业竞争淘汰之下，断了传承也不是不可能的事情。捡起来保存或者深挖也不是那么容易的事情</span><br>
</p><p><b>enako_cosplay: </b><br>
<span>交接个几千行代码就要死要活的了</span><br>
</p><p><b>walawa: </b><br>
<span>JWJking 发表于 2019-6-5 19:23</span><br>
<span>那现在技术都是写在纸上的了并且永远有备份，还会出现文明坍塌吗？作者认为会，但我怎么都觉得不会，思路还 ...</span><br>
<span>书不是万能的，举个可以类比的例子，一张画很好看，但是你把它转化成文字描述的形式，就会发现大家就不一定能理解这幅画的画面了。文字虽然是高级抽象，但某种意义上是有损转换</span><br>
</p><p><b>liens: </b><br>
<span>熵增是进化的必要条件。</span><br>
<span>吹哥这篇文章提出的问题是现实存在的，但是结论不敢苟同。</span><br>
<span>-- 来自 能看大图的 Stage1官方 iOS客户端</span><br>
</p><p><b>陶矢: </b><br>
<span>真鸡巴小看人类,一个破untiy还怕没人懂? 就现在, untiy公司人死完了.</span><br>
<span>别说丢给猪场鹅场, 就丢给一个二本院校, 什么都不干研究五十年还不整的明明白白的</span><br>
<span>再看看历史滚滚车轮五十年算个屁啊</span><br>
</p><p><b>jinyuede: </b><br>
<span>树洞用的小号 发表于 2019-6-5 23:01</span><br>
<span>主楼说的三个论点：</span><br>
<span>1、知识总量更多，我们就让每个人知道的比例变得更小来应对。</span><br>
<span>每个人对全局的把握一 ...</span><br>
<span>你理想中的管理制度可能确实能办到，可现代的大中小公司，几乎没有一个能达到你说的核心角色有能用的备份角色。所以你提出的解决办法并没有现实意义。。。</span><br>
</p><p><b>马僧虔: </b><br>
<span>跑深度学习的会焊显卡吗</span><br>
</p><p><b>马僧虔: </b><br>
<span>陶矢 发表于 2019-6-6 11:47</span><br>
<span>真鸡巴小看人类,一个破untiy还怕没人懂? 就现在, untiy公司人死完了.</span><br>
<span>别说丢给猪场鹅场, 就丢给一个二本院 ...</span><br>
<span>我受不了，五十年前还不能在手机上看黄片呢</span><br>
</p><p><b>自旋: </b><br>
<span>以前写软件的是万里挑一的科学家，现在嘛，看看知乎就知道了——“我初中/高中/大专毕业，现在转IT/互联网/大数据/人工智能还来得及吗？”</span><br>
</p><p><b>宏: </b><br>
<span>yinfu 发表于 2019-6-6 11:00</span><br>
<span>这是我往假大空方向瞎想的，像流浪地球里的文明图书馆（墓碑），在热点技术发展到瓶颈的时候保留另辟蹊径 ...</span><br>
<span>比起断了传承，更普遍的情况是重复发明轮子，如果有什么东西应发明而没被发明出来，那大概率是因为这玩意没什么卵用</span><br>
<span>还是进化史的例子，眼睛独立演化了6次，飞行能力至少有4次，C4循环还要更多</span><br>
</p><p><b>宏: </b><br>
<span>自旋 发表于 2019-6-6 19:37</span><br>
<span>以前写软件的是万里挑一的科学家，现在嘛，看看知乎就知道了——“我初中/高中/大专毕业，现在转IT/互联网/ ...</span><br>
<span>讲道理，如果AI的用途是扫地机器人，那它的程序员理应是个普通人</span><br>
</p><p><b>Mr.Cheung: </b><br>
<span>重新发明轮子这种事情有时候很难避免的吧，不说那种逐渐变得“无用”的技术，就是有用的技术有时候也会出现这种情况，比如我记得列文虎克显微镜的制作方法就在他死后失传过一段时间才被后人重新发明出来，比起文章里提倡的那种不太现实的做法，可能想办法保证需求和研发投入才是更重要更关键的事情，重新发明就重新发明吧，只要能发明出来就问题不大……</span><br>
<span>-- 来自 有消息提醒的 Stage1官方 iOS客户端</span><br>
</p><p><b>哈里.谢顿: </b><br>
<span>正在转EVE编年史系列的故事，突然想起以前讨论时候有人给嘻嘻皮圆设定，所谓技术核心很可能就是类似STC一样的基础文献或者基础数据。</span><br>
<span>以后进入星际时代，最简单的技术都有可能是现在技术的几何倍的复杂和难度。一旦超过某个技术奇点，单个人就无法掌握一个整体的技术流程，或者是说某个技术流程配套搞得知识。为了防止技术遗失和失传，就会出现类似技术核心或者STC模块的东西</span><br>
<span>凡人只需要搭积木一样凑技术，或者省去查询其他技术资料的功夫。</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1837113[150-200]</guid>
    </item>
    <item>
      <title>【转】阻止文明倒塌[100-150]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1837113-1-1.html</link>
      <description>【转】阻止文明倒塌&#13;
来源：https://www.gcores.com/articles/110509
&#13;
乔纳森布洛，2019年5月在莫斯科
&#13;
演讲从1957年苏联发射 Sputnik 上天引发的美苏太空争霸谈起，回顾了首次卫星发射、首次宇航员上天，以及首次登月的过程。在1962年9月肯尼迪总统在一次国会演讲中宣称我们要在这个十年结束之前实现登月。结果1969年阿波罗11号实现了这个目标。Blow 的要点在于：人类（这里指美国）从一无所知，到实现登月只用了12年。然而从那时之后，人类的载人航天事业很大程度上停滞，甚至出现了倒退。这是不是很令人遗憾？
&#13;
Blow 播放了一段后来解密的阿波罗11号现场纪录片片段，那种震撼的感觉难以名状，只有看的人能了解其中直观的『退步感』。
&#13;
然后 Blow 播放了一段 Elon Musk 的 TED 访谈，其中 Elon 指出：我们一定要意识到：不同于可持续能源的未来是必然的，Spacefare civilization（多星球文明）绝对不是必然会发生的（它需要巨大的努力）。1969年人类可以登月，然后人类只能用航天飞机把人送到近地轨道。然后航天飞机退役，近地轨道也没法送上去了——连起来看，趋势是向着0倒退。这和人们对于“科技当然显然必然自动地向前进步”这样的信念相违背。
&#13;
Elon 认为，正好相反，科技在不付出巨大努力的情况下，是逐渐倒退的。
&#13;
从古埃及的后人忘记金字塔，到古罗马人忘记如何建造罗马水道。
&#13;
Elon 的火箭创业公司则非常成功，他们的目标是2024年重新实现载人登月。Blow 接下来给出了几个科技倒退的实例：
&#13;
第一个是 Lycurgus Cup，公元300年。从正面看它的反光是青色的，透光来看，则呈现为红色。原因是其银和金的颗粒体积非常小，小到50-70纳米，如此之小以至于物理放大镜看不见它们，想观测需要用电子显微镜。然后西罗马帝国覆灭，后人忘记了这个工艺。
&#13;
很多人认为这就是扯淡，当时的人并不知道其任何原理只是误打误撞做出了这些东西。Blow 则认为有如此观点的人显然没有用心亲手打磨过任何东西，否则他们一定会明白，达到这样水平的结果，是不可能通过偶然和运气的，对于工艺的掌握必然在不断迭代过程中达到了非常高的水平，它才有任何可能出现。比如这个图案中人的身体的肉红色，肯定是费劲千辛万苦不断改进实现出来的。这就是一种材料科学。然后 Blow 提到了拜占庭的喷火筒。拜占庭的战船上安装了这种金属喷管，喷出某种成分的“水扑不灭”的有机物燃烧导致的火焰，焚毁敌人船只。这是拜占庭帝国的国家机密，它在帝国灭亡之前就被遗忘，原因不明，具体实现方式已经不可考证。（顺便补充一句：东罗马帝国只是不再使用气压泵动式喷管，希腊火在1453年仍然存在。只不过变成了装在罐子里的燃烧瓶。）
&#13;
第三个例子是机械日历，一种安提凯希拉装置（Antikythera Mechanism），1901年于希腊安提凯特拉岛上的一艘古船残骸中被发现的随船沉没2100余年的钟形装置。这个机械日历的实际模型被复原为一段动画（自己看视频，语言无法描述），它的精密程度是高档机械手表的范畴。它的存在意味着背后多么复杂的一整套制造能力呢？
&#13;
这样的例子还有很多，就不说了，Blow 这时候放了地动仪的图片。要点是：在人类历史上，杰出的科技被完全遗忘，这件事经常发生。当代也一样。然后 Blow 给出的例子是 Bob Colwell，早期英特尔的首席芯片架构师，在计算机发展初期的时候接受采访的片段内容，背景是他们发现合作的零部件制造商TI（德州仪器公司）送来的产品不能稳定使用，质量残次。Bob 去找 TI 质询，本来以为对方会说“那是你们不知道怎么使用，我们的产品是好的”，实际对方的答复是：“是，我们知道，我看看你的清单。哦，我们还有更多你们不知道的（不好使的产品）。”实际情况是，TI 没有比任何其他竞争对手更差，摩托罗拉、Fairchild 也一样。这些硅制品让英特尔的芯片研发停滞不前，为何会如此？TI的人回答道：“第一代 TTL（逻辑门电路）是那帮胡子花白的老头子做的，他们知道其中的道理；现在的工程师都是毛头小子，学校毕业过来搞生产，他们不知道内部组装的改变，会导致感应峰（inductive spikes）。”这里的spike就是指每一个点的电压变化时，都会产生磁场，而磁场变化的相互干扰，没有被设计者纳入考虑，因为他们不理解。这就是科技退步的原因。代际之间的交流和传承需要巨大的努力，这过程中有损失。如果代际的传承失败，文明就灭亡。接下来 Blow 给出了历史中文明灭亡的实例，来自于 Eric Clive 的一个演讲，题目是《公元前1700年的文明灭亡》，具体来说是青铜器时代晚期，爱琴海，古埃及，塞浦路斯，迈锡尼，赫梯，古巴比伦等。这一圈围绕在美索不达米亚平原和地中海一带的文明曾经形成了一个非常复杂的贸易网络。在下图中，每个节点是一个文明，不是每一个都能和每一个贸易，但通过中间节点，所有贸易都达到非常优化的效率。
&#13;
这一点非常重要，因为青铜作为国防和生产的重要资料，非常难以制造。你需要用锡和铜一起生产。铜产地比较少，比如塞浦路斯岛。而锡则更难找，而且离铜产地非常远，比如阿富汗。而这些文明需要把它们运到一起以生产青铜。而这些文明的灭亡至今没有确切原因，有人说是自然环境恶化导致互相攻击，贸易变成战争。它们灭亡到什么程度呢，不仅是国家不存在了，城市也消失了，语言和文化也消失了。刻在石碑上的文字大多数至今我们不能翻译。Blow 的要点是：软件正在倒退，而人类空前依赖软件。尽管，这和我们置身其中的人的观感是相反的。波音飞机掉下来的主要原因就是软件问题（编者不能同意）。文明衰退的速度如果很慢，我们能意识到这个衰退么？这里 Blow 给出了他对于“软件明显在蓬勃发展”之直观感受的解释：软件正在享受硬件能力提升的红利，它只是“看上去”蓬勃发展而已。机器学习是最明显的例子。一方面，它在二十年前不能存在主要是因为硬件性能无法支持而已。另一方面，它只是人类依赖着的软件世界中极小极小的部分。属于软件的进步已经很长时间停滞。比如，我们使用软件给自己AI换脸成明星的样子，或者配上猪耳朵，这个有趣的部分，只占这个app极小极小的部分，而这个部分非常简单，另外的极大部分却极度复杂，包括把你的脸加载到屏幕上，以及处理你的点击，等等。出问题的是这些部分。人工智能的局部成就，没法和软件世界整体的退化的巨大惯性抗衡。最明显的迹象，就是“我们已经不指望软件能长期稳定工作了。”我们的标准一降再降，还能降到多低？降低到哪里会出大问题？接下来 Blow 疯狂吐槽了十分钟，关于电脑上一切软件都经常 bug，以至于用户对于一切软件“重启试试”成为不假思索的操作。包括 Emacs 的问题、Visual Studio 不能处理最最简单的指令，只能连续报错，微软 Word 的字符换行 bug 二十年后仍然没有消灭，像幽灵一样此起彼伏；于是他为了缓解自己的愤怒想打游戏，打开 Epic Store 和 Steam 又连续遇到 bug；于是他关掉游戏客户端去看 CS 直播，发现 CS 直播电竞比赛里全程有一个多余的名为“未定义”的 bug 玩家出现在地图里，直到比赛结束；然后他进入俄罗斯签证申请页面，被死活不能通过，且不能刷新的手机号验证脚本逼得只能刷新整个页面重新填写申请；然后他来到莫斯科住进酒店，他的房间的座机有5%的概率会空调开关触发响铃……等等。编者这里就不赘述了。这让90年代电脑销售的一个常见推销语“五个9”（指，本设备可以99.999%时间稳定运行）成为今日的讽刺。Blow的电脑连两个9都没有。对于这个问题，软件行业的普遍答案是：市场不会为更好的稳定性买单。Blow则认为：对于一个从未提供出足够稳健的产品的行业，为什么会有人会相信它『能』？接下来，Blow 从正面描述了软件的结构：抽象层次的序列。机器语言、汇编语言、Fortran/C/C++、C#/Haskell/Javascript……在这个序列里，绝大多数工程师在最高抽象层次进行工作，因为这是“聪明、省力、高效率的”。在这个抽象从低到高的序列里的某些位置，问题就出在这里。Blow 认为，全行业的高抽象层次工作，多数人的“高效率”的另一面，是失去（或者从未拥有过）能力。考虑 Facebook 作为一个软件的功能增加，和它要多雇佣的成千上万的工程师，二者相除得到的平均每人的价值创造是趋近于零的。这和“抽象层次越高效率越高”明显矛盾。
&#13;
Blow 给出的对比，是 UNIX 发明者 Ken Thompson 的一个演讲片段。他回忆道他趁老婆孩子出去度假，用了三个礼拜写了三个东西（编辑器、编译器、软硬件交互层或者叫操作系统），做出了 UNIX。现场爆发笑声和掌声——当今程序员可没有这种效率。而 Blow 认为这是个悲剧，它并不好笑。今天软件显没有在进步，它的鲁棒性和生产力都在衰退。Blow 从图形计算的角度给出了一些“最最基本的，你不能直接做的事情”，其中一个编者能听懂的例子是，把一个程序拷贝到另一个设备（安装是个复杂过程）——而这并不是因为 CPU，CPU 不能背锅因为今天各类设备的 CPU 一致性已经相当好。安装程序不是为了对接 CPU，而是为了解决操作系统层面不可思议之多的兼容问题，其绝大部分是我们不想打交道的。操作系统本来是给 CPU 赋予能力，但同时你也可以说它防止着 CPU 具备很多能力。在编程过程中，你绝大多数时间在处理那些，你很难理解、也不可能预料到的各种和你的设计思路没有关系的问题。更可怕的是，你不能直接编写一个独立程序进行编译和 linking。微软为了能让人这么做，专门设计了一个 vswhere 的软件。现在有一种叫做LSP的东西，开源的语言服务器协定。在Blow看来它基本上是一种更复杂、更费劲的编写和调用库的方式，而其满足的需求都是非常基本的操作，比如在你的编辑器里临时起意，查看一个变量的特征或者类型，LSP给你提供一个工具条，或者鼠标点击直接查询的功能。为了实现这个，你需要一个标准化服务跑在服务器上，好让你的编辑器和服务器用socket交互——为了使用方便，你把本地的、单一的编程工作置于分布式的系统之中。
&#13;
这样的做法推而广之，你依赖了越来越多的库，库又依赖了越来越多的库，关键是这些库/服务本身可能是在变化的、并且没有被中心化地存储和管理，这样一来我们就陷入了无穷无尽的debug的、重启服务的、互相同步的……我们自身所不能掌握的问题海洋之中。
&#13;
现在大家竟然在积极主动建设着这样一个东西。程序员们忙着把简单事情复杂化的同时……电脑游戏却变得连最基本的事情都很难实现了。比如游戏现在很难保持全屏, 经常跳出为窗口。再比如，辛辛苦苦做的游戏，很难稳定在一个帧数上跑，无论你多努力也不行。Allen（全称听不清楚）在GDC上介绍了他的一篇论文讲述了这个简单的能力我们现在无法具备的原因。复杂性的提高，加速了知识的丢失：
&#13;
1、知识总量更多，我们就让每个人知道的比例变得更小来应对。
&#13;
每个人对全局的把握一弱再弱，既难以传承知识，也难以做好自己的工作。
&#13;
2、『深知识』被『琐碎信息』替代。
&#13;
典型的深知识，如理解Cache Coherency（缓存一致性，指保留在高速缓存中的共享资源，保持数据一致性的机制），可以让人优化程序在多个处理器上跑得更快。典型的琐碎信息，如『这个Unity里的小图标不知道为啥不显示了，请教老师傅得知，是某个深藏不露的菜单里看似没有关联的一个开关关闭了导致的，打开就好了，过了一阵子它不知道为何又关闭了，总之，编译之前一定要记得检查那开关打开没有』。后者作为知识，往往几个月后随着Unity版本更新就完全作废，作为程序员要花很多脑力学习这种速朽的所谓知识，这件事情非常缺（offensive）。
&#13;
3、好信息被噪音淹没。
&#13;
症状是谷歌越来越难用，你的问题越复杂，网上搜来搜去看到的答案就越大概率是错的，或者只是浪费你的时间。Blow认为，显而易见的是，复杂性越高，我们承受灾难，或者体制性腐化（参考上文东罗马帝国），的能力就越差。而现在大家似乎相信，我们能承担的复杂性上限，是无限的。想象现在大公司里那种极少数能够透彻理解整个系统的工程师离退休之后后继无人、且很难把整套知识传递给年轻员工的情况，答案已经很明显了。这一切和游戏有什么关系呢？
&#13;
曾经的游戏，是关于如何榨干性能，将机器的潜力推至极限的。推至极限，要求我们透彻理解机器本身，这就自然导致我们倾向于做出非常鲁棒的程序。今天整个行业转向Unity和Unreal。自己写引擎的人越来越少。一整代程序员从学习到工作，一直在写支离破碎的C#片段，放在Unity的这里那里，从来没写过系统性的，或者底层的程序。这本身倒没什么，它缩短开发时间，提高个人效率，缩短游戏开发时间。但这意味着放弃，对其他能力的放弃，对整体性知识的放弃。Blow说，割裂性的分工没问题，但是如果所有人都这样分工，那么没有任何人会做这之外的事情了。Unity和Unreal又是怎么来的呢？它们生长于这样一个环境：所有的游戏公司都在自己写引擎，专门的引擎公司就从这些游戏公司里雇人过来，做出了如今的垄断性引擎。现在没有这样的环境，彻底没有那种人了的话，Unity去哪里雇人？首先的结果，是他们彻底断绝了新引擎作为竞争对手的涌现可能。然后，这几个大引擎怎么继续维护和发展，也成了问题，自身开始衰退，也是很有可能的。
&#13;
游戏开发者社群的情况很像阿西莫夫的《基地》：我们有一群人知道怎么用电脑编程、也有一群人精通嵌入式系统/高性能计算这些事。当很多程序败坏、丢失、难以维护的时候，我们这群人的知识可以重建它们——但我（Blow）真的不确定，我们是否有足够多的底层人才，以及对底层充分了解的高层人才，能做好系统底层的工作。也许，我们需要一个新的『基地』（foundation，也有基础的意思）。不好意思，剧透了。说回到青铜时代的文明失落，无数历史显示了一种现象：当只有精英阶层可以读和写的时候，很多能力无法普及，文明变得脆弱——普通人也主观上不想学习那些。今天的我们，几乎没有人能理解自己的程序跑着的时候，CPU里正在发生什么。这就是脆弱。如果青铜器时代那个程度的知识都会失落，那面对我们现在如此复杂的系统，我们怎么能相信它的存续和发展？各种各样的生存压力随时可能爆发，考验我们的软件世界。比如气候变迁。比如国际争端，比如一些国家切断国际互联网了，比如中国不给我们加工芯片了。别笑，现在有些国家的程序员连上stackoverflow复制粘贴代码都费劲。这些事情单独来看肯定都不至于伤害我们的文明，系统复杂到今天程度，抗折腾能力会很差。
&#13;
正如Elon Musk所言，技术会自然地退步。我们要警惕，要对抗，就一定要在每一个层级上简化：硬件、操作系统、库、应用层面的代码、网络、编译、debug、内容分发、人机交互。而这一切又完全可以如此简单，因为它们的现状如此荒谬！我们需要的只是『意愿』（will）和『品位』（taste）而已！大家都充分认识到复杂之荒谬，简单之美——简化可以让事情变得更好。退一万步讲，也许你认为软件不会让文明倒塌。没关系，咱们就只从自身利益出发——所有程序员都每天气呼呼的工作着，因为他们知道自己大量的时间精力用在没有意义的荒唐事上，而不是真正有趣的，创造性的事上。如果我们不改变做事的方式，未来的程序员工作会更加庸俗不堪，就跟没有SpaceX时候的美国航天事业一样。再退一步，假设你只是独立游戏开发者，你可能觉得，自己无力改变任何事情，只要忍几个月，把游戏做完就好了，毕竟重构、重写需要大量的时间——我想告诉你这种想法永远是错误的，因为我们永远低估了自己做游戏需要的时间，你以为的五个月，大概率实际是几年。糟糕的工作方式让你付出的代价，比你以为的，要大得多，长得多。也许那拖延的几年时间，就是拜复杂系统所赐。反过来，如果你积极应战，简化架构和代码，兴许很值得。听起来像是又基础又无聊的建议，但我要大胆断言——我们大多数人甚至都不太知道怎么做这件事了。最后Blow给大家提供了三个补充阅读/观看的资料，此处包括本演讲的视频和所有资料均不能提供链接，你可以去不存在的地方很容易搜索到：
&#13;
[*]Casey Muratori，『三千万行代码难题』。
&#13;
[*]Samo Burja，『文明：体制、知识与未来』。
&#13;
[*]Eric Cline，『公元前1177：文明倒塌时』。
&#13;
===================================================================================================================================================================================
&#13;
编者按：在2019年5月17号，莫斯科的 DevGAMM上，Jonathan Blow发表了一个题为『阻止文明倒塌』的长达一小时的奇怪演讲。我把这个演讲总结为下面这篇文字记录。善意提醒：不懂编程不代表你我不能阅读一篇和计算机有关的演讲，并有所思考，只能跟风刷刷梗；另外，对于Blow的观点，作为成年人我们应该可以有自己的反思。我个人对这个演讲的逻辑非常赞叹，但也认为他明显偏重了软件系统本身的问题，而对另一个甚至更根本的问题选择了视而不见。那就是当代效率提升过程中的真正瓶颈：人的协作。如果仔细观察软件，以及其他可以类比的当代文明复杂系统，大规模的人际协作中无法改进的沟通效率、责任分配、人性的不可管理，都让系统不可避免地显现为笨拙甚至荒谬的面貌。而抽象层级的提高，也绝不仅仅是软件的趋势而已，正如它所带来的问题也绝不仅是机器的问题。===================================================================================================================================================================================
&#13;
所以任何现在还坚持认为“兴都库什山脉里的神棍没有胜算，因为我们已经消灭了他们两百万人”的家伙都是傻逼，所有不怕教权派的人都喜欢重复“我们有多少飞机，多少坦克，多少军舰，他们只有多少”，生活在现代社会产生了“无限稳定”的错觉。就算是工业党里学过马哲的人也能够指出，现代文明本身的复杂性与其易碎性成正比，尤其是在全球的上层建筑与生产基础脱节时。上层建筑一旦崩溃，发达国家秒回19世纪甚至不如。教权派根本不在乎你有多少飞机坦克航母，他们只是等着现代文明的上层建筑自动崩溃，然后他们的人就可以接管整个世界了，一切自上而下的组织，在这个过程中会自动灭亡，无论看上去多强。自下而上的还能有点用。能和教权派对抗的摩门教这个时候就天下无敌了。</description>
      <content:encoded><![CDATA[<p><b>植田佳奈: </b><br>
<span>王怡人 发表于 2019-6-5 19:21</span><br>
<span>老领导一个人教不过来,本来是老带中, 中带青,师徒制传承, 这样一代教一代,至今内部依然是互称师傅和 ...</span><br>
<span>发展太快以致传承不过来而已。知识是需要积累的。实在运行不过来就会推倒重建的，重建过程也可以参考现有的基础，就是所谓螺旋式上升。</span><br>
</p><p><b>vandechine: </b><br>
<span>无聊者X 发表于 2019-6-5 17:21</span><br>
<span>一P放的震天响</span><br>
<span>旧的芯片和电路不好使是因为快到极限了，马上跨过原子时代的门槛，再好的电子逻辑都要变成老 ...</span><br>
<span>没读过哲学的程序员谈政治就是这个样子。</span><br>
</p><p><b>askl80: </b><br>
<span>不要慌，还没到40k的时代，现在只是技术调整。。。。</span><br>
</p><p><b>唐边叶介: </b><br>
<span>JWJking 发表于 2019-6-5 19:23</span><br>
<span>那现在技术都是写在纸上的了并且永远有备份，还会出现文明坍塌吗？作者认为会，但我怎么都觉得不会，思路还 ...</span><br>
<span>写文档也要成本，也需要大量的时间和精力，而且写出来还要让其他人能看懂。</span><br>
<span>比如很多eda工具的源代码的文档很少。</span><br>
</p><p><b>kula01: </b><br>
<span>JWJking 发表于 2019-6-5 19:23</span><br>
<span>那现在技术都是写在纸上的了并且永远有备份，还会出现文明坍塌吗？作者认为会，但我怎么都觉得不会，思路还 ...</span><br>
<span>之前写科幻小说写过类似的东西，随便扯扯构思啊，我自己都觉得太糊弄了。</span><br>
<span>是不是有种可能，未来一天，某个天才花了一辈子也无法学完先人的知识的一个分支，他只能横向去拓展知识，却发现要了解另一个分支的知识，必须要从起点再学一辈子，才到这条断头路。这个天才，一辈子也没研究出自己的，新的知识，他反复地在发明轮子。他也无法将知识全部传给后人，因为太多了。</span><br>
<span>技术留在纸上，硬盘里，看上去保留了下来，但是有没有一种可能，就是一个天才花了一辈子的时间也学不到这个硬盘里的内容，单单一个分支上的知识都实在太多了，过目不忘都看不完。</span><br>
<span>那一瞬间，我称之为文明的顶峰，过了这点，因为无法有新的知识被总结出来，知识的圈子又会变小。直到有一天，因为事故也好，灾难也好，战争也好，许多存储知识的东西被破坏，这些知识自然就消失了。</span><br>
<span>所以要避免这种情况，最重要的就是提高学习的效率，延长人类寿命，提高脑容量，但这些肯定不够，最终的方法甚至是</span><br>
</p><p><b>不容易注册上: </b><br>
<span>写的太好了。实际上就是没有新边疆或者未知领域的话，全球化也只是一个大一点的封闭区，而且科技倒退并不是罕见，也不是落后的就不再倒退，塔斯马尼亚人是从澳大利亚过去的，他们只花了几百年就丢失了一项关键技术，连飞去来器都不会了，又过了几百年，衣服也不会做了，很可能就是传承断绝</span><br>
</p><p><b>Gunter: </b><br>
<span>nowords2 发表于 2019-6-5 16:09</span><br>
<span>我想说的是。。</span><br>
<span>你们说的那些例子都是西方文明倒塌，什么石刻看不懂啦不能翻译啦。</span><br>
<span>我们东方没有遇到你这个 ...</span><br>
<span>你说句古汉语给大🔥听听？</span><br>
</p><p><b>sunmedia: </b><br>
<span>清水茶毛吕 发表于 2019-6-5 17:14</span><br>
<span>这个作者是想说社会分工会导致文明变得脆弱吗那退回到游牧阶段最不脆弱了</span><br>
<span>-- 来自 有消息提醒的...</span><br>
<span>然而就算退到山顶洞还是有男女耕战分工啊.</span><br>
</p><p><b>御风八极: </b><br>
<span>所以个人觉得，土狗被美国制裁，一定程度上，是一个验证科技独立发展的机会</span><br>
<span>-- 来自 能手机投票的 Stage1官方 Android客户端</span><br>
</p><p><b>OZV522: </b><br>
<span>果然是轻重老师的文章....</span><br>
</p><p><b>ab6546541: </b><br>
<span>隐含在文字中，作者担心人的退化。</span><br>
</p><p><b>nowords2: </b><br>
<span>Gunter 发表于 2019-6-5 21:41</span><br>
<span>你说句古汉语给大🔥听听？</span><br>
<span>你说个温州话大伙听听？</span><br>
</p><p><b>Tr火药味: </b><br>
<span>qwased 发表于 2019-6-5 17:19</span><br>
<span>说白了就是几十个零件的马车肯定要比几万个零件的汽车可靠</span><br>
<span>—— 来自 Xiaomi MI 6, Android 8.0.0 ...</span><br>
<span>你要是把马算成马车的一部分的话( </span><br>
</p><p><b>树洞用的小号: </b><br>
<span> 本帖最后由 树洞用的小号 于 2019-6-5 22:41 编辑 </span><br>
<span>所谓的技术断代嘛，看怎么说了</span><br>
<span>举个例子，以前铁匠有一个兼职，就是给马钉铁马掌，这个铁马掌打制要根据马的蹄子来适配，而且铁匠还要会削马掌，把开裂的、不平的马掌削成合适的厚度，厚度太厚，容易开裂，削的厚度太薄，马掌铁刺会穿透马掌扎进嫩肉里，就不能干活。</span><br>
<span>这个削马掌、钉马掌等等的活计是一整套技术，根据不同的马种、以及从事拉磨、拉车、战马等不同用途都有区别，学徒要学好几年才算掌握。</span><br>
<span>然后嘛，汽车出现，很明显这个技术就断代了嘛。</span><br>
<span>类似的“技术断代”例子我能给你从早到晚举一大堆不带重样的。</span><br>
<span>而且我还知道，就算现在人类文明遭受大劫难，残余人类文明开始重建，他们也不会再去驯化野马、养殖乘用马、制造蒸汽机……</span><br>
<span>他们会直接造内燃机和电动机。</span><br>
<span>一个文明的价值，不在于它所谓的保存，而在于它是否前进。</span><br>
<span>我大清以骑射立国，绝不忘本，文明倒是没有倒塌，只是被人家的坚船利炮给打得割地赔款了。</span><br>
<span>大清掌握了齐全的战马、骑兵、弓箭的训练、考核、应用技术，然后呢？谁在乎？就算将来要再来一遍大清国，谁还会再去搞弓箭？都是直接从火枪搞起了。</span><br>
<span>写这种耸人听闻的文章的人，潜意识里有一个认识：就是如果文明要再来一次的话，它需要把科技树上所有的弯路岔路重走一遍才能达到今天的成就，所以我们应该在每一个走过的路口都详细标注。我们需要先钻木取火，打制石器，然后再燧石取火，磨制石器……一步步重建文明。</span><br>
<span>怎么说呢？</span><br>
<span>你高兴就好。</span><br>
</p><p><b>itzpapalotl: </b><br>
<span>卧槽，这个杯子，我还在博士论文里讨论过</span><br>
</p><p><b>JWJking: </b><br>
<span> 本帖最后由 JWJking 于 2019-6-5 22:56 编辑 </span><br>
<span>和朋友讨论这个话题，其实挺有深度的</span><br>
<span>https://www.gcores.com/articles/110509</span><br>
<span>1.汇编高级，python低级</span><br>
<span>2. 架构师高级，工程师低级</span><br>
<span>3. emacs vim高级，IDE低级</span><br>
<span>4. 古代神必科技高级，现代集成技术低级</span><br>
<span>其实也没有高级不高级的问题，按照你的例子就是说大家都只会python，没人会汇编了，那对硬件编程就没人做了，这个情况下会不会出现断层呢</span><br>
<span>更硬件一些就是人人都只会用集成运放了，没人用三极管放大了，那TI不卖芯片不就凉了么。</span><br>
<span>直白一些还是程序员要不要会修电脑的问题。。。</span><br>
<span>而且vim高级，VS低级，不是你cs圈传统鄙视链么</span><br>
<span>高级还是emacs高级，vim我都会用，不配的</span><br>
<span>说实话现在看着是mlcv热，我身边学cs走语言编译方向的人也有</span><br>
<span>您还会vim呢</span><br>
<span>真的热爱的人还是有的</span><br>
<span>不然基金会啥的不还是有人在做</span><br>
<span>不然我买68做甚</span><br>
<span>而且吹哥是极端理想主义者啊，他做游戏也是逻辑思考高级，精神刺激低级</span><br>
<span>问题是这世界上又不是人人都会写代码</span><br>
<span>易用性的代价就是很高的</span><br>
<span>易用性的代价就是很高的没毛病</span><br>
<span>那还有一个哲学问题，就是现在技术都白纸黑字写在纸上，永远不会丢失，还会出现技术崩塌吗</span><br>
<span>我总觉得不会的，但是这个作者明显觉得会</span><br>
<span>硬要说的话所有信息存储媒介都是有寿命的…相比硬盘啥的纸张可能还算存在时间长的</span><br>
<span>信息的传递和存储肯定是需要每一代人维护的</span><br>
<span>只要没有持续不断的拷贝过程，不存在永远不丢失的情况</span><br>
<span>我倒觉得不是把字刻在石头上的问题，</span><br>
<span>比方说有人（或者公司）做了很牛逼的基础工作，但是没有明确的注释（或者闭源，或者被互联网垃圾覆盖，或者高难度天书没人看得懂），别人在这个基础工作上开发了很多东西，但是这个人（公司）倒掉了之后，会不会就后续开发成果直接瘫痪了。</span><br>
<span>我理解现在的工程都是像吹哥说的这种分工体系（分工产生效能），所以不存在你说的一个大佬的技术基座在这个人没了以后就没法维护的情况。你看一下现在github上有名的项目contributor都成千上万的，每个人负责自己的小模块而已…</span><br>
<span>不过你说的这个情况有点像之前微博上有人讲过日本政府使用的计算机系统…那也不是因为基础过于牛逼而是因为语言被淘汰了没有新人去学了</span><br>
<span>用脚投票不是好事吗（</span><br>
<span>这倒也是</span><br>
<span>社会分工造成的缺乏整体协作能力，会不会也造成这样的后果呢。</span><br>
<span>实验室里隔壁组讲啥都听不懂的情况挺普遍的，</span><br>
<span>要重新开始一个工作…从几十年前的论文开始看，这样的“断层”感觉其实已经有了。</span><br>
<span>你说的是人月神话嘛，这个公认存在，分工只会是1+1<2不过至少大于1吧。协作成本随着分工的细致程度提高，只能在现实时间和总工时上有所取舍了。</span><br>
<span>所以结论是文明不会崩塌吗，马斯克和吹哥都在吹逼</span><br>
<span>我哪敢给结论，我自己的一点看法。不过吹哥是个本质人我敬重的，马斯克我是觉得真的是个纯粹的商人</span><br>
<span>讲故事方法都是，世界有一个巨大危机，我现在作为钢铁侠普渡世间了，你们要感谢我，还要给我送钱</span><br>
<span>从openai开始我就不喜了</span><br>
<span>真实</span><br>
</p><p><b>无敌大法师: </b><br>
<span>nptomhhiu 发表于 2019-6-5 13:45</span><br>
<span>抓着文章的一个词一句话来展开 真的挺无聊的</span><br>
<span>看完围着主旨讨论不好吗</span><br>
<span>泥潭不就这样吗，什么时候能“看完围绕主旨讨论”了</span><br>
</p><p><b>跃渊: </b><br>
<span>就算人类沦落到战锤人类那样愚昧</span><br>
<span>头巾佬没小贩罩着，有绿皮的繁殖能力没绿皮的waaaagh也没用啊</span><br>
</p><p><b>无敌大法师: </b><br>
<span>树洞用的小号 发表于 2019-6-5 22:33</span><br>
<span>所谓的技术断代嘛，看怎么说了</span><br>
<span>举个例子，以前铁匠有一个兼职，就是给马钉铁马掌，这个铁马掌打制要根据马 ...</span><br>
<span>你聊你的，主楼聊主楼的，挺好</span><br>
</p><p><b>wxshaonv2000: </b><br>
<span>卜要怕 也可能几年后又有黑色石碑duang的一下掉到地球 然后银瑞自己就进化了</span><br>
</p><p><b>CloneCommando: </b><br>
<span>说的挺热闹，不就卖大力丸的么</span><br>
</p><p><b>树洞用的小号: </b><br>
<span>无敌大法师 发表于 2019-6-5 22:51</span><br>
<span>你聊你的，主楼聊主楼的，挺好</span><br>
<span>主楼说的三个论点：</span><br>
<span>1、知识总量更多，我们就让每个人知道的比例变得更小来应对。</span><br>
<span>每个人对全局的把握一弱再弱，既难以传承知识，也难以做好自己的工作。</span><br>
<span>2、『深知识』被『琐碎信息』替代。</span><br>
<span>3、好信息被噪音淹没。</span><br>
<span>这三个论点在我看来都是闲扯淡。什么“想象现在大公司里那种极少数能够透彻理解整个系统的工程师离退休之后后继无人、且很难把整套知识传递给年轻员工的情况”，这种更是对现代管理制度缺少认识到一定程度才能说出来的奇谈。</span><br>
</p><p><b>sanludafu: </b><br>
<span>nowords2 发表于 2019-6-5 16:09</span><br>
<span>我想说的是。。</span><br>
<span>你们说的那些例子都是西方文明倒塌，什么石刻看不懂啦不能翻译啦。</span><br>
<span>我们东方没有遇到你这个 ...</span><br>
<span>东方文明一直躺地上当然不会有走路摔跟头的危险，只不过会有被人从身上踩过去的危险。</span><br>
<span>玩了几千年的皇帝，叛乱过家家游戏都没玩够</span><br>
</p><p><b>尼克芭菲: </b><br>
<span>这是为了防止蓝星人变成堕落粑粑么</span><br>
</p><p><b>清水茶毛吕: </b><br>
<span>sunmedia 发表于 2019-06-05 21:55:28</span><br>
<span>然而就算退到山顶洞还是有男女耕战分工啊.所以说这个作者的思路细究下去就出现问题了啊每次社会大分工都能带来生产力的飞跃发展，但是新的职业就会带来新的专业知识，外行人要掌握这门知识技艺就要经过学习，现在社会分工已经这么细化，任何人要精通某一专业领域都需要几十年的时间，无论是物理学、工程学、还是文学这些领域，都不可能再出现像牛顿、阿基米德、达芬奇这样的全才了。现在的各个学科，专业知识积累到现在的程度，大众对于相关内容只能知道其皮毛。现在的很多人对于电脑的的运行原理、系统的基本架构的了解可能并不会比古人好多少。由少部分人掌握相关领域的大部分知识，这就是脆弱性的由来。感觉除了将相关知识记录在客观媒介上，没有绝这种脆弱性的方法。</span><br>
<span>-- 来自 有消息提醒的 Stage1官方 Android客户端</span><br>
</p><p><b>sanludafu: </b><br>
<span>kula01 发表于 2019-6-5 21:12</span><br>
<span>之前写科幻小说写过类似的东西，随便扯扯构思啊，我自己都觉得太糊弄了。</span><br>
<span>是不是有种可能，未来一天，某 ...</span><br>
<span>所以有人说现在已经不是需要天才，或者天才无法诞生的时代了，信息太多，一个人一辈子单枪匹马已经无法接触到没有研究过的领域了。</span><br>
<span>现在的进步就是把复杂的东西分工，一个天才干不完的分给一百个普通人干。问题就是每个人只了解他手上的那块，对全局没有把握，会导致故障率特别高，为了这些故障做冗余，又需要另外一千个人来审核这一百个人的工作，仅仅是为了将故障率降到可以接受的程度。</span><br>
<span>不要说软件研发，任何一个制造企业恐怕都会有这种问题，或多或少而已。一个流水线上的工人不知道生产线的最终产品，这太正常了</span><br>
</p><p><b>RobinEatCorn: </b><br>
<span>树洞用的小号 发表于 2019-6-5 22:33</span><br>
<span>所谓的技术断代嘛，看怎么说了</span><br>
<span>举个例子，以前铁匠有一个兼职，就是给马钉铁马掌，这个铁马掌打制要根据马 ...</span><br>
<span>应该不是这个意思。造火器的技术和骑射的技术，是相对独立的，掌握其中一个之前不必掌握另一个；但电脑的技术是层层叠加的，一个抽象层次搭建在另一个抽象层次上，如果其中一个抽象层次出问题，其之上的层次都不能正常运作。</span><br>
<span>—— 来自 OPPO R9m, Android 5.1上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>normalli: </b><br>
<span>树洞用的小号 发表于 2019-6-5 23:01</span><br>
<span>主楼说的三个论点：</span><br>
<span>1、知识总量更多，我们就让每个人知道的比例变得更小来应对。</span><br>
<span>每个人对全局的把握一 ...</span><br>
<span>资深员工离职或者去世导致业务出问题的例子数不胜数，不要太迷信管理，管理的精髓就是没出问题的地方就别管</span><br>
</p><p><b>树洞用的小号: </b><br>
<span>normalli 发表于 2019-6-5 23:22</span><br>
<span>资深员工离职或者去世导致业务出问题的例子数不胜数，不要太迷信管理，管理的精髓就是没出问题的地方就别 ...</span><br>
<span>实际上，因为一个资深员工离职而导致整条业务线的停摆，本身就是说明管理上存在问题。最起码一个没有A/B角设计是跑不掉的。资深员工也有家有口，家里老人小孩生病需要照顾怎么办？人出去旅游休假怎么办？</span><br>
<span>说管理的精髓是没出问题的地方就别管，灌输你这个所谓精髓的人，你应该回去呵呵他一脸。现在是9102年啦，就连设备零件都到预防性维修，周期性更换的管理水平了……</span><br>
</p><p><b>adonai: </b><br>
<span>1、知识总量更多，我们就让每个人知道的比例变得更小来应对。</span><br>
<span>每个人对全局的把握一弱再弱，既难以传承知识，也难以做好自己的工作。</span><br>
<span>这话挺对的，知识的总量的越大个体就会相对的变得更无知，</span><br>
<span>而所谓的螺旋上升其实就是个一边发展一边弥补发展中产生的问题的过程，如果没有发展自然也就不会有问题了，但人类不可能不发展，而人类的进步又并不总代表技术的进步，或者说这两者并不总是相向而行的，航天的衰落是因为人类对宇宙的需求没有跟上，技术终归是为人服务的，没有需求再厉害的技术也会被遗忘，拿某方面的技术退步论证文明坍塌是不科学的，</span><br>
<span>最后文章的倡议我觉得没啥可操作性，你不能指望汽车的问题会和自行车的问题一样直观简单好诊断，毕竟自行车拐弯可用不到万向节</span><br>
</p><p><b>normalli: </b><br>
<span>树洞用的小号 发表于 2019-6-5 23:38</span><br>
<span>实际上，因为一个资深员工离职而导致整条业务线的停摆，本身就是说明管理上存在问题。最起码一个没有A/B ...</span><br>
<span>你说的很对，然而实际上管理有问题是普遍现象，管理者本身往往就是那个最不可替代的，就是管理良好的组织也不可避免的会发生组织退化，而且在彻底玩完前通常还能运行很久。</span><br>
<span>管理只是续命，该死还是要死的</span><br>
</p><p><b>adonai: </b><br>
<span>normalli 发表于 2019-6-5 23:22</span><br>
<span>资深员工离职或者去世导致业务出问题的例子数不胜数，不要太迷信管理，管理的精髓就是没出问题的地方就别 ...</span><br>
<span>所有的工作都不能只有一个人会，这也是一条管理原则</span><br>
</p><p><b>树洞用的小号: </b><br>
<span>normalli 发表于 2019-6-5 23:50</span><br>
<span>你说的很对，然而实际上管理有问题是普遍现象，管理者本身往往就是那个最不可替代的，就是管理良好的组织 ...</span><br>
<span>我们首先要有管理体系的理念，也就是草台班子的认知。</span><br>
<span>PDCA循环就是一种假定大家都是草台班子，但是草台班子也是有追求的，于是草台班子在管理体系持续改进的架构下逐渐提升管理效能，</span><br>
<span>你拿任何一本管理体系的设计来看，首先就是讨论你的体系是领导引领还是组织引领还是功能引领。管理者本身不可替代，造成人亡政息，说明整个管理体系的领导者作用本身就没有在架构中得到确立，拿最常见翻烂了的ISO9001-2015质量管理体系来说</span><br>
<span>5.1领导作用与承诺 </span><br>
<span>5.1.1 针对质量管理体系的领导作用与承诺 </span><br>
<span>最高管理者应通过以下方面证实其对质量管理体系的领导作用与承诺：  </span><br>
<span>a) 确保质量方针和质量目标得到建立，并与组织的战略方向保持一致；  </span><br>
<span>b) 确保质量方针在组织内得到理解和实施；  </span><br>
<span>c) 确保质量管理体系要求纳入组织的业务运作；  </span><br>
<span>d) 提高过程方法的意识；  </span><br>
<span>e) 确保质量管理体系所需资源的获得；  </span><br>
<span>f) 传达有效的质量管理以及满足质量管理体系、产品和服务要求的重要性；  </span><br>
<span>g) 确保质量管理体系实现预期的输出；  </span><br>
<span>h) 吸纳、指导和支持员工参与对质量管理体系的有效性作出贡献；  </span><br>
<span>i) 增强持续改进和创新；  </span><br>
<span>j) 支持其他的管理者在其负责的领域证实其领导作用。</span><br>
</p><p><b>7217210868: </b><br>
<span>在机核看到这个内容，略有感触。然千头万绪，不知从何谈起，唯有好评加鹅</span><br>
</p><p><b>vandechine: </b><br>
<span>ab6546541 发表于 2019-6-5 22:09</span><br>
<span>隐含在文字中，作者担心人的退化。</span><br>
<span>这就是看出作者也未必意识到的哲学意义了。西方人的退化不可避免，必然再次被蛮族征服。</span><br>
</p><p><b>εRemastered: </b><br>
<span>vandechine 发表于 2019-6-6 00:40</span><br>
<span>这就是看出作者也未必意识到的哲学意义了。西方人的退化不可避免，必然再次被蛮族征服。 ...</span><br>
<span>人是越来越悲观了</span><br>
<span>上一拨人在担忧末人会不会在文明的尽头寻找自我的途中重拾野蛮变为初人</span><br>
<span>现在这拨人觉得我们还没成为末人就要因为自己把高科技忘了人而被初人征服了</span><br>
</p><p><b>εRemastered: </b><br>
<span>bioCory 发表于 2019-6-5 19:28</span><br>
<span>前天是霍梅尼去世三十周年，你要是不信可以去看看五十年前伊朗啥样，当年阿拉伯世界遍地共运到今天这样也 ...</span><br>
<span>那你看过今天的伊朗啥样吗？</span><br>
<span>以前我还担心泥潭彻底粉红化会无聊呢，今天我放心了。就一小撮城市人“开明”的巴勒维伊朗也有人吹，想必他们也会吹解放后比二十年代民国退化了的</span><br>
</p><p><b>ft1276130: </b><br>
<span>微博毁灭博客，朋友圈摧毁微博，抖音碾压朋友圈</span><br>
</p><p><b>wszweill: </b><br>
<span>树洞用的小号 发表于 2019-6-5 10:38</span><br>
<span>实际上，因为一个资深员工离职而导致整条业务线的停摆，本身就是说明管理上存在问题。最起码一个没有A/B ...</span><br>
<span>理论上如此，但是草台班子的问题比什么文化倒退严重多了吧 现在又没有一键克隆人技术，企业压榨员工996正常职位都不想招满，还能备份一个资深员工 又不是啥经验都是程序员写文档那么简单</span><br>
</p><p><b>Mozlynx: </b><br>
<span>freeforever 发表于 2019-6-4 22:19</span><br>
<span>文章提出的某些问题是对的不代表文章的所有观点是对的，更何况对错这种东西很多时候会随着立场变化，就像贸 ...</span><br>
<span>P社罪该万死，杯赛罪该万死。</span><br>
</p><p><b>Mozlynx: </b><br>
<span>虽然有点九斤老太，但还是有一定道理。</span><br>
</p><p><b>凉宫绿豆沙: </b><br>
<span>弱弱地说一句，人的精力是有限的，我司有人不用unity自己写了一个游戏（还包办了部分美术和所有ui），但他每天为了移植和接SDK疲于奔命，无暇更新玩法和模式（在做的ns版玩法和两年前手机版完全一致）。所以在我看来，unity这种东西的出现，给了我这种菜鸟把想法实现出来的机会，至少我可以东拼西凑一个可玩的demo，而不是让想法只能停留在ppt上，当然真正的完整游戏还是得由专业程序编写。</span><br>
</p><p><b>9090asd: </b><br>
<span>凉宫绿豆沙 发表于 2019-6-6 07:04</span><br>
<span>弱弱地说一句，人的精力是有限的，我司有人不用unity自己写了一个游戏（还包办了部分美术和所有ui），但他 ...</span><br>
<span>这里的问题其实是备份不足吧</span><br>
<span>不是说通用引擎不好，但是随着竞争的加剧整个世界的3通用引擎市场慢慢就集中到了unity与虚幻上了，使用自己引擎的大厂也越来越少</span><br>
<span>这样下来万一这两个企业出了什么问题，导致传承断裂了，未来的菜鸟程序员面对这两社留下的庞大代码怕不会一筹莫展啊</span><br>
</p><p><b>我永远喜欢...: </b><br>
<span>我觉得有道理，虽然文中指的技术可能没有直接提高生产力，但没有那些不能直接提高生产力的技术理论，哪有后面能够提高生产力的技术的出现呢，比如航天，从冲出大气层到开发宇宙资源多么漫长，需要多么持久的努力。</span><br>
<span>—— 来自 HUAWEI EML-AL00, Android 9上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>dartheven: </b><br>
<span>高本惠 发表于 2019-6-5 18:02</span><br>
<span>是时候发射一艘定期回访母星的自动教学飞船了</span><br>
<span>会在某次回访中被当做技术异端砸毁。</span><br>
</p><p><b>逃离学校: </b><br>
<span>简单点说，我十年前看的动画现在一点剧情都记不清了，这就是知识断代</span><br>
</p><p><b>yym: </b><br>
<span>kula01 发表于 2019-6-5 21:12</span><br>
<span>之前写科幻小说写过类似的东西，随便扯扯构思啊，我自己都觉得太糊弄了。</span><br>
<span>是不是有种可能，未来一天，某 ...</span><br>
<span>最重要的就是提高学习的效率，延长人类寿命，提高脑容量，但这些肯定不够这倒不一定，以后人类说不定义体化了呢，寿命无限长，知识更是直接传进去就行</span><br>
</p><p><b>bioCory: </b><br>
<span>εRemastered 发表于 2019-6-6 00:53</span><br>
<span>那你看过今天的伊朗啥样吗？</span><br>
<span>以前我还担心泥潭彻底粉红化会无聊呢，今天我放心了。就一小撮城市 ...</span><br>
<span>以前中东的共产党都是假的？巴列维王朝是被外星人推翻的？</span><br>
</p><p><b>vandechine: </b><br>
<span>bioCory 发表于 2019-6-6 08:42</span><br>
<span>以前中东的共产党都是假的？巴列维王朝是被外星人推翻的？</span><br>
<span>巴列维是阿訇们推翻的，以前的遍地社会主义党跟巴列维没什么区别，一小撮城市小资yy出来的不同路线罢了。</span><br>
</p><p><b>黑色蘑菇: </b><br>
<span>bioCory 发表于 2019-6-6 08:42</span><br>
<span>以前中东的共产党都是假的？巴列维王朝是被外星人推翻的？</span><br>
<span>中东外部干预太多；神棍得势也不全是当地人的选择</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1837113[100-150]</guid>
    </item>
    <item>
      <title>【转】阻止文明倒塌[50-100]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1837113-1-1.html</link>
      <description>【转】阻止文明倒塌&#13;
来源：https://www.gcores.com/articles/110509
&#13;
乔纳森布洛，2019年5月在莫斯科
&#13;
演讲从1957年苏联发射 Sputnik 上天引发的美苏太空争霸谈起，回顾了首次卫星发射、首次宇航员上天，以及首次登月的过程。在1962年9月肯尼迪总统在一次国会演讲中宣称我们要在这个十年结束之前实现登月。结果1969年阿波罗11号实现了这个目标。Blow 的要点在于：人类（这里指美国）从一无所知，到实现登月只用了12年。然而从那时之后，人类的载人航天事业很大程度上停滞，甚至出现了倒退。这是不是很令人遗憾？
&#13;
Blow 播放了一段后来解密的阿波罗11号现场纪录片片段，那种震撼的感觉难以名状，只有看的人能了解其中直观的『退步感』。
&#13;
然后 Blow 播放了一段 Elon Musk 的 TED 访谈，其中 Elon 指出：我们一定要意识到：不同于可持续能源的未来是必然的，Spacefare civilization（多星球文明）绝对不是必然会发生的（它需要巨大的努力）。1969年人类可以登月，然后人类只能用航天飞机把人送到近地轨道。然后航天飞机退役，近地轨道也没法送上去了——连起来看，趋势是向着0倒退。这和人们对于“科技当然显然必然自动地向前进步”这样的信念相违背。
&#13;
Elon 认为，正好相反，科技在不付出巨大努力的情况下，是逐渐倒退的。
&#13;
从古埃及的后人忘记金字塔，到古罗马人忘记如何建造罗马水道。
&#13;
Elon 的火箭创业公司则非常成功，他们的目标是2024年重新实现载人登月。Blow 接下来给出了几个科技倒退的实例：
&#13;
第一个是 Lycurgus Cup，公元300年。从正面看它的反光是青色的，透光来看，则呈现为红色。原因是其银和金的颗粒体积非常小，小到50-70纳米，如此之小以至于物理放大镜看不见它们，想观测需要用电子显微镜。然后西罗马帝国覆灭，后人忘记了这个工艺。
&#13;
很多人认为这就是扯淡，当时的人并不知道其任何原理只是误打误撞做出了这些东西。Blow 则认为有如此观点的人显然没有用心亲手打磨过任何东西，否则他们一定会明白，达到这样水平的结果，是不可能通过偶然和运气的，对于工艺的掌握必然在不断迭代过程中达到了非常高的水平，它才有任何可能出现。比如这个图案中人的身体的肉红色，肯定是费劲千辛万苦不断改进实现出来的。这就是一种材料科学。然后 Blow 提到了拜占庭的喷火筒。拜占庭的战船上安装了这种金属喷管，喷出某种成分的“水扑不灭”的有机物燃烧导致的火焰，焚毁敌人船只。这是拜占庭帝国的国家机密，它在帝国灭亡之前就被遗忘，原因不明，具体实现方式已经不可考证。（顺便补充一句：东罗马帝国只是不再使用气压泵动式喷管，希腊火在1453年仍然存在。只不过变成了装在罐子里的燃烧瓶。）
&#13;
第三个例子是机械日历，一种安提凯希拉装置（Antikythera Mechanism），1901年于希腊安提凯特拉岛上的一艘古船残骸中被发现的随船沉没2100余年的钟形装置。这个机械日历的实际模型被复原为一段动画（自己看视频，语言无法描述），它的精密程度是高档机械手表的范畴。它的存在意味着背后多么复杂的一整套制造能力呢？
&#13;
这样的例子还有很多，就不说了，Blow 这时候放了地动仪的图片。要点是：在人类历史上，杰出的科技被完全遗忘，这件事经常发生。当代也一样。然后 Blow 给出的例子是 Bob Colwell，早期英特尔的首席芯片架构师，在计算机发展初期的时候接受采访的片段内容，背景是他们发现合作的零部件制造商TI（德州仪器公司）送来的产品不能稳定使用，质量残次。Bob 去找 TI 质询，本来以为对方会说“那是你们不知道怎么使用，我们的产品是好的”，实际对方的答复是：“是，我们知道，我看看你的清单。哦，我们还有更多你们不知道的（不好使的产品）。”实际情况是，TI 没有比任何其他竞争对手更差，摩托罗拉、Fairchild 也一样。这些硅制品让英特尔的芯片研发停滞不前，为何会如此？TI的人回答道：“第一代 TTL（逻辑门电路）是那帮胡子花白的老头子做的，他们知道其中的道理；现在的工程师都是毛头小子，学校毕业过来搞生产，他们不知道内部组装的改变，会导致感应峰（inductive spikes）。”这里的spike就是指每一个点的电压变化时，都会产生磁场，而磁场变化的相互干扰，没有被设计者纳入考虑，因为他们不理解。这就是科技退步的原因。代际之间的交流和传承需要巨大的努力，这过程中有损失。如果代际的传承失败，文明就灭亡。接下来 Blow 给出了历史中文明灭亡的实例，来自于 Eric Clive 的一个演讲，题目是《公元前1700年的文明灭亡》，具体来说是青铜器时代晚期，爱琴海，古埃及，塞浦路斯，迈锡尼，赫梯，古巴比伦等。这一圈围绕在美索不达米亚平原和地中海一带的文明曾经形成了一个非常复杂的贸易网络。在下图中，每个节点是一个文明，不是每一个都能和每一个贸易，但通过中间节点，所有贸易都达到非常优化的效率。
&#13;
这一点非常重要，因为青铜作为国防和生产的重要资料，非常难以制造。你需要用锡和铜一起生产。铜产地比较少，比如塞浦路斯岛。而锡则更难找，而且离铜产地非常远，比如阿富汗。而这些文明需要把它们运到一起以生产青铜。而这些文明的灭亡至今没有确切原因，有人说是自然环境恶化导致互相攻击，贸易变成战争。它们灭亡到什么程度呢，不仅是国家不存在了，城市也消失了，语言和文化也消失了。刻在石碑上的文字大多数至今我们不能翻译。Blow 的要点是：软件正在倒退，而人类空前依赖软件。尽管，这和我们置身其中的人的观感是相反的。波音飞机掉下来的主要原因就是软件问题（编者不能同意）。文明衰退的速度如果很慢，我们能意识到这个衰退么？这里 Blow 给出了他对于“软件明显在蓬勃发展”之直观感受的解释：软件正在享受硬件能力提升的红利，它只是“看上去”蓬勃发展而已。机器学习是最明显的例子。一方面，它在二十年前不能存在主要是因为硬件性能无法支持而已。另一方面，它只是人类依赖着的软件世界中极小极小的部分。属于软件的进步已经很长时间停滞。比如，我们使用软件给自己AI换脸成明星的样子，或者配上猪耳朵，这个有趣的部分，只占这个app极小极小的部分，而这个部分非常简单，另外的极大部分却极度复杂，包括把你的脸加载到屏幕上，以及处理你的点击，等等。出问题的是这些部分。人工智能的局部成就，没法和软件世界整体的退化的巨大惯性抗衡。最明显的迹象，就是“我们已经不指望软件能长期稳定工作了。”我们的标准一降再降，还能降到多低？降低到哪里会出大问题？接下来 Blow 疯狂吐槽了十分钟，关于电脑上一切软件都经常 bug，以至于用户对于一切软件“重启试试”成为不假思索的操作。包括 Emacs 的问题、Visual Studio 不能处理最最简单的指令，只能连续报错，微软 Word 的字符换行 bug 二十年后仍然没有消灭，像幽灵一样此起彼伏；于是他为了缓解自己的愤怒想打游戏，打开 Epic Store 和 Steam 又连续遇到 bug；于是他关掉游戏客户端去看 CS 直播，发现 CS 直播电竞比赛里全程有一个多余的名为“未定义”的 bug 玩家出现在地图里，直到比赛结束；然后他进入俄罗斯签证申请页面，被死活不能通过，且不能刷新的手机号验证脚本逼得只能刷新整个页面重新填写申请；然后他来到莫斯科住进酒店，他的房间的座机有5%的概率会空调开关触发响铃……等等。编者这里就不赘述了。这让90年代电脑销售的一个常见推销语“五个9”（指，本设备可以99.999%时间稳定运行）成为今日的讽刺。Blow的电脑连两个9都没有。对于这个问题，软件行业的普遍答案是：市场不会为更好的稳定性买单。Blow则认为：对于一个从未提供出足够稳健的产品的行业，为什么会有人会相信它『能』？接下来，Blow 从正面描述了软件的结构：抽象层次的序列。机器语言、汇编语言、Fortran/C/C++、C#/Haskell/Javascript……在这个序列里，绝大多数工程师在最高抽象层次进行工作，因为这是“聪明、省力、高效率的”。在这个抽象从低到高的序列里的某些位置，问题就出在这里。Blow 认为，全行业的高抽象层次工作，多数人的“高效率”的另一面，是失去（或者从未拥有过）能力。考虑 Facebook 作为一个软件的功能增加，和它要多雇佣的成千上万的工程师，二者相除得到的平均每人的价值创造是趋近于零的。这和“抽象层次越高效率越高”明显矛盾。
&#13;
Blow 给出的对比，是 UNIX 发明者 Ken Thompson 的一个演讲片段。他回忆道他趁老婆孩子出去度假，用了三个礼拜写了三个东西（编辑器、编译器、软硬件交互层或者叫操作系统），做出了 UNIX。现场爆发笑声和掌声——当今程序员可没有这种效率。而 Blow 认为这是个悲剧，它并不好笑。今天软件显没有在进步，它的鲁棒性和生产力都在衰退。Blow 从图形计算的角度给出了一些“最最基本的，你不能直接做的事情”，其中一个编者能听懂的例子是，把一个程序拷贝到另一个设备（安装是个复杂过程）——而这并不是因为 CPU，CPU 不能背锅因为今天各类设备的 CPU 一致性已经相当好。安装程序不是为了对接 CPU，而是为了解决操作系统层面不可思议之多的兼容问题，其绝大部分是我们不想打交道的。操作系统本来是给 CPU 赋予能力，但同时你也可以说它防止着 CPU 具备很多能力。在编程过程中，你绝大多数时间在处理那些，你很难理解、也不可能预料到的各种和你的设计思路没有关系的问题。更可怕的是，你不能直接编写一个独立程序进行编译和 linking。微软为了能让人这么做，专门设计了一个 vswhere 的软件。现在有一种叫做LSP的东西，开源的语言服务器协定。在Blow看来它基本上是一种更复杂、更费劲的编写和调用库的方式，而其满足的需求都是非常基本的操作，比如在你的编辑器里临时起意，查看一个变量的特征或者类型，LSP给你提供一个工具条，或者鼠标点击直接查询的功能。为了实现这个，你需要一个标准化服务跑在服务器上，好让你的编辑器和服务器用socket交互——为了使用方便，你把本地的、单一的编程工作置于分布式的系统之中。
&#13;
这样的做法推而广之，你依赖了越来越多的库，库又依赖了越来越多的库，关键是这些库/服务本身可能是在变化的、并且没有被中心化地存储和管理，这样一来我们就陷入了无穷无尽的debug的、重启服务的、互相同步的……我们自身所不能掌握的问题海洋之中。
&#13;
现在大家竟然在积极主动建设着这样一个东西。程序员们忙着把简单事情复杂化的同时……电脑游戏却变得连最基本的事情都很难实现了。比如游戏现在很难保持全屏, 经常跳出为窗口。再比如，辛辛苦苦做的游戏，很难稳定在一个帧数上跑，无论你多努力也不行。Allen（全称听不清楚）在GDC上介绍了他的一篇论文讲述了这个简单的能力我们现在无法具备的原因。复杂性的提高，加速了知识的丢失：
&#13;
1、知识总量更多，我们就让每个人知道的比例变得更小来应对。
&#13;
每个人对全局的把握一弱再弱，既难以传承知识，也难以做好自己的工作。
&#13;
2、『深知识』被『琐碎信息』替代。
&#13;
典型的深知识，如理解Cache Coherency（缓存一致性，指保留在高速缓存中的共享资源，保持数据一致性的机制），可以让人优化程序在多个处理器上跑得更快。典型的琐碎信息，如『这个Unity里的小图标不知道为啥不显示了，请教老师傅得知，是某个深藏不露的菜单里看似没有关联的一个开关关闭了导致的，打开就好了，过了一阵子它不知道为何又关闭了，总之，编译之前一定要记得检查那开关打开没有』。后者作为知识，往往几个月后随着Unity版本更新就完全作废，作为程序员要花很多脑力学习这种速朽的所谓知识，这件事情非常缺（offensive）。
&#13;
3、好信息被噪音淹没。
&#13;
症状是谷歌越来越难用，你的问题越复杂，网上搜来搜去看到的答案就越大概率是错的，或者只是浪费你的时间。Blow认为，显而易见的是，复杂性越高，我们承受灾难，或者体制性腐化（参考上文东罗马帝国），的能力就越差。而现在大家似乎相信，我们能承担的复杂性上限，是无限的。想象现在大公司里那种极少数能够透彻理解整个系统的工程师离退休之后后继无人、且很难把整套知识传递给年轻员工的情况，答案已经很明显了。这一切和游戏有什么关系呢？
&#13;
曾经的游戏，是关于如何榨干性能，将机器的潜力推至极限的。推至极限，要求我们透彻理解机器本身，这就自然导致我们倾向于做出非常鲁棒的程序。今天整个行业转向Unity和Unreal。自己写引擎的人越来越少。一整代程序员从学习到工作，一直在写支离破碎的C#片段，放在Unity的这里那里，从来没写过系统性的，或者底层的程序。这本身倒没什么，它缩短开发时间，提高个人效率，缩短游戏开发时间。但这意味着放弃，对其他能力的放弃，对整体性知识的放弃。Blow说，割裂性的分工没问题，但是如果所有人都这样分工，那么没有任何人会做这之外的事情了。Unity和Unreal又是怎么来的呢？它们生长于这样一个环境：所有的游戏公司都在自己写引擎，专门的引擎公司就从这些游戏公司里雇人过来，做出了如今的垄断性引擎。现在没有这样的环境，彻底没有那种人了的话，Unity去哪里雇人？首先的结果，是他们彻底断绝了新引擎作为竞争对手的涌现可能。然后，这几个大引擎怎么继续维护和发展，也成了问题，自身开始衰退，也是很有可能的。
&#13;
游戏开发者社群的情况很像阿西莫夫的《基地》：我们有一群人知道怎么用电脑编程、也有一群人精通嵌入式系统/高性能计算这些事。当很多程序败坏、丢失、难以维护的时候，我们这群人的知识可以重建它们——但我（Blow）真的不确定，我们是否有足够多的底层人才，以及对底层充分了解的高层人才，能做好系统底层的工作。也许，我们需要一个新的『基地』（foundation，也有基础的意思）。不好意思，剧透了。说回到青铜时代的文明失落，无数历史显示了一种现象：当只有精英阶层可以读和写的时候，很多能力无法普及，文明变得脆弱——普通人也主观上不想学习那些。今天的我们，几乎没有人能理解自己的程序跑着的时候，CPU里正在发生什么。这就是脆弱。如果青铜器时代那个程度的知识都会失落，那面对我们现在如此复杂的系统，我们怎么能相信它的存续和发展？各种各样的生存压力随时可能爆发，考验我们的软件世界。比如气候变迁。比如国际争端，比如一些国家切断国际互联网了，比如中国不给我们加工芯片了。别笑，现在有些国家的程序员连上stackoverflow复制粘贴代码都费劲。这些事情单独来看肯定都不至于伤害我们的文明，系统复杂到今天程度，抗折腾能力会很差。
&#13;
正如Elon Musk所言，技术会自然地退步。我们要警惕，要对抗，就一定要在每一个层级上简化：硬件、操作系统、库、应用层面的代码、网络、编译、debug、内容分发、人机交互。而这一切又完全可以如此简单，因为它们的现状如此荒谬！我们需要的只是『意愿』（will）和『品位』（taste）而已！大家都充分认识到复杂之荒谬，简单之美——简化可以让事情变得更好。退一万步讲，也许你认为软件不会让文明倒塌。没关系，咱们就只从自身利益出发——所有程序员都每天气呼呼的工作着，因为他们知道自己大量的时间精力用在没有意义的荒唐事上，而不是真正有趣的，创造性的事上。如果我们不改变做事的方式，未来的程序员工作会更加庸俗不堪，就跟没有SpaceX时候的美国航天事业一样。再退一步，假设你只是独立游戏开发者，你可能觉得，自己无力改变任何事情，只要忍几个月，把游戏做完就好了，毕竟重构、重写需要大量的时间——我想告诉你这种想法永远是错误的，因为我们永远低估了自己做游戏需要的时间，你以为的五个月，大概率实际是几年。糟糕的工作方式让你付出的代价，比你以为的，要大得多，长得多。也许那拖延的几年时间，就是拜复杂系统所赐。反过来，如果你积极应战，简化架构和代码，兴许很值得。听起来像是又基础又无聊的建议，但我要大胆断言——我们大多数人甚至都不太知道怎么做这件事了。最后Blow给大家提供了三个补充阅读/观看的资料，此处包括本演讲的视频和所有资料均不能提供链接，你可以去不存在的地方很容易搜索到：
&#13;
[*]Casey Muratori，『三千万行代码难题』。
&#13;
[*]Samo Burja，『文明：体制、知识与未来』。
&#13;
[*]Eric Cline，『公元前1177：文明倒塌时』。
&#13;
===================================================================================================================================================================================
&#13;
编者按：在2019年5月17号，莫斯科的 DevGAMM上，Jonathan Blow发表了一个题为『阻止文明倒塌』的长达一小时的奇怪演讲。我把这个演讲总结为下面这篇文字记录。善意提醒：不懂编程不代表你我不能阅读一篇和计算机有关的演讲，并有所思考，只能跟风刷刷梗；另外，对于Blow的观点，作为成年人我们应该可以有自己的反思。我个人对这个演讲的逻辑非常赞叹，但也认为他明显偏重了软件系统本身的问题，而对另一个甚至更根本的问题选择了视而不见。那就是当代效率提升过程中的真正瓶颈：人的协作。如果仔细观察软件，以及其他可以类比的当代文明复杂系统，大规模的人际协作中无法改进的沟通效率、责任分配、人性的不可管理，都让系统不可避免地显现为笨拙甚至荒谬的面貌。而抽象层级的提高，也绝不仅仅是软件的趋势而已，正如它所带来的问题也绝不仅是机器的问题。===================================================================================================================================================================================
&#13;
所以任何现在还坚持认为“兴都库什山脉里的神棍没有胜算，因为我们已经消灭了他们两百万人”的家伙都是傻逼，所有不怕教权派的人都喜欢重复“我们有多少飞机，多少坦克，多少军舰，他们只有多少”，生活在现代社会产生了“无限稳定”的错觉。就算是工业党里学过马哲的人也能够指出，现代文明本身的复杂性与其易碎性成正比，尤其是在全球的上层建筑与生产基础脱节时。上层建筑一旦崩溃，发达国家秒回19世纪甚至不如。教权派根本不在乎你有多少飞机坦克航母，他们只是等着现代文明的上层建筑自动崩溃，然后他们的人就可以接管整个世界了，一切自上而下的组织，在这个过程中会自动灭亡，无论看上去多强。自下而上的还能有点用。能和教权派对抗的摩门教这个时候就天下无敌了。</description>
      <content:encoded><![CDATA[<p><b>freeforever: </b><br>
<span>宏 发表于 2019-6-5 15:06</span><br>
<span>有个bug又怎样？bug根本就不是什么意外，统计学上讲除bug必然是效率递减的，甚至个人os有bug都不是什么大 ...</span><br>
<span>说的真对，交通事故不是意外，都不用统计学直接上网看新闻都能看到每天一大把，甚至你被车撞了都不是什么大事，你又不是国家主席</span><br>
</p><p><b>kabunsan: </b><br>
<span>说得好说得好。</span><br>
<span>—— 来自 Essential Products PH-1, Android 9上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>yksoft1: </b><br>
<span>bioCory 发表于 2019-6-5 14:02</span><br>
<span>上个世纪的c编译器编出来的程序，从一循环到一百和一百循环到一哪个快？</span><br>
<span>发自我的iPhone via Saralin 2. ...</span><br>
<span>这个要把生成的汇编代码拿出来分析。</span><br>
</p><p><b>qwased: </b><br>
<span>说白了就是几十个零件的马车肯定要比几万个零件的汽车可靠</span><br>
<span>—— 来自 Xiaomi MI 6, Android 8.0.0上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>fufusako: </b><br>
<span>真是篇好文章，不过现实也没有那么不堪，底层到中层运作还算是良好的，**让他们35岁去考公务员就好了嘛</span><br>
</p><p><b>宏: </b><br>
<span>freeforever 发表于 2019-6-5 15:14</span><br>
<span>说的真对，交通事故不是意外，都不用统计学直接上网看新闻都能看到每天一大把，甚至你被车撞了都不是什么 ...</span><br>
<span>你这么说其实真没错，不然为什么还有交通事故？事实就是增强安全性需要成本且牺牲效率，比如道路的全封闭，所以你在乡村道路上才看不见铝栅栏</span><br>
</p><p><b>zsq8722: </b><br>
<span>qwased 发表于 2019-6-5 15:19</span><br>
<span>说白了就是几十个零件的马车肯定要比几万个零件的汽车可靠</span><br>
<span>—— 来自 Xiaomi MI 6, Android 8.0.0 ...</span><br>
<span>马不可靠，上手推车吧。</span><br>
</p><p><b>天知道: </b><br>
<span>宏 发表于 2019-6-5 15:01</span><br>
<span>主旨就有问题，重点是能用而不是完美，你把基因看做代码的话人体简直就是一坨，反过来说安提凯希拉装置十 ...</span><br>
<span>从人的进化来看：人本身就是一种“凑和”着过的生物，整个身体结构充满了“啊，这里好像有点问题啊~~不管了，反正死不掉，先这样用着吧，以后的事以后再说吧”这样的事情。。。。。所以无论少数人怎么呐喊着“再也不能这样活，再也不能那样过，生活就得前思后想，想好了你再做”，大家还是只能看到眼前的路。。</span><br>
</p><p><b>sunmedia: </b><br>
<span>贪天之功....只要等就能等死不信教的这个逻辑我觉得也只有试图自圆其说的宗教能扯淡.</span><br>
</p><p><b>thisism: </b><br>
<span>屁的技术倒退。</span><br>
<span>技术失传是为啥？技术垄断，才能称之为财富。所以这些被拥有者垄断的技术，拥有者被毁的时候随之就死了。稀奇吗？重复发明轮子很可笑吗？所有技术封锁之后的事情，不全都是在重新发明轮子？</span><br>
<span>这个破理论想打破很简单，知识完全共享。然而这不可能，从马斯克先生开始就不可能。马斯克要感叹很简单，自己专利全球共享。他就有这个资格。</span><br>
</p><p><b>coolsyo: </b><br>
<span>马一龙的12000个卫星发射了几个？都没发射完就在吹登月了？</span><br>
</p><p><b>tokimon: </b><br>
<span>中世纪是人类最后的光明时代 ck2玩家确信</span><br>
</p><p><b>宏: </b><br>
<span>coolsyo 发表于 2019-6-5 15:35</span><br>
<span>马一龙的12000个卫星发射了几个？都没发射完就在吹登月了？</span><br>
<span>刚刚1箭60星入轨了</span><br>
</p><p><b>宏: </b><br>
<span>天知道 发表于 2019-6-5 15:29</span><br>
<span>从人的进化来看：人本身就是一种“凑和”着过的生物，整个身体结构充满了“啊，这里好像有点问题啊~~不管 ...</span><br>
<span>确实就是这样，草台宇宙</span><br>
</p><p><b>巨魔古拉格: </b><br>
<span>一个不对的想法，法老就是做到1800年被科西嘉吃人恶魔怼穿，那不就是个鞑清？金字塔不就是圆明园？</span><br>
<span>死文明才是好文明，活着的文明大家只会想把它摁死</span><br>
</p><p><b>tokimon: </b><br>
<span>比如游戏现在很难保持全屏, 经常跳出为窗口</span><br>
<span>CA出来挨打</span><br>
</p><p><b>半分宅: </b><br>
<span>没听说过要给制作公司发邮件才能收到装着游戏补丁的软盘的时代？</span><br>
</p><p><b>muderx: </b><br>
<span>tokimon 发表于 2019-6-5 15:42</span><br>
<span>比如游戏现在很难保持全屏, 经常跳出为窗口</span><br>
<span>CA出来挨打</span><br>
<span>很多游戏至今无法解决输入法的问题</span><br>
</p><p><b>tokimon: </b><br>
<span>muderx 发表于 2019-6-5 15:45</span><br>
<span> 很多游戏至今无法解决输入法的问题</span><br>
<span>中古游戏论外，凡是能通过mod补丁正常输入中文的我觉得都是厂商偷懒不想加</span><br>
</p><p><b>唐边叶介: </b><br>
<span> 本帖最后由 唐边叶介 于 2019-6-5 15:55 编辑 </span><br>
<span>一个典型的例子就是EDA工具，cadence和synopsis的代码之所以被称为“屎山”是有原因的。EDA的很多口耳相传的传统工匠式的trick，某个公司里的老头离职了或者去世了就永远没有了。</span><br>
</p><p><b>aiplus: </b><br>
<span>nptomhhiu 发表于 2019-6-5 13:45</span><br>
<span>抓着文章的一个词一句话来展开 真的挺无聊的</span><br>
<span>看完围着主旨讨论不好吗</span><br>
<span>你好，我们只能阅读140个字以内的文章，靴靴！</span><br>
</p><p><b>nowords2: </b><br>
<span>我想说的是。。</span><br>
<span>你们说的那些例子都是西方文明倒塌，什么石刻看不懂啦不能翻译啦。</span><br>
<span>我们东方没有遇到你这个倒塌问题，还请你们西方文明自己反思反思。</span><br>
</p><p><b>RioShiina: </b><br>
<span>那么， 银河百科全书编篡委员会什么时候成立呢 ：）</span><br>
</p><p><b>NPCNPC: </b><br>
<span>罗胖60秒：互联网企业有什么重大缺陷？</span><br>
<span>1. 最近我听一位朋友说到一个观点，说互联网企业和实体企业的区别，其实不是什么线上和线下的区别。现在实体企业也都把线上的互联网工具用得挺好的。</span><br>
<span>2. 真正的区别在于，实体企业不像互联网企业那样迎合用户的喜好。</span><br>
<span>所有实体企业，虽然嘴上也许说“顾客是上帝”，但是他们心里清楚得很，用户并不真正知道自己需要的是什么。所以，他们会高于用户的需求来满足用户。</span><br>
<span>3. 而且，每个企业都代表着某种理念，这种理念是不能随着用户的需求随意变的。</span><br>
<span>我举个简单的例子，一家好餐馆，其实远远比用户知道什么是真正的美食，绝不会用户想吃什么就给做什么。</span><br>
<span>4. 但是互联网企业不行。互联网企业在根子上，就是建立在对用户需求的即时反馈上的。这个特点成就了一些互联网企业，但是也让那些沉迷其中的互联网企业，最终走不了太远。</span><br>
</p><p><b>rough008: </b><br>
<span>这个人的理论会给人一种“过去什么都好”的感觉</span><br>
</p><p><b>peter723pan: </b><br>
<span>初代UNIX，和随便中毒的DOS差不多，不是现在的人废柴了，而是对于一个合格的操作系统，要求变高了。</span><br>
<span>那时代的操作系统和电脑都是专业人员用，不是设计给电脑白痴或文盲用的，不需要防着用户各种删系统文件的傻操作。</span><br>
<span>当年都是大型机，有保安守着的重要财产，从人员物理访问上限制使用，而不是软件权限。</span><br>
<span> 你现在写一个像初代UNIX的东西出来，那不叫能实用的操作系统， 只算个练手的例程。</span><br>
</p><p><b>nnn: </b><br>
<span>极小部分技术的失传是可能的，大部分技术没人会只是没有需求而已，资料库都在那有需求自然会有人搞。</span><br>
</p><p><b>清水茶毛吕: </b><br>
<span>这个作者是想说社会分工会导致文明变得脆弱吗那退回到游牧阶段最不脆弱了</span><br>
<span>-- 来自 有消息提醒的 Stage1官方 Android客户端</span><br>
</p><p><b>エマシ—ン: </b><br>
<span>写的挺好的</span><br>
</p><p><b>无聊者X: </b><br>
<span>一P放的震天响</span><br>
<span>旧的芯片和电路不好使是因为快到极限了，马上跨过原子时代的门槛，再好的电子逻辑都要变成老古董</span><br>
<span>新时代的诞生以新学科的诞生为标准，旧学科可能能在部分程度上达到甚至接近极限，但是新的技术的超越将是全面的，好比喷气式引擎全面替换活塞式一样</span><br>
<span>因为系统兼容性问题就发表末日论的家伙和吹社会构建的科学盲有什么区别</span><br>
<span>—— 来自 HUAWEI MHA-AL00, Android 9上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>q8f13: </b><br>
<span>讲的就是以前说的kiss原则，包括以前gui还没出施乐时候的很多设计思路。这些设计哲学如果能传承出来发扬光大真的不敢想象</span><br>
<span>然而在屁股和利益捆绑面前并没有卵用。人类永远都没有自己想的那么高尚</span><br>
<span>-- 来自 有消息提醒的 Stage1官方 Android客户端</span><br>
</p><p><b>xdescat01: </b><br>
<span>coolsyo 发表于 2019-6-5 15:35</span><br>
<span>马一龙的12000个卫星发射了几个？都没发射完就在吹登月了？</span><br>
<span>马一龙是吹上火星，月球因为吹的口气不大所以本来就看不上</span><br>
<span>现在的问题是虽然上火星吹的成分很大，月球倒是因为现在波音特别傻逼可能最后真的会用重型猎鹰登月</span><br>
</p><p><b>高本惠: </b><br>
<span>是时候发射一艘定期回访母星的自动教学飞船了</span><br>
</p><p><b>mimighost: </b><br>
<span>交给市场吧</span><br>
<span>你看各种服务器被hack，几千万几亿账户数据的泄漏，每年都不少，但是依然阻止不了大众把越来越多的信息搬到越来越复杂的系统里面，并且衍生出越来越复杂的功能，即使这些系统的细节已经远远不是一个人能够掌握得了的了。</span><br>
<span>说明啥，说明市场告诉软件公司，牺牲稳定性换取功能是它的选择</span><br>
<span>我觉得这个话题很有意思，控制复杂度是软件工程的终极命题。但是这个人提出的建议，把已有的抽象打破，重新梳理然后建立新的抽象，未必能解决根本的问题。有些时候我也会吐槽已有的代码丑的简直惨绝人寰，重写之后会觉得自己聪明到家了，结果时间一长，修修补补一多，回头一看，卧槽和原来那一坨也不过时半斤八两。</span><br>
<span>说到底，不如把软件看成是耗损品，积累的垃圾是复杂度，一旦复杂度不可接受，那么就换掉好了。不要把代码视作艺术品，而是快消一类的易损品，写出来不是流芳百世的，绝大部分是要丢进垃圾桶的。</span><br>
</p><p><b>mimighost: </b><br>
<span>宏 发表于 2019-6-5 15:06</span><br>
<span>有个bug又怎样？bug根本就不是什么意外，统计学上讲除bug必然是效率递减的，甚至个人os有bug都不是什么大 ...</span><br>
<span>cpu都有bug，更何况软件</span><br>
<span>说到底，所谓的没bug，不过是“在我的认知范围内，无法发现bug”。一旦出现新的观测手段，bug就又钻出来了。</span><br>
<span>unknowns of unknown</span><br>
<span>未知的未知</span><br>
<span>这才是最可怕的</span><br>
</p><p><b>qiandai: </b><br>
<span>想更进一步只能持续的努力和投入，不然就自然衰退了，很符合这个世界的自然规律..</span><br>
</p><p><b>xiongsuper: </b><br>
<span>吹哥又在吹B了</span><br>
<span>-- 来自 能看大图的 Stage1官方 iOS客户端</span><br>
</p><p><b>ackroyd2: </b><br>
<span>最后一段太弱智了</span><br>
<span>文章说的倒是有道理，复杂性只会无限堆叠然后坍塌，但是提出的方法也挺弱智的。本质就像资本主义经济危机，无限堆叠最后大家一起死，但你回退降低复杂性那现在就得死</span><br>
</p><p><b>夜明的月下: </b><br>
<span>ackroyd2 发表于 2019-6-5 18:28</span><br>
<span>最后一段太弱智了</span><br>
<span>文章说的倒是有道理，复杂性只会无限堆叠然后坍塌，但是提出的方法也挺弱智的。本质就像 ...</span><br>
<span>不如我们换个角度，是这届人类已经不行了。是时候研究更快更高更强的调整者了</span><br>
</p><p><b>满月美夜子: </b><br>
<span>文章写的挺有意思的</span><br>
</p><p><b>aliade: </b><br>
<span>程序员以为自己是现代教士阶层，掌握着现代社会的文字和知识</span><br>
<span>而实际上大多数程序员不过是现代手工艺人罢了，他们写出来的东西只能算现代手工艺品，手工艺品有缺陷/bug不是很正常的事嘛？</span><br>
<span>现代社会的互联网更像是一种文化现象，只不过这个文化现象太过伟大以至于大多数人将其认为是文明基石。真正的文明基石是发展出具备超强计算能力的设备，互联网是计算能力的体现</span><br>
<span>-- 来自 有消息提醒的 Stage1官方 iOS客户端</span><br>
</p><p><b>王怡人: </b><br>
<span>在一家行业内国内第一，世界第三的和共和国同龄的制造业龙头企业待过，事实上已经出现技术断层了，我们这代年轻员工没有能完全了解全系统原理过程的，而老人里也只剩一位还没退休，有没有掌握全系统原理过程根本就是降维打击，我们觉得是疑难杂症的，在老领导眼中根本不需要猜测，全部门包括30多岁的博士部长都经常像听天书一样听老领导教育</span><br>
</p><p><b>厨厨光波: </b><br>
<span>所以说编程搞到最后变成玄学我是信的</span><br>
<span>而且说实在的，掌握一点独家小技巧，就是不传出去，在公司里混混也蛮好的</span><br>
</p><p><b>zz_mps: </b><br>
<span> 本帖最后由 zz_mps 于 2019-6-5 19:14 编辑 </span><br>
<span>听起来像贩卖鸡汤的民科</span><br>
<span>喜欢吹自己的理论空前绝后</span><br>
<span>—— 来自 HUAWEI MHA-AL00, Android 8.0.0上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>宏: </b><br>
<span>王怡人 发表于 2019-6-5 18:38</span><br>
<span>在一家行业内国内第一，世界第三的和共和国同龄的制造业龙头企业待过，事实上已经出现技术断层了，我们这代 ...</span><br>
<span>没人学还是学不会？</span><br>
</p><p><b>王怡人: </b><br>
<span> 本帖最后由 王怡人 于 2019-6-5 19:25 编辑 </span><br>
<span>宏 发表于 2019-6-5 19:14</span><br>
<span>没人学还是学不会？</span><br>
<span>老领导一个人教不过来,本来是老带中, 中带青,师徒制传承, 这样一代教一代,至今内部依然是互称师傅和徒弟的,结果国企改制的时候中间那层几乎全走了,出现了大断层,技术也断层了,至今用的计算软件,还是用99年开发的,事实上现在企业内已经几乎没有人会全流程手工计算了,而老领导们当年都是全手工计算,如果不是在中层崩塌前开发出了计算软件,可能企业早就完蛋了</span><br>
</p><p><b>Lsky: </b><br>
<span>看前面还挺有意思的，但最后一段私货是什么鬼，楼主黑宗教黑魔怔了吧</span><br>
</p><p><b>JWJking: </b><br>
<span>那现在技术都是写在纸上的了并且永远有备份，还会出现文明坍塌吗？作者认为会，但我怎么都觉得不会，思路还没理清楚</span><br>
</p><p><b>bioCory: </b><br>
<span> Lsky 发表于 2019-6-5 19:23 看前面还挺有意思的，但最后一段私货是什么鬼，楼主黑宗教黑魔怔了吧 </span><br>
<span>前天是霍梅尼去世三十周年，你要是不信可以去看看五十年前伊朗啥样，当年阿拉伯世界遍地共运到今天这样也不过五十年</span><br>
<span>发自我的iPhone via Saralin 2.1.7</span><br>
</p><p><b>bioCory: </b><br>
<span> JWJking 发表于 2019-6-5 19:23 那现在技术都是写在纸上的了并且永远有备份，还会出现文明坍塌吗？作者认为会，但我怎么都觉得不会，思路还没理清楚 </span><br>
<span>去年阿里圣诞节，给你的东西可是开源的</span><br>
<span>发自我的iPhone via Saralin 2.1.7</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1837113[50-100]</guid>
    </item>
    <item>
      <title>【转】阻止文明倒塌[0-50]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1837113-1-1.html</link>
      <description>【转】阻止文明倒塌&#13;
来源：https://www.gcores.com/articles/110509
&#13;
乔纳森布洛，2019年5月在莫斯科
&#13;
演讲从1957年苏联发射 Sputnik 上天引发的美苏太空争霸谈起，回顾了首次卫星发射、首次宇航员上天，以及首次登月的过程。在1962年9月肯尼迪总统在一次国会演讲中宣称我们要在这个十年结束之前实现登月。结果1969年阿波罗11号实现了这个目标。Blow 的要点在于：人类（这里指美国）从一无所知，到实现登月只用了12年。然而从那时之后，人类的载人航天事业很大程度上停滞，甚至出现了倒退。这是不是很令人遗憾？
&#13;
Blow 播放了一段后来解密的阿波罗11号现场纪录片片段，那种震撼的感觉难以名状，只有看的人能了解其中直观的『退步感』。
&#13;
然后 Blow 播放了一段 Elon Musk 的 TED 访谈，其中 Elon 指出：我们一定要意识到：不同于可持续能源的未来是必然的，Spacefare civilization（多星球文明）绝对不是必然会发生的（它需要巨大的努力）。1969年人类可以登月，然后人类只能用航天飞机把人送到近地轨道。然后航天飞机退役，近地轨道也没法送上去了——连起来看，趋势是向着0倒退。这和人们对于“科技当然显然必然自动地向前进步”这样的信念相违背。
&#13;
Elon 认为，正好相反，科技在不付出巨大努力的情况下，是逐渐倒退的。
&#13;
从古埃及的后人忘记金字塔，到古罗马人忘记如何建造罗马水道。
&#13;
Elon 的火箭创业公司则非常成功，他们的目标是2024年重新实现载人登月。Blow 接下来给出了几个科技倒退的实例：
&#13;
第一个是 Lycurgus Cup，公元300年。从正面看它的反光是青色的，透光来看，则呈现为红色。原因是其银和金的颗粒体积非常小，小到50-70纳米，如此之小以至于物理放大镜看不见它们，想观测需要用电子显微镜。然后西罗马帝国覆灭，后人忘记了这个工艺。
&#13;
很多人认为这就是扯淡，当时的人并不知道其任何原理只是误打误撞做出了这些东西。Blow 则认为有如此观点的人显然没有用心亲手打磨过任何东西，否则他们一定会明白，达到这样水平的结果，是不可能通过偶然和运气的，对于工艺的掌握必然在不断迭代过程中达到了非常高的水平，它才有任何可能出现。比如这个图案中人的身体的肉红色，肯定是费劲千辛万苦不断改进实现出来的。这就是一种材料科学。然后 Blow 提到了拜占庭的喷火筒。拜占庭的战船上安装了这种金属喷管，喷出某种成分的“水扑不灭”的有机物燃烧导致的火焰，焚毁敌人船只。这是拜占庭帝国的国家机密，它在帝国灭亡之前就被遗忘，原因不明，具体实现方式已经不可考证。（顺便补充一句：东罗马帝国只是不再使用气压泵动式喷管，希腊火在1453年仍然存在。只不过变成了装在罐子里的燃烧瓶。）
&#13;
第三个例子是机械日历，一种安提凯希拉装置（Antikythera Mechanism），1901年于希腊安提凯特拉岛上的一艘古船残骸中被发现的随船沉没2100余年的钟形装置。这个机械日历的实际模型被复原为一段动画（自己看视频，语言无法描述），它的精密程度是高档机械手表的范畴。它的存在意味着背后多么复杂的一整套制造能力呢？
&#13;
这样的例子还有很多，就不说了，Blow 这时候放了地动仪的图片。要点是：在人类历史上，杰出的科技被完全遗忘，这件事经常发生。当代也一样。然后 Blow 给出的例子是 Bob Colwell，早期英特尔的首席芯片架构师，在计算机发展初期的时候接受采访的片段内容，背景是他们发现合作的零部件制造商TI（德州仪器公司）送来的产品不能稳定使用，质量残次。Bob 去找 TI 质询，本来以为对方会说“那是你们不知道怎么使用，我们的产品是好的”，实际对方的答复是：“是，我们知道，我看看你的清单。哦，我们还有更多你们不知道的（不好使的产品）。”实际情况是，TI 没有比任何其他竞争对手更差，摩托罗拉、Fairchild 也一样。这些硅制品让英特尔的芯片研发停滞不前，为何会如此？TI的人回答道：“第一代 TTL（逻辑门电路）是那帮胡子花白的老头子做的，他们知道其中的道理；现在的工程师都是毛头小子，学校毕业过来搞生产，他们不知道内部组装的改变，会导致感应峰（inductive spikes）。”这里的spike就是指每一个点的电压变化时，都会产生磁场，而磁场变化的相互干扰，没有被设计者纳入考虑，因为他们不理解。这就是科技退步的原因。代际之间的交流和传承需要巨大的努力，这过程中有损失。如果代际的传承失败，文明就灭亡。接下来 Blow 给出了历史中文明灭亡的实例，来自于 Eric Clive 的一个演讲，题目是《公元前1700年的文明灭亡》，具体来说是青铜器时代晚期，爱琴海，古埃及，塞浦路斯，迈锡尼，赫梯，古巴比伦等。这一圈围绕在美索不达米亚平原和地中海一带的文明曾经形成了一个非常复杂的贸易网络。在下图中，每个节点是一个文明，不是每一个都能和每一个贸易，但通过中间节点，所有贸易都达到非常优化的效率。
&#13;
这一点非常重要，因为青铜作为国防和生产的重要资料，非常难以制造。你需要用锡和铜一起生产。铜产地比较少，比如塞浦路斯岛。而锡则更难找，而且离铜产地非常远，比如阿富汗。而这些文明需要把它们运到一起以生产青铜。而这些文明的灭亡至今没有确切原因，有人说是自然环境恶化导致互相攻击，贸易变成战争。它们灭亡到什么程度呢，不仅是国家不存在了，城市也消失了，语言和文化也消失了。刻在石碑上的文字大多数至今我们不能翻译。Blow 的要点是：软件正在倒退，而人类空前依赖软件。尽管，这和我们置身其中的人的观感是相反的。波音飞机掉下来的主要原因就是软件问题（编者不能同意）。文明衰退的速度如果很慢，我们能意识到这个衰退么？这里 Blow 给出了他对于“软件明显在蓬勃发展”之直观感受的解释：软件正在享受硬件能力提升的红利，它只是“看上去”蓬勃发展而已。机器学习是最明显的例子。一方面，它在二十年前不能存在主要是因为硬件性能无法支持而已。另一方面，它只是人类依赖着的软件世界中极小极小的部分。属于软件的进步已经很长时间停滞。比如，我们使用软件给自己AI换脸成明星的样子，或者配上猪耳朵，这个有趣的部分，只占这个app极小极小的部分，而这个部分非常简单，另外的极大部分却极度复杂，包括把你的脸加载到屏幕上，以及处理你的点击，等等。出问题的是这些部分。人工智能的局部成就，没法和软件世界整体的退化的巨大惯性抗衡。最明显的迹象，就是“我们已经不指望软件能长期稳定工作了。”我们的标准一降再降，还能降到多低？降低到哪里会出大问题？接下来 Blow 疯狂吐槽了十分钟，关于电脑上一切软件都经常 bug，以至于用户对于一切软件“重启试试”成为不假思索的操作。包括 Emacs 的问题、Visual Studio 不能处理最最简单的指令，只能连续报错，微软 Word 的字符换行 bug 二十年后仍然没有消灭，像幽灵一样此起彼伏；于是他为了缓解自己的愤怒想打游戏，打开 Epic Store 和 Steam 又连续遇到 bug；于是他关掉游戏客户端去看 CS 直播，发现 CS 直播电竞比赛里全程有一个多余的名为“未定义”的 bug 玩家出现在地图里，直到比赛结束；然后他进入俄罗斯签证申请页面，被死活不能通过，且不能刷新的手机号验证脚本逼得只能刷新整个页面重新填写申请；然后他来到莫斯科住进酒店，他的房间的座机有5%的概率会空调开关触发响铃……等等。编者这里就不赘述了。这让90年代电脑销售的一个常见推销语“五个9”（指，本设备可以99.999%时间稳定运行）成为今日的讽刺。Blow的电脑连两个9都没有。对于这个问题，软件行业的普遍答案是：市场不会为更好的稳定性买单。Blow则认为：对于一个从未提供出足够稳健的产品的行业，为什么会有人会相信它『能』？接下来，Blow 从正面描述了软件的结构：抽象层次的序列。机器语言、汇编语言、Fortran/C/C++、C#/Haskell/Javascript……在这个序列里，绝大多数工程师在最高抽象层次进行工作，因为这是“聪明、省力、高效率的”。在这个抽象从低到高的序列里的某些位置，问题就出在这里。Blow 认为，全行业的高抽象层次工作，多数人的“高效率”的另一面，是失去（或者从未拥有过）能力。考虑 Facebook 作为一个软件的功能增加，和它要多雇佣的成千上万的工程师，二者相除得到的平均每人的价值创造是趋近于零的。这和“抽象层次越高效率越高”明显矛盾。
&#13;
Blow 给出的对比，是 UNIX 发明者 Ken Thompson 的一个演讲片段。他回忆道他趁老婆孩子出去度假，用了三个礼拜写了三个东西（编辑器、编译器、软硬件交互层或者叫操作系统），做出了 UNIX。现场爆发笑声和掌声——当今程序员可没有这种效率。而 Blow 认为这是个悲剧，它并不好笑。今天软件显没有在进步，它的鲁棒性和生产力都在衰退。Blow 从图形计算的角度给出了一些“最最基本的，你不能直接做的事情”，其中一个编者能听懂的例子是，把一个程序拷贝到另一个设备（安装是个复杂过程）——而这并不是因为 CPU，CPU 不能背锅因为今天各类设备的 CPU 一致性已经相当好。安装程序不是为了对接 CPU，而是为了解决操作系统层面不可思议之多的兼容问题，其绝大部分是我们不想打交道的。操作系统本来是给 CPU 赋予能力，但同时你也可以说它防止着 CPU 具备很多能力。在编程过程中，你绝大多数时间在处理那些，你很难理解、也不可能预料到的各种和你的设计思路没有关系的问题。更可怕的是，你不能直接编写一个独立程序进行编译和 linking。微软为了能让人这么做，专门设计了一个 vswhere 的软件。现在有一种叫做LSP的东西，开源的语言服务器协定。在Blow看来它基本上是一种更复杂、更费劲的编写和调用库的方式，而其满足的需求都是非常基本的操作，比如在你的编辑器里临时起意，查看一个变量的特征或者类型，LSP给你提供一个工具条，或者鼠标点击直接查询的功能。为了实现这个，你需要一个标准化服务跑在服务器上，好让你的编辑器和服务器用socket交互——为了使用方便，你把本地的、单一的编程工作置于分布式的系统之中。
&#13;
这样的做法推而广之，你依赖了越来越多的库，库又依赖了越来越多的库，关键是这些库/服务本身可能是在变化的、并且没有被中心化地存储和管理，这样一来我们就陷入了无穷无尽的debug的、重启服务的、互相同步的……我们自身所不能掌握的问题海洋之中。
&#13;
现在大家竟然在积极主动建设着这样一个东西。程序员们忙着把简单事情复杂化的同时……电脑游戏却变得连最基本的事情都很难实现了。比如游戏现在很难保持全屏, 经常跳出为窗口。再比如，辛辛苦苦做的游戏，很难稳定在一个帧数上跑，无论你多努力也不行。Allen（全称听不清楚）在GDC上介绍了他的一篇论文讲述了这个简单的能力我们现在无法具备的原因。复杂性的提高，加速了知识的丢失：
&#13;
1、知识总量更多，我们就让每个人知道的比例变得更小来应对。
&#13;
每个人对全局的把握一弱再弱，既难以传承知识，也难以做好自己的工作。
&#13;
2、『深知识』被『琐碎信息』替代。
&#13;
典型的深知识，如理解Cache Coherency（缓存一致性，指保留在高速缓存中的共享资源，保持数据一致性的机制），可以让人优化程序在多个处理器上跑得更快。典型的琐碎信息，如『这个Unity里的小图标不知道为啥不显示了，请教老师傅得知，是某个深藏不露的菜单里看似没有关联的一个开关关闭了导致的，打开就好了，过了一阵子它不知道为何又关闭了，总之，编译之前一定要记得检查那开关打开没有』。后者作为知识，往往几个月后随着Unity版本更新就完全作废，作为程序员要花很多脑力学习这种速朽的所谓知识，这件事情非常缺（offensive）。
&#13;
3、好信息被噪音淹没。
&#13;
症状是谷歌越来越难用，你的问题越复杂，网上搜来搜去看到的答案就越大概率是错的，或者只是浪费你的时间。Blow认为，显而易见的是，复杂性越高，我们承受灾难，或者体制性腐化（参考上文东罗马帝国），的能力就越差。而现在大家似乎相信，我们能承担的复杂性上限，是无限的。想象现在大公司里那种极少数能够透彻理解整个系统的工程师离退休之后后继无人、且很难把整套知识传递给年轻员工的情况，答案已经很明显了。这一切和游戏有什么关系呢？
&#13;
曾经的游戏，是关于如何榨干性能，将机器的潜力推至极限的。推至极限，要求我们透彻理解机器本身，这就自然导致我们倾向于做出非常鲁棒的程序。今天整个行业转向Unity和Unreal。自己写引擎的人越来越少。一整代程序员从学习到工作，一直在写支离破碎的C#片段，放在Unity的这里那里，从来没写过系统性的，或者底层的程序。这本身倒没什么，它缩短开发时间，提高个人效率，缩短游戏开发时间。但这意味着放弃，对其他能力的放弃，对整体性知识的放弃。Blow说，割裂性的分工没问题，但是如果所有人都这样分工，那么没有任何人会做这之外的事情了。Unity和Unreal又是怎么来的呢？它们生长于这样一个环境：所有的游戏公司都在自己写引擎，专门的引擎公司就从这些游戏公司里雇人过来，做出了如今的垄断性引擎。现在没有这样的环境，彻底没有那种人了的话，Unity去哪里雇人？首先的结果，是他们彻底断绝了新引擎作为竞争对手的涌现可能。然后，这几个大引擎怎么继续维护和发展，也成了问题，自身开始衰退，也是很有可能的。
&#13;
游戏开发者社群的情况很像阿西莫夫的《基地》：我们有一群人知道怎么用电脑编程、也有一群人精通嵌入式系统/高性能计算这些事。当很多程序败坏、丢失、难以维护的时候，我们这群人的知识可以重建它们——但我（Blow）真的不确定，我们是否有足够多的底层人才，以及对底层充分了解的高层人才，能做好系统底层的工作。也许，我们需要一个新的『基地』（foundation，也有基础的意思）。不好意思，剧透了。说回到青铜时代的文明失落，无数历史显示了一种现象：当只有精英阶层可以读和写的时候，很多能力无法普及，文明变得脆弱——普通人也主观上不想学习那些。今天的我们，几乎没有人能理解自己的程序跑着的时候，CPU里正在发生什么。这就是脆弱。如果青铜器时代那个程度的知识都会失落，那面对我们现在如此复杂的系统，我们怎么能相信它的存续和发展？各种各样的生存压力随时可能爆发，考验我们的软件世界。比如气候变迁。比如国际争端，比如一些国家切断国际互联网了，比如中国不给我们加工芯片了。别笑，现在有些国家的程序员连上stackoverflow复制粘贴代码都费劲。这些事情单独来看肯定都不至于伤害我们的文明，系统复杂到今天程度，抗折腾能力会很差。
&#13;
正如Elon Musk所言，技术会自然地退步。我们要警惕，要对抗，就一定要在每一个层级上简化：硬件、操作系统、库、应用层面的代码、网络、编译、debug、内容分发、人机交互。而这一切又完全可以如此简单，因为它们的现状如此荒谬！我们需要的只是『意愿』（will）和『品位』（taste）而已！大家都充分认识到复杂之荒谬，简单之美——简化可以让事情变得更好。退一万步讲，也许你认为软件不会让文明倒塌。没关系，咱们就只从自身利益出发——所有程序员都每天气呼呼的工作着，因为他们知道自己大量的时间精力用在没有意义的荒唐事上，而不是真正有趣的，创造性的事上。如果我们不改变做事的方式，未来的程序员工作会更加庸俗不堪，就跟没有SpaceX时候的美国航天事业一样。再退一步，假设你只是独立游戏开发者，你可能觉得，自己无力改变任何事情，只要忍几个月，把游戏做完就好了，毕竟重构、重写需要大量的时间——我想告诉你这种想法永远是错误的，因为我们永远低估了自己做游戏需要的时间，你以为的五个月，大概率实际是几年。糟糕的工作方式让你付出的代价，比你以为的，要大得多，长得多。也许那拖延的几年时间，就是拜复杂系统所赐。反过来，如果你积极应战，简化架构和代码，兴许很值得。听起来像是又基础又无聊的建议，但我要大胆断言——我们大多数人甚至都不太知道怎么做这件事了。最后Blow给大家提供了三个补充阅读/观看的资料，此处包括本演讲的视频和所有资料均不能提供链接，你可以去不存在的地方很容易搜索到：
&#13;
[*]Casey Muratori，『三千万行代码难题』。
&#13;
[*]Samo Burja，『文明：体制、知识与未来』。
&#13;
[*]Eric Cline，『公元前1177：文明倒塌时』。
&#13;
===================================================================================================================================================================================
&#13;
编者按：在2019年5月17号，莫斯科的 DevGAMM上，Jonathan Blow发表了一个题为『阻止文明倒塌』的长达一小时的奇怪演讲。我把这个演讲总结为下面这篇文字记录。善意提醒：不懂编程不代表你我不能阅读一篇和计算机有关的演讲，并有所思考，只能跟风刷刷梗；另外，对于Blow的观点，作为成年人我们应该可以有自己的反思。我个人对这个演讲的逻辑非常赞叹，但也认为他明显偏重了软件系统本身的问题，而对另一个甚至更根本的问题选择了视而不见。那就是当代效率提升过程中的真正瓶颈：人的协作。如果仔细观察软件，以及其他可以类比的当代文明复杂系统，大规模的人际协作中无法改进的沟通效率、责任分配、人性的不可管理，都让系统不可避免地显现为笨拙甚至荒谬的面貌。而抽象层级的提高，也绝不仅仅是软件的趋势而已，正如它所带来的问题也绝不仅是机器的问题。===================================================================================================================================================================================
&#13;
所以任何现在还坚持认为“兴都库什山脉里的神棍没有胜算，因为我们已经消灭了他们两百万人”的家伙都是傻逼，所有不怕教权派的人都喜欢重复“我们有多少飞机，多少坦克，多少军舰，他们只有多少”，生活在现代社会产生了“无限稳定”的错觉。就算是工业党里学过马哲的人也能够指出，现代文明本身的复杂性与其易碎性成正比，尤其是在全球的上层建筑与生产基础脱节时。上层建筑一旦崩溃，发达国家秒回19世纪甚至不如。教权派根本不在乎你有多少飞机坦克航母，他们只是等着现代文明的上层建筑自动崩溃，然后他们的人就可以接管整个世界了，一切自上而下的组织，在这个过程中会自动灭亡，无论看上去多强。自下而上的还能有点用。能和教权派对抗的摩门教这个时候就天下无敌了。</description>
      <content:encoded><![CDATA[<p><b>bioCory: </b><br>
<span>【转】阻止文明倒塌</span><br>
<span>来源：https://www.gcores.com/articles/110509</span><br>
<span>乔纳森布洛，2019年5月在莫斯科</span><br>
<span>演讲从1957年苏联发射 Sputnik 上天引发的美苏太空争霸谈起，回顾了首次卫星发射、首次宇航员上天，以及首次登月的过程。在1962年9月肯尼迪总统在一次国会演讲中宣称我们要在这个十年结束之前实现登月。结果1969年阿波罗11号实现了这个目标。Blow 的要点在于：人类（这里指美国）从一无所知，到实现登月只用了12年。然而从那时之后，人类的载人航天事业很大程度上停滞，甚至出现了倒退。这是不是很令人遗憾？</span><br>
<span>Blow 播放了一段后来解密的阿波罗11号现场纪录片片段，那种震撼的感觉难以名状，只有看的人能了解其中直观的『退步感』。</span><br>
<span>然后 Blow 播放了一段 Elon Musk 的 TED 访谈，其中 Elon 指出：我们一定要意识到：不同于可持续能源的未来是必然的，Spacefare civilization（多星球文明）绝对不是必然会发生的（它需要巨大的努力）。1969年人类可以登月，然后人类只能用航天飞机把人送到近地轨道。然后航天飞机退役，近地轨道也没法送上去了——连起来看，趋势是向着0倒退。这和人们对于“科技当然显然必然自动地向前进步”这样的信念相违背。</span><br>
<span>Elon 认为，正好相反，科技在不付出巨大努力的情况下，是逐渐倒退的。</span><br>
<span>从古埃及的后人忘记金字塔，到古罗马人忘记如何建造罗马水道。</span><br>
<span>Elon 的火箭创业公司则非常成功，他们的目标是2024年重新实现载人登月。Blow 接下来给出了几个科技倒退的实例：</span><br>
<span>第一个是 Lycurgus Cup，公元300年。从正面看它的反光是青色的，透光来看，则呈现为红色。原因是其银和金的颗粒体积非常小，小到50-70纳米，如此之小以至于物理放大镜看不见它们，想观测需要用电子显微镜。然后西罗马帝国覆灭，后人忘记了这个工艺。</span><br>
<span>很多人认为这就是扯淡，当时的人并不知道其任何原理只是误打误撞做出了这些东西。Blow 则认为有如此观点的人显然没有用心亲手打磨过任何东西，否则他们一定会明白，达到这样水平的结果，是不可能通过偶然和运气的，对于工艺的掌握必然在不断迭代过程中达到了非常高的水平，它才有任何可能出现。比如这个图案中人的身体的肉红色，肯定是费劲千辛万苦不断改进实现出来的。这就是一种材料科学。然后 Blow 提到了拜占庭的喷火筒。拜占庭的战船上安装了这种金属喷管，喷出某种成分的“水扑不灭”的有机物燃烧导致的火焰，焚毁敌人船只。这是拜占庭帝国的国家机密，它在帝国灭亡之前就被遗忘，原因不明，具体实现方式已经不可考证。（顺便补充一句：东罗马帝国只是不再使用气压泵动式喷管，希腊火在1453年仍然存在。只不过变成了装在罐子里的燃烧瓶。）</span><br>
<span>第三个例子是机械日历，一种安提凯希拉装置（Antikythera Mechanism），1901年于希腊安提凯特拉岛上的一艘古船残骸中被发现的随船沉没2100余年的钟形装置。这个机械日历的实际模型被复原为一段动画（自己看视频，语言无法描述），它的精密程度是高档机械手表的范畴。它的存在意味着背后多么复杂的一整套制造能力呢？</span><br>
<span>这样的例子还有很多，就不说了，Blow 这时候放了地动仪的图片。要点是：在人类历史上，杰出的科技被完全遗忘，这件事经常发生。当代也一样。然后 Blow 给出的例子是 Bob Colwell，早期英特尔的首席芯片架构师，在计算机发展初期的时候接受采访的片段内容，背景是他们发现合作的零部件制造商TI（德州仪器公司）送来的产品不能稳定使用，质量残次。Bob 去找 TI 质询，本来以为对方会说“那是你们不知道怎么使用，我们的产品是好的”，实际对方的答复是：“是，我们知道，我看看你的清单。哦，我们还有更多你们不知道的（不好使的产品）。”实际情况是，TI 没有比任何其他竞争对手更差，摩托罗拉、Fairchild 也一样。这些硅制品让英特尔的芯片研发停滞不前，为何会如此？TI的人回答道：“第一代 TTL（逻辑门电路）是那帮胡子花白的老头子做的，他们知道其中的道理；现在的工程师都是毛头小子，学校毕业过来搞生产，他们不知道内部组装的改变，会导致感应峰（inductive spikes）。”这里的spike就是指每一个点的电压变化时，都会产生磁场，而磁场变化的相互干扰，没有被设计者纳入考虑，因为他们不理解。这就是科技退步的原因。代际之间的交流和传承需要巨大的努力，这过程中有损失。如果代际的传承失败，文明就灭亡。接下来 Blow 给出了历史中文明灭亡的实例，来自于 Eric Clive 的一个演讲，题目是《公元前1700年的文明灭亡》，具体来说是青铜器时代晚期，爱琴海，古埃及，塞浦路斯，迈锡尼，赫梯，古巴比伦等。这一圈围绕在美索不达米亚平原和地中海一带的文明曾经形成了一个非常复杂的贸易网络。在下图中，每个节点是一个文明，不是每一个都能和每一个贸易，但通过中间节点，所有贸易都达到非常优化的效率。</span><br>
<span>这一点非常重要，因为青铜作为国防和生产的重要资料，非常难以制造。你需要用锡和铜一起生产。铜产地比较少，比如塞浦路斯岛。而锡则更难找，而且离铜产地非常远，比如阿富汗。而这些文明需要把它们运到一起以生产青铜。而这些文明的灭亡至今没有确切原因，有人说是自然环境恶化导致互相攻击，贸易变成战争。它们灭亡到什么程度呢，不仅是国家不存在了，城市也消失了，语言和文化也消失了。刻在石碑上的文字大多数至今我们不能翻译。Blow 的要点是：软件正在倒退，而人类空前依赖软件。尽管，这和我们置身其中的人的观感是相反的。波音飞机掉下来的主要原因就是软件问题（编者不能同意）。文明衰退的速度如果很慢，我们能意识到这个衰退么？这里 Blow 给出了他对于“软件明显在蓬勃发展”之直观感受的解释：软件正在享受硬件能力提升的红利，它只是“看上去”蓬勃发展而已。机器学习是最明显的例子。一方面，它在二十年前不能存在主要是因为硬件性能无法支持而已。另一方面，它只是人类依赖着的软件世界中极小极小的部分。属于软件的进步已经很长时间停滞。比如，我们使用软件给自己AI换脸成明星的样子，或者配上猪耳朵，这个有趣的部分，只占这个app极小极小的部分，而这个部分非常简单，另外的极大部分却极度复杂，包括把你的脸加载到屏幕上，以及处理你的点击，等等。出问题的是这些部分。人工智能的局部成就，没法和软件世界整体的退化的巨大惯性抗衡。最明显的迹象，就是“我们已经不指望软件能长期稳定工作了。”我们的标准一降再降，还能降到多低？降低到哪里会出大问题？接下来 Blow 疯狂吐槽了十分钟，关于电脑上一切软件都经常 bug，以至于用户对于一切软件“重启试试”成为不假思索的操作。包括 Emacs 的问题、Visual Studio 不能处理最最简单的指令，只能连续报错，微软 Word 的字符换行 bug 二十年后仍然没有消灭，像幽灵一样此起彼伏；于是他为了缓解自己的愤怒想打游戏，打开 Epic Store 和 Steam 又连续遇到 bug；于是他关掉游戏客户端去看 CS 直播，发现 CS 直播电竞比赛里全程有一个多余的名为“未定义”的 bug 玩家出现在地图里，直到比赛结束；然后他进入俄罗斯签证申请页面，被死活不能通过，且不能刷新的手机号验证脚本逼得只能刷新整个页面重新填写申请；然后他来到莫斯科住进酒店，他的房间的座机有5%的概率会空调开关触发响铃……等等。编者这里就不赘述了。这让90年代电脑销售的一个常见推销语“五个9”（指，本设备可以99.999%时间稳定运行）成为今日的讽刺。Blow的电脑连两个9都没有。对于这个问题，软件行业的普遍答案是：市场不会为更好的稳定性买单。Blow则认为：对于一个从未提供出足够稳健的产品的行业，为什么会有人会相信它『能』？接下来，Blow 从正面描述了软件的结构：抽象层次的序列。机器语言、汇编语言、Fortran/C/C++、C#/Haskell/Javascript……在这个序列里，绝大多数工程师在最高抽象层次进行工作，因为这是“聪明、省力、高效率的”。在这个抽象从低到高的序列里的某些位置，问题就出在这里。Blow 认为，全行业的高抽象层次工作，多数人的“高效率”的另一面，是失去（或者从未拥有过）能力。考虑 Facebook 作为一个软件的功能增加，和它要多雇佣的成千上万的工程师，二者相除得到的平均每人的价值创造是趋近于零的。这和“抽象层次越高效率越高”明显矛盾。</span><br>
<span>Blow 给出的对比，是 UNIX 发明者 Ken Thompson 的一个演讲片段。他回忆道他趁老婆孩子出去度假，用了三个礼拜写了三个东西（编辑器、编译器、软硬件交互层或者叫操作系统），做出了 UNIX。现场爆发笑声和掌声——当今程序员可没有这种效率。而 Blow 认为这是个悲剧，它并不好笑。今天软件显没有在进步，它的鲁棒性和生产力都在衰退。Blow 从图形计算的角度给出了一些“最最基本的，你不能直接做的事情”，其中一个编者能听懂的例子是，把一个程序拷贝到另一个设备（安装是个复杂过程）——而这并不是因为 CPU，CPU 不能背锅因为今天各类设备的 CPU 一致性已经相当好。安装程序不是为了对接 CPU，而是为了解决操作系统层面不可思议之多的兼容问题，其绝大部分是我们不想打交道的。操作系统本来是给 CPU 赋予能力，但同时你也可以说它防止着 CPU 具备很多能力。在编程过程中，你绝大多数时间在处理那些，你很难理解、也不可能预料到的各种和你的设计思路没有关系的问题。更可怕的是，你不能直接编写一个独立程序进行编译和 linking。微软为了能让人这么做，专门设计了一个 vswhere 的软件。现在有一种叫做LSP的东西，开源的语言服务器协定。在Blow看来它基本上是一种更复杂、更费劲的编写和调用库的方式，而其满足的需求都是非常基本的操作，比如在你的编辑器里临时起意，查看一个变量的特征或者类型，LSP给你提供一个工具条，或者鼠标点击直接查询的功能。为了实现这个，你需要一个标准化服务跑在服务器上，好让你的编辑器和服务器用socket交互——为了使用方便，你把本地的、单一的编程工作置于分布式的系统之中。</span><br>
<span>这样的做法推而广之，你依赖了越来越多的库，库又依赖了越来越多的库，关键是这些库/服务本身可能是在变化的、并且没有被中心化地存储和管理，这样一来我们就陷入了无穷无尽的debug的、重启服务的、互相同步的……我们自身所不能掌握的问题海洋之中。</span><br>
<span>现在大家竟然在积极主动建设着这样一个东西。程序员们忙着把简单事情复杂化的同时……电脑游戏却变得连最基本的事情都很难实现了。比如游戏现在很难保持全屏, 经常跳出为窗口。再比如，辛辛苦苦做的游戏，很难稳定在一个帧数上跑，无论你多努力也不行。Allen（全称听不清楚）在GDC上介绍了他的一篇论文讲述了这个简单的能力我们现在无法具备的原因。复杂性的提高，加速了知识的丢失：</span><br>
<span>1、知识总量更多，我们就让每个人知道的比例变得更小来应对。</span><br>
<span>每个人对全局的把握一弱再弱，既难以传承知识，也难以做好自己的工作。</span><br>
<span>2、『深知识』被『琐碎信息』替代。</span><br>
<span>典型的深知识，如理解Cache Coherency（缓存一致性，指保留在高速缓存中的共享资源，保持数据一致性的机制），可以让人优化程序在多个处理器上跑得更快。典型的琐碎信息，如『这个Unity里的小图标不知道为啥不显示了，请教老师傅得知，是某个深藏不露的菜单里看似没有关联的一个开关关闭了导致的，打开就好了，过了一阵子它不知道为何又关闭了，总之，编译之前一定要记得检查那开关打开没有』。后者作为知识，往往几个月后随着Unity版本更新就完全作废，作为程序员要花很多脑力学习这种速朽的所谓知识，这件事情非常缺（offensive）。</span><br>
<span>3、好信息被噪音淹没。</span><br>
<span>症状是谷歌越来越难用，你的问题越复杂，网上搜来搜去看到的答案就越大概率是错的，或者只是浪费你的时间。Blow认为，显而易见的是，复杂性越高，我们承受灾难，或者体制性腐化（参考上文东罗马帝国），的能力就越差。而现在大家似乎相信，我们能承担的复杂性上限，是无限的。想象现在大公司里那种极少数能够透彻理解整个系统的工程师离退休之后后继无人、且很难把整套知识传递给年轻员工的情况，答案已经很明显了。这一切和游戏有什么关系呢？</span><br>
<span>曾经的游戏，是关于如何榨干性能，将机器的潜力推至极限的。推至极限，要求我们透彻理解机器本身，这就自然导致我们倾向于做出非常鲁棒的程序。今天整个行业转向Unity和Unreal。自己写引擎的人越来越少。一整代程序员从学习到工作，一直在写支离破碎的C#片段，放在Unity的这里那里，从来没写过系统性的，或者底层的程序。这本身倒没什么，它缩短开发时间，提高个人效率，缩短游戏开发时间。但这意味着放弃，对其他能力的放弃，对整体性知识的放弃。Blow说，割裂性的分工没问题，但是如果所有人都这样分工，那么没有任何人会做这之外的事情了。Unity和Unreal又是怎么来的呢？它们生长于这样一个环境：所有的游戏公司都在自己写引擎，专门的引擎公司就从这些游戏公司里雇人过来，做出了如今的垄断性引擎。现在没有这样的环境，彻底没有那种人了的话，Unity去哪里雇人？首先的结果，是他们彻底断绝了新引擎作为竞争对手的涌现可能。然后，这几个大引擎怎么继续维护和发展，也成了问题，自身开始衰退，也是很有可能的。</span><br>
<span>游戏开发者社群的情况很像阿西莫夫的《基地》：我们有一群人知道怎么用电脑编程、也有一群人精通嵌入式系统/高性能计算这些事。当很多程序败坏、丢失、难以维护的时候，我们这群人的知识可以重建它们——但我（Blow）真的不确定，我们是否有足够多的底层人才，以及对底层充分了解的高层人才，能做好系统底层的工作。也许，我们需要一个新的『基地』（foundation，也有基础的意思）。不好意思，剧透了。说回到青铜时代的文明失落，无数历史显示了一种现象：当只有精英阶层可以读和写的时候，很多能力无法普及，文明变得脆弱——普通人也主观上不想学习那些。今天的我们，几乎没有人能理解自己的程序跑着的时候，CPU里正在发生什么。这就是脆弱。如果青铜器时代那个程度的知识都会失落，那面对我们现在如此复杂的系统，我们怎么能相信它的存续和发展？各种各样的生存压力随时可能爆发，考验我们的软件世界。比如气候变迁。比如国际争端，比如一些国家切断国际互联网了，比如中国不给我们加工芯片了。别笑，现在有些国家的程序员连上stackoverflow复制粘贴代码都费劲。这些事情单独来看肯定都不至于伤害我们的文明，系统复杂到今天程度，抗折腾能力会很差。</span><br>
<span>正如Elon Musk所言，技术会自然地退步。我们要警惕，要对抗，就一定要在每一个层级上简化：硬件、操作系统、库、应用层面的代码、网络、编译、debug、内容分发、人机交互。而这一切又完全可以如此简单，因为它们的现状如此荒谬！我们需要的只是『意愿』（will）和『品位』（taste）而已！大家都充分认识到复杂之荒谬，简单之美——简化可以让事情变得更好。退一万步讲，也许你认为软件不会让文明倒塌。没关系，咱们就只从自身利益出发——所有程序员都每天气呼呼的工作着，因为他们知道自己大量的时间精力用在没有意义的荒唐事上，而不是真正有趣的，创造性的事上。如果我们不改变做事的方式，未来的程序员工作会更加庸俗不堪，就跟没有SpaceX时候的美国航天事业一样。再退一步，假设你只是独立游戏开发者，你可能觉得，自己无力改变任何事情，只要忍几个月，把游戏做完就好了，毕竟重构、重写需要大量的时间——我想告诉你这种想法永远是错误的，因为我们永远低估了自己做游戏需要的时间，你以为的五个月，大概率实际是几年。糟糕的工作方式让你付出的代价，比你以为的，要大得多，长得多。也许那拖延的几年时间，就是拜复杂系统所赐。反过来，如果你积极应战，简化架构和代码，兴许很值得。听起来像是又基础又无聊的建议，但我要大胆断言——我们大多数人甚至都不太知道怎么做这件事了。最后Blow给大家提供了三个补充阅读/观看的资料，此处包括本演讲的视频和所有资料均不能提供链接，你可以去不存在的地方很容易搜索到：</span><br>
<span>[*]Casey Muratori，『三千万行代码难题』。</span><br>
<span>[*]Samo Burja，『文明：体制、知识与未来』。</span><br>
<span>[*]Eric Cline，『公元前1177：文明倒塌时』。</span><br>
<span>===================================================================================================================================================================================</span><br>
<span>编者按：在2019年5月17号，莫斯科的 DevGAMM上，Jonathan Blow发表了一个题为『阻止文明倒塌』的长达一小时的奇怪演讲。我把这个演讲总结为下面这篇文字记录。善意提醒：不懂编程不代表你我不能阅读一篇和计算机有关的演讲，并有所思考，只能跟风刷刷梗；另外，对于Blow的观点，作为成年人我们应该可以有自己的反思。我个人对这个演讲的逻辑非常赞叹，但也认为他明显偏重了软件系统本身的问题，而对另一个甚至更根本的问题选择了视而不见。那就是当代效率提升过程中的真正瓶颈：人的协作。如果仔细观察软件，以及其他可以类比的当代文明复杂系统，大规模的人际协作中无法改进的沟通效率、责任分配、人性的不可管理，都让系统不可避免地显现为笨拙甚至荒谬的面貌。而抽象层级的提高，也绝不仅仅是软件的趋势而已，正如它所带来的问题也绝不仅是机器的问题。===================================================================================================================================================================================</span><br>
<span>所以任何现在还坚持认为“兴都库什山脉里的神棍没有胜算，因为我们已经消灭了他们两百万人”的家伙都是傻逼，所有不怕教权派的人都喜欢重复“我们有多少飞机，多少坦克，多少军舰，他们只有多少”，生活在现代社会产生了“无限稳定”的错觉。就算是工业党里学过马哲的人也能够指出，现代文明本身的复杂性与其易碎性成正比，尤其是在全球的上层建筑与生产基础脱节时。上层建筑一旦崩溃，发达国家秒回19世纪甚至不如。教权派根本不在乎你有多少飞机坦克航母，他们只是等着现代文明的上层建筑自动崩溃，然后他们的人就可以接管整个世界了，一切自上而下的组织，在这个过程中会自动灭亡，无论看上去多强。自下而上的还能有点用。能和教权派对抗的摩门教这个时候就天下无敌了。</span><br>
</p><p><b>nice女武神: </b><br>
<span>安提凯特拉机不是有个大叔旨在用当年的技术工具复原嘛</span><br>
</p><p><b>manafox: </b><br>
<span>最后一段话听起来像是蟑螂只要等人类自动灭亡就行了</span><br>
</p><p><b>lemon鱿鱼: </b><br>
<span>没有银弹</span><br>
</p><p><b>沉默之声: </b><br>
<span>软件行业在衰退不能同意更多，移动互联网时代真的突破了下限，web没死的话可能好点，可惜web死了</span><br>
</p><p><b>thisism: </b><br>
<span>又是Elon 。</span><br>
<span>Elon 认为特斯拉不需要融资</span><br>
<span>然后特斯拉宣布融资。Elon连自己需要啥都不知道，就别吹逼了</span><br>
</p><p><b>bioCory: </b><br>
<span>thisism 发表于 2019-6-5 13:23</span><br>
<span>又是Elon 。</span><br>
<span>Elon 认为特斯拉不需要融资</span><br>
<span>泥潭有人已经连长文本阅读能力都失去了，技术断代还不容易？</span><br>
</p><p><b>废狗: </b><br>
<span>就算全世界倒回骑阿拉伯马拿大马士革刀在沙漠里对砍的年代，教权派也遮不了天呀</span><br>
</p><p><b>暗之精灵: </b><br>
<span>看来必须马上让AI接管世界，否则就留给绿教了</span><br>
</p><p><b>vandechine: </b><br>
<span>科技派跳来跳去都跳不出科耶夫的手掌心，这一切都只不过是科耶夫50年前预言的兑现。</span><br>
</p><p><b>εRemastered: </b><br>
<span>你知道有个词叫贩卖焦虑吧</span><br>
</p><p><b>vandechine: </b><br>
<span>求助于科研来对抗西方历史的终结不过饮鸩止渴，科学本身正是历史终结的最大动力。</span><br>
</p><p><b>雷之: </b><br>
<span>明明是自己要求低了硬要客户也一起习惯</span><br>
</p><p><b>yxydd88: </b><br>
<span>退一万步讲，也许你认为软件不会让文明倒塌。没关系，咱们就只从自身利益出发——所有程序员都每天气呼呼的工作着，因为他们知道自己大量的时间精力用在没有意义的荒唐事上，而不是真正有趣的，创造性的事上。如果我们不改变做事的方式，未来的程序员工作会更加庸俗不堪，就跟没有SpaceX时候的美国航天事业一样。</span><br>
<span>前几句还好，最后一句就变成马跃亭的广告了</span><br>
</p><p><b>pyd68tc: </b><br>
<span>为了说明软件举文明的进程感觉并有什么关联性</span><br>
<span>况且软件这个结论也颇有争议</span><br>
</p><p><b>bioCory: </b><br>
<span>εRemastered 发表于 2019-6-5 13:28</span><br>
<span>你知道有个词叫贩卖焦虑吧</span><br>
<span>劝你买房了还是劝你生小孩了？</span><br>
</p><p><b>雷之: </b><br>
<span>bioCory 发表于 2019-6-5 13:33</span><br>
<span>劝你买房了还是劝你生小孩了？</span><br>
<span>游戏不会优化而是会骗我换硬件了</span><br>
</p><p><b>乌鸦的皇冠: </b><br>
<span>https://m.bilibili.com/video/av8927129.html?share_medium=android&share_source=qq&bbid=DF2F38C3-951D-4AAD-8F46-509EA872118033138infoc&ts=1559713008509</span><br>
<span>—— 来自 Xiaomi Redmi 4, Android 6.0.1上的 S1Next-鹅版 v2.1.2</span><br>
</p><p><b>stardestroyer: </b><br>
<span> 本帖最后由 stardestroyer 于 2019-6-5 13:39 编辑 </span><br>
<span>行吧，你把飞控叫软件，对，大家都是程序员可能某些程序员对世界的认知也就这样了</span><br>
</p><p><b>wxshaonv2000: </b><br>
<span>人文学科成天喊乙烷耀烷的也就算了 怎么码农届也开始耀烷了</span><br>
</p><p><b>洗刷刷: </b><br>
<span>前两天就因为一个解压操作花了大半天时间。明明就是调个库的事情，.net又是头部编码对不上，官方实例还有问题。最蛋疼的是就像本文说的这种琐碎孤僻的问题想搜都很难搜到。就不应该让互联网基石技术和需要盈利的公司绑定，兼容问题带来的麻烦太多了</span><br>
</p><p><b>εRemastered: </b><br>
<span>bioCory 发表于 2019-6-5 13:33</span><br>
<span>劝你买房了还是劝你生小孩了？</span><br>
<span>一切让你觉得“马斯克好NB”的行为都是在给他自己打广告你懂不懂</span><br>
</p><p><b>scourge411: </b><br>
<span>我决定去学汇编。。。</span><br>
</p><p><b>哈里.谢顿: </b><br>
<span>-- 来自 能搜索的 Stage1官方 iOS客户端</span><br>
</p><p><b>nptomhhiu: </b><br>
<span>抓着文章的一个词一句话来展开 真的挺无聊的</span><br>
<span>看完围着主旨讨论不好吗</span><br>
</p><p><b>felline: </b><br>
<span>这个人要打广告也是给Braid或者The Witness打广告吧</span><br>
</p><p><b>古代人皮克: </b><br>
<span>smjb</span><br>
<span>手工艺人得天才灵机一动和现代科学成体系得批发生产高级技术人员是一码事吗</span><br>
</p><p><b>街角的蔷薇: </b><br>
<span>在“神文”面前瑟瑟发抖。</span><br>
</p><p><b>myarance: </b><br>
<span>nptomhhiu 发表于 2019-6-5 13:45</span><br>
<span>抓着文章的一个词一句话来展开 真的挺无聊的</span><br>
<span>看完围着主旨讨论不好吗</span><br>
<span>阅读理解的技术断代了，现在的人最多能看140个词</span><br>
</p><p><b>apefrank: </b><br>
<span>码农终于认识到万一哪天电脑坏了凭自己是修不好的</span><br>
</p><p><b>沉默之声: </b><br>
<span>突然想到，站在守护人类文明的立场上，百度营销主管该不该被判刑？</span><br>
</p><p><b>Lzzyf: </b><br>
<span>为了有一天能去太空我闭着眼睛同意主文观点</span><br>
</p><p><b>nylonchina1: </b><br>
<span>但是精密的控制算法可以实现加工精度的飞跃，n轴水刀，三弟打印这种东西就是基于软件</span><br>
</p><p><b>bioCory: </b><br>
<span> 古代人皮克 发表于 2019-6-5 13:51 smjb 手工艺人得天才灵机一动和现代科学成体系得批发生产高级技术人员是一码事吗 </span><br>
<span>上个世纪的c编译器编出来的程序，从一循环到一百和一百循环到一哪个快？</span><br>
<span>发自我的iPhone via Saralin 2.1.7</span><br>
</p><p><b>伊可费斯: </b><br>
<span>这么说以后都改成师徒制吧，要学技术先过去干3年杂活磨性子。</span><br>
</p><p><b>天知道: </b><br>
<span>洗刷刷 发表于 2019-6-5 13:38</span><br>
<span>前两天就因为一个解压操作花了大半天时间。明明就是调个库的事情，.net又是头部编码对不上，官方实例还有问 ...</span><br>
<span>那是不是说明现在已经到了需要一个软件的“布尔巴基学派”来把软件的基础重新捋顺一次？</span><br>
</p><p><b>jam0207: </b><br>
<span>类似的还有秦代的镀铬剑?</span><br>
</p><p><b>Vneet: </b><br>
<span>所谓的技术的失传嘛，不论古今，辉煌一时的技术面临断代失传了是挺常见的。</span><br>
</p><p><b>freeforever: </b><br>
<span>文章提出的某些问题是对的不代表文章的所有观点是对的，更何况对错这种东西很多时候会随着立场变化，就像贸易战谁是对的这个问题一样毫无意义。</span><br>
<span>不过要说现在的软件退化那是绝对TMD没错，现在的硬件效能比过去高的倍数简直令人发指，不管是CPU，GPU还是各种记忆体的时钟和带宽都是一个非常玄幻的数字了，然而软件呢？游戏各种恶性BUG就不说了，各种行业用的工具软件的功能进步有硬件这样玄幻吗？就我了解的自动桌子和嗷逗比功能没多少进化就算了，MD连硬件效率都不如以前高。不管是游戏还是工具软件很多超过8-16个线程就用不上了甚至现在还有纯靠单线的，用硬件对比就好像最强CPU只能支持8G内存10T硬盘PCIE 1.0 4X一样弱智。还有现在的弱智操作系统，多少人自动升级之后蓝屏回滚我就不说了，就我个人体验的WIN10的蓝屏次数已经超越当年的WIN95了简直可笑。至于移动平台连说的价值都没有，有应用做的像个人做的都能吹上天了</span><br>
</p><p><b>文化消费猪: </b><br>
<span>？？？前几楼到底有没有看懂？？？</span><br>
<span>抓住几个字就开始杠，甚至不能算有效的讨论，没有有意义的观点和论证就闭嘴好吗？看着让人生气</span><br>
</p><p><b>otjuly: </b><br>
<span>油管上复原Antikythera的那个又好久没更新了</span><br>
</p><p><b>薄皮破船: </b><br>
<span>这一点非常重要，因为青铜作为国防和生产的重要资料，非常难以制造。你需要用锡和铜一起生产。铜产地比较少，比如塞浦路斯岛。而锡则更难找，而且离铜产地非常远，比如阿富汗。而这些文明需要把它们运到一起以生产青铜。</span><br>
<span>而这些文明的灭亡至今没有确切原因，有人说是自然环境恶化导致互相攻击，贸易变成战争。它们灭亡到什么程度呢，不仅是国家不存在了，城市也消失了，语言和文化也消失了。刻在石碑上的文字大多数至今我们不能翻译。</span><br>
<span>有说法这些文明的灭亡，是因为铁器的出现，不再需要那么广泛的贸易网络了</span><br>
</p><p><b>薄皮破船: </b><br>
<span>废狗 发表于 2019-6-5 13:27</span><br>
<span>就算全世界倒回骑阿拉伯马拿大马士革刀在沙漠里对砍的年代，教权派也遮不了天呀 ...</span><br>
<span>倒不如说哈里发的时代，阿拉伯的舞娘和美酒，啧啧啧·····</span><br>
</p><p><b>mu1: </b><br>
<span>主旨都错了的文全篇就无价值了。失传的都是属于没什么流传也没什么真提高生产力价值的“技术”</span><br>
</p><p><b>宏: </b><br>
<span>nptomhhiu 发表于 2019-6-5 13:45</span><br>
<span>抓着文章的一个词一句话来展开 真的挺无聊的</span><br>
<span>看完围着主旨讨论不好吗</span><br>
<span>主旨就有问题，重点是能用而不是完美，你把基因看做代码的话人体简直就是一坨，反过来说安提凯希拉装置十分精妙但在那个年代没什么卵用</span><br>
<span>奥尔德林有一句话十分有深意：</span><br>
<span>You promised me Mars Colonies. Instead, I got Facebook.</span><br>
<span>演讲者似乎不明白什么叫历史螺旋上升。</span><br>
</p><p><b>quinaeus: </b><br>
<span>bioCory 发表于 2019-6-5 14:02</span><br>
<span>上个世纪的c编译器编出来的程序，从一循环到一百和一百循环到一哪个快？</span><br>
<span>发自我的iPhone via Saralin 2. ...</span><br>
<span>前者快吧，因为加法比减法快，减法要取对应数的二进制补码，慢一丢丢</span><br>
</p><p><b>quinaeus: </b><br>
<span>mu1 发表于 2019-6-5 14:58</span><br>
<span>主旨都错了的文全篇就无价值了。失传的都是属于没什么流传也没什么真提高生产力价值的“技术” ...</span><br>
<span>所以作者的观点是即使能真提高生产力价值的“技术“，比如unity或者unreal，也许以后也没人能改良了</span><br>
</p><p><b>宏: </b><br>
<span>freeforever 发表于 2019-6-5 14:19</span><br>
<span>文章提出的某些问题是对的不代表文章的所有观点是对的，更何况对错这种东西很多时候会随着立场变化，就像贸 ...</span><br>
<span>有个bug又怎样？bug根本就不是什么意外，统计学上讲除bug必然是效率递减的，甚至个人os有bug都不是什么大事，你用的又不是火星探测器。</span><br>
</p><p><b>宏: </b><br>
<span>quinaeus 发表于 2019-6-5 15:05</span><br>
<span>所以作者的观点是即使能真提高生产力价值的“技术“，比如unity或者unreal，也许以后也没人能改良了 ...</span><br>
<span>不改良的唯一原因是改良没有经济意义，就像有几个人还会去改良苹果牛顿pda上的程序</span><br>
</p><p><b>nice女武神: </b><br>
<span>otjuly 发表于 2019-6-5 14:44</span><br>
<span>油管上复原Antikythera的那个又好久没更新了</span><br>
<span>慢工出细活你看到一个齿轮他用了2分钟锉成实际他花了多久他起码把工具 平台都搭起来了 剩下的只有时间堆了</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1837113[0-50]</guid>
    </item>
  </channel>
</rss>
