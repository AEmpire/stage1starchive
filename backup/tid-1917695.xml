<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>unity及其他免费PC游戏制作引擎或工具帖</title>
    <link>https://bbs.saraba1st.com/2b/</link>
    <description>unity及其他免费PC游戏制作引擎或工具帖</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 09 Jul 2020 15:41:52 +0000</lastBuildDate>
    <item>
      <title>unity及其他免费PC游戏制作引擎或工具帖[150-200]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1917695-1-1.html</link>
      <description>unity及其他免费PC游戏制作引擎或工具帖&#13;
 本帖最后由 mes 于 2020-3-8 00:08 编辑 

首先我觉得没这个需要，要是有人完全不懂的情况下搜到了也许有那么点帮助，反正随便搜只搜到4年前的帖，不知道大家游戏做出来没。
&#13;
https://bbs.saraba1st.com/2b/thread-1351885-1-1.html
&#13;
然后就是比较“多功能”的之中我只用过unity，也并没做出过完整的什么东西，要是问我我多数不懂，可能搜一下能不能解决，也不会顶，随便占几楼编辑下吧。
&#13;
unity基础
&#13;
[*]Q：如何编程？
&#13;
A：复制粘贴，想要速成吗？那就搜你想要的内容复制粘贴，但本人完全不支持拆别人工程之类的行为，请用网上免费教程之类的码。
&#13;
[*]Q：可不可以不编程……
&#13;
A：也许看类型，但个人不觉得对这一层完全不碰能做到多好，听说国产有个不用编程的引擎，也许试试那个。
&#13;
[*]unity中比较一般的做法是，把控制角色，敌人，可收集（如金币）都作为一个个的物体放入场景，然后在这些物体中挂脚本来控制移动、收集完消失之类，但是！据说这样的效率不好，大概用ECS会好点，反正我也还不懂。
&#13;
[*]那些物体上的脚本一般可以看成有一开始只运行一遍的部分，和之后一直在每帧更新的部分，而物理的更新和每帧更新又是不同的，这个就看码大概就知道怎么分开，总之记住有这么回事就好。</description>
      <content:encoded><![CDATA[<p><b>凉宫绿豆沙: </b><br>
<span>我好像明白了，楼主类似那种喜欢玩游戏机但不玩游戏的人，折腾党。</span><br>
</p><p><b>mes: </b><br>
<span>Q：UNITY和GODOT怎么把默认的UI按钮做成能同时用鼠标和按键操作？</span><br>
<span>A：我知道，自己来答。UNITY的只是查到了，中文总之初查没查到，有兴趣的请看日文，反正应该不难理解。</span><br>
<span>yumineko.com/unity-ugui-gamepad/</span><br>
<span>GODOT自己试出来了，其实本来就已经有UI UP之类的按键设定，就是说应该默认就可以，但是如果什么也不加，必须鼠标点过一下才能用按键，那就没意义，其实和unity那也算类似，一开始要有一个被选择的，才能用上下左右来更改选择。</span><br>
<img src="https://i.niupic.com/images/2020/03/21/74nE.jpg" title="https://i.niupic.com/images/2020/03/21/74nE.jpg"><br>
<span>reddit.com/r/godot/comments/6q4q29/godot_gui_controlled_with_keyboard_gamepad/</span><br>
<span>知道这个就可以写成一开始就选中第一项，也可以写成按第一次上下左右时选中第一项。</span><br>
<span>只是它们的按钮都不好看，也许真搞游戏时会干脆换掉，或者用但比这麻烦点。</span><br>
<span>为什么会想到这个问题是因为玩过全程键盘，但开头必须点鼠标进入游戏的游戏。我觉得不一定要做游戏，只要有觉得这个部分不能这样吗？自己能不能做得到？这样的兴趣就够了，就算自己用不上，也许会有谁会用来拼出自己的游戏。</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1917695[150-200]</guid>
    </item>
    <item>
      <title>unity及其他免费PC游戏制作引擎或工具帖[100-150]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1917695-1-1.html</link>
      <description>unity及其他免费PC游戏制作引擎或工具帖&#13;
 本帖最后由 mes 于 2020-3-8 00:08 编辑 

首先我觉得没这个需要，要是有人完全不懂的情况下搜到了也许有那么点帮助，反正随便搜只搜到4年前的帖，不知道大家游戏做出来没。
&#13;
https://bbs.saraba1st.com/2b/thread-1351885-1-1.html
&#13;
然后就是比较“多功能”的之中我只用过unity，也并没做出过完整的什么东西，要是问我我多数不懂，可能搜一下能不能解决，也不会顶，随便占几楼编辑下吧。
&#13;
unity基础
&#13;
[*]Q：如何编程？
&#13;
A：复制粘贴，想要速成吗？那就搜你想要的内容复制粘贴，但本人完全不支持拆别人工程之类的行为，请用网上免费教程之类的码。
&#13;
[*]Q：可不可以不编程……
&#13;
A：也许看类型，但个人不觉得对这一层完全不碰能做到多好，听说国产有个不用编程的引擎，也许试试那个。
&#13;
[*]unity中比较一般的做法是，把控制角色，敌人，可收集（如金币）都作为一个个的物体放入场景，然后在这些物体中挂脚本来控制移动、收集完消失之类，但是！据说这样的效率不好，大概用ECS会好点，反正我也还不懂。
&#13;
[*]那些物体上的脚本一般可以看成有一开始只运行一遍的部分，和之后一直在每帧更新的部分，而物理的更新和每帧更新又是不同的，这个就看码大概就知道怎么分开，总之记住有这么回事就好。</description>
      <content:encoded><![CDATA[<p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-11 16:45 编辑 </span><br>
<span>zerofree0000 发表于 2020-3-11 15:20</span><br>
<span>想用unity的话，本坛有不少职业开发者的。</span><br>
<span>我也可以回答绝大多数问题除了光照shader这些视觉效果的东西， ...</span><br>
<span>问题的话倒是有很多，看看各位职业开发者的看法。</span><br>
<span>1 如果是2d平台，抛弃物理系统，那地图的图块以什么形式显示在游戏里，图块位置又以什么形式作为数据储存和读取？</span><br>
<span>2 如果是3d但是只有地面和墙，俯视可以当成2d的，有没有抛弃物理系统来做和地图的碰撞检测的方法？</span><br>
<span>3 镜子，如果不打算做出能反射出世界那种，那做成怎样的比较好看？</span><br>
<span>4 前面提到2d渲染顺序需要详细的说明。</span><br>
<span>5 就是上面的问题，各个特效具体怎么实现，有的我看范围甚至不是完全圆的，应该不是粒子。</span><br>
<span>要是怎么才算具体，当然最好按每步的步骤说明，要是没有，至少得有这种程度，知道是Material.SetTextureOffset的话，至少能搜出资料。</span><br>
<img src="https://i.niupic.com/images/2020/03/10/700a.jpg" title="https://i.niupic.com/images/2020/03/10/700a.jpg"><br>
</p><p><b>zerofree0000: </b><br>
<span> 本帖最后由 zerofree0000 于 2020-3-11 17:05 编辑 </span><br>
<span>mes 发表于 2020-3-11 16:06</span><br>
<span>问题的话倒是有很多，看看各位职业开发者的看法。</span><br>
<span>1 如果是2d平台，抛弃物理系统，那地图的图块以什么形 ...</span><br>
<span>1 都是网格。只不过2d的是最简单的两个三角形的网格组成方块。unity里所有看得见的东西实际都是网格上贴图。存储方式看你导入数据的方式，3d一般用3dmax之类制作了模型导出为fbx被unity直接利用。2d直接把图片放在工程里，拖到场景里unity会自动帮你生成一个sprite，内部实现还是网格和贴图。但是实际用的时候你不用太在意这个，拖上去就能用。</span><br>
<span>2 碰撞检测其实不是物理的一部分，但是物理引擎依赖于需要碰撞检测。碰撞检测本身你自己用坐标判断也是可以的，圆最简单判断圆心距离于两个半径和即可，其次矩形。更复杂的形状也能自己实现，不过unity帮你用collider实现何苦自己去弄，使用这些为你做好的功能就是用引擎的意义。</span><br>
<span>3 我不太理解你说的好看是什么。镜子本来就是个挺麻烦而且比较耗费性能的东西。建议一开始不要去管。等你懂了顶点贴图uv之后就明白了。</span><br>
<span>4 不存在2d渲染和3d渲染的区别。都是网格实现的。</span><br>
<span>5 请使用一个粒子效果编辑器试试。粒子系统可以做出很多很多东西，刀光剑气龙卷风。粒子本身还是网格和贴图，只不过是针对大量存在进行了特定优化的。</span><br>
<span>你需要关于网格和贴图的基础知识，请google关键字：顶点、uv、法线、着色器、渲染管道。</span><br>
</p><p><b>mes: </b><br>
<span>zerofree0000 发表于 2020-3-11 16:51</span><br>
<span>1 都是网格。只不过2d的是最简单的两个三角形的网格组成方块。unity里所有看得见的东西实际都是网格上贴图 ...</span><br>
<span>问题是“怎么做”</span><br>
<span>1 那要画出地图的同时，自动得出一个位置数据，这些还要能在unity里直接用，当然还有怎么用。</span><br>
<span>2 其实类似上面的，我也知道有这些形状，但画在3d上的地图怎么让它自动生成位置数据。</span><br>
<span>下略</span><br>
<span>其实问题是如果只有你一个人，这些条件要你从头做到尾，那怎么做？</span><br>
</p><p><b>zerofree0000: </b><br>
<span> 本帖最后由 zerofree0000 于 2020-3-11 17:40 编辑 </span><br>
<span>mes 发表于 2020-3-11 17:25</span><br>
<span>问题是“怎么做”</span><br>
<span>1 那要画出地图的同时，自动得出一个位置数据，这些还要能在unity里直接用，当然还有怎 ...</span><br>
<span>3d的东西是用3d工具制作网格顶点，然后导出fbx，在unity里使用。</span><br>
<span>2d就是各种图片在里面进行坐标移动。一般的地图编辑器本质是提供了更简单的编辑手段，记录下来的数据都是某某图片显示在某某坐标，运行的时候根据这些数据还原。和你自己手动把图片拉到场景上调整没有区别。</span><br>
<span>什么自动生成位置数据——我怀疑你是否安装unity之后自己动手操作过一次。在unity，你把素材拖到场景上，就自动生成了一个game object，它具有基本的坐标、旋转等各种参数。</span><br>
<span>只有我一个人，那就先弄到素材。图片，模型……然后放到引擎里，拽到场景上。</span><br>
<span>之后是想办法接受用户输入让它们动起来。这开始时程序部分，程序的本质是，根据用户输入来修改你拖拽到场景里的各个物体的参数——包括但不限于坐标，缩放，旋转，色彩，文字等。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-11 17:49 编辑 </span><br>
<span>好吧，等真正的独立游戏开发者……</span><br>
<span>另外做游戏可不易，你可以对unity这么说，看它理不理你。</span><br>
<span>看了还是先转型搞比较简单的视觉效果吧，毕竟稍微有点兴趣。</span><br>
</p><p><b>Lunamos: </b><br>
<span>mes 发表于 2020-3-11 18:45</span><br>
<span>好吧，等真正的独立游戏开发者……</span><br>
<span>另外做游戏可不易，你可以对unity这么说，看它理不理你。</span><br>
<span>说真的看你那么多帖子，感觉差不多得了。如果不想开发游戏就别把生命浪费在游戏引擎上。如果就是想做视觉的东西就去好好看看图形学和shader的书或者学3D美术，一开始别总想着零敲碎打走捷径，到处寻章摘句，知道个名词不求甚解又有何用。尤其人到中年切忌自以为是，不要当民科，只能让你误入歧途，事倍功半。</span><br>
</p><p><b>洗刷刷: </b><br>
<span>zerofree0000 发表于 2020-3-11 17:37</span><br>
<span>3d的东西是用3d工具制作网格顶点，然后导出fbx，在unity里使用。</span><br>
<span>2d就是各种图片在里面进行坐标移动。一般 ...</span><br>
<span>我劝你别和他白费口舌。这位楼主空有热情却缺乏讨论问题最起码的知识。他的问题明明只要做过unity的官方教程平面跳跃demo就能回答一大部分。</span><br>
</p><p><b>mes: </b><br>
<span>Lunamos 发表于 2020-3-11 18:04</span><br>
<span>说真的看你那么多帖子，感觉差不多得了。如果不想开发游戏就别把生命浪费在游戏引擎上。如果就是想做视觉 ...</span><br>
<span>如果会shader，游戏也该能做出来了，当然工作量还在那里。</span><br>
<span>至少我知道自己在做啥，其实是不是“职业”这点我不会深究，只是觉得有可能，在中国，你在游戏开发公司甚至不用打开软件，每天开个会，说一顿一天就过去了，不过我只知道最近没见过什么国产我感兴趣的游戏。好了真的不顶了，真有需要的人自己会搜到。</span><br>
</p><p><b>zerofree0000: </b><br>
<span>mes 发表于 2020-3-11 18:13</span><br>
<span>如果会shader，游戏也该能做出来了，当然工作量还在那里。</span><br>
<span>至少我知道自己在做啥，其实是不是“职业”这 ...</span><br>
<span>会shader并不能做出游戏。但是不会shader做出完整游戏的难度远小于不会编程。</span><br>
<span>中国的游戏开发公司也不会每天开个会说一顿。游戏企业是官僚风气最少的一批了，毕竟用户是庞大群体，不靠拉关系全凭产品竞争力，搞好了就能有钱。你太想当然了。我也看不起做手游这些人，但不会扭曲事实。</span><br>
<span>我一边工作一边自己也在做独立游戏。我不是美术，但是做一个demo并不需要自己会，人物头像可以用ai生成的，模型可以用asset store上免费的或者收费的（也不贵），甚至放个立方体就行，如果这足够体现游戏的玩法。粒子、音效都可以买到或者弄到免费的泛用素材。</span><br>
<span>这些都不是障碍。</span><br>
<span>唯一的障碍只有，不知道作什么。我也曾废掉过三个企划案，所以阻碍我发布作品的障碍是做什么样的游戏而不是怎么做游戏。</span><br>
<span>思而不学则殆。</span><br>
</p><p><b>mes: </b><br>
<span>zerofree0000 发表于 2020-3-11 18:25</span><br>
<span>会shader并不能做出游戏。但是不会shader做出完整游戏的难度远小于不会编程。</span><br>
<span>中国的游戏开发公司也不会 ...</span><br>
<span>我的意思是如果能力已经到了shader都会写，那搞不好用sdl之类都能做3d游戏。</span><br>
<span>可能这样说比较冒犯，不过您说话的应该说语气还是方式确实有点印象，于是勾起了我不太想回忆的感觉。看，其实我觉得我的问题一个也没被解决，而且这事就好像已经过去了。某种意义上真的挺职业，我的意思是做这种职业就很可能变成这种习惯。</span><br>
<span>就结合我的经历来说吧，会不会是大部分公司还在用unity5或更前呢？因为已经有了内置画2D格子地图的工具了。要说中国人怎么做游戏的话，其实是已经有模板，整个游戏，做游戏就是稍微改一下就算成品，但是因为也是旧时代的产物，可能需要找好多年前的插件什么的资料，其实不知道，也许真的有问题时真正出手改的人需要。但是还是需要有人开会讨论，好像大家都要很忙。有一点我能理解的是我也想要觉得姑且有工作吗，不用做不是更好？但实质上确实是什么也做不出，什么也不会学到，要不是有兴趣的我会自己搜，那连这种程度也没有，到底有什么意义呢？我觉得不管是在哪个角落都不会快乐。当然一棵树不代表整个森林，我也很希望不是普遍，但做不出什么让人眼前一亮的东西倒是明显的，这就十分中国。</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-11 16:06</span><br>
<span>问题的话倒是有很多，看看各位职业开发者的看法。</span><br>
<span>1 如果是2d平台，抛弃物理系统，那地图的图块以什么形 ...</span><br>
<span>说实话我看你说话很头大啊……</span><br>
<span>你讨论和询问的的东西实在太杂，又没有重点，天南地北你都要问个遍耶，这回又讨论到中国游戏公司什么的…歪了</span><br>
<span>1. 当然是以面片的形式显示……不过tile地图通常会把静态图块合并成一张大图来渲染，可移动、可破坏的图块会抽出</span><br>
<span>图块数据结构存在二维数组，Map等数据结构里，总之放在方便根据tile的行列值查找的容器里</span><br>
<span>如果是自由大小的图块就找个四叉树还是什么的加速算法放进去减少查询消耗</span><br>
<span>位置以什么形式作为数据储存和读取是什么意思？是在问地图数据的序列化和反序列化吗？</span><br>
<span>直接文本文件打开Tiled的tmx格式文件看一下好了，非常清晰</span><br>
<span>另外Unity的序列化库一般是OdinSerializer</span><br>
<span>2. 只是想检测的话引擎提供的物理模块肯定会满足需求，也会比自己写的好</span><br>
<span>不过真想手写，俯视的话那就收集顶点耳边法生成凸多边形，然后用说了好多遍的分离轴碰撞法：</span><br>
<span>大名鼎鼎的N+作者教程：</span><br>
<span>https://www.metanetsoftware.com/technique/tutorialA.html</span><br>
<span>Advanced Collision Detection Techniques：</span><br>
<span>https://www.gamasutra.com/view/feature/131598/advanced_collision_detection_.php</span><br>
<span>及其中文翻译:【转贴】高级碰撞检测技术</span><br>
<span>http://www.cppblog.com/mybios/archive/2006/11/19/15408.html</span><br>
<span>这里凸多边形碰撞的理论也可以应用到3D</span><br>
<span>话说这文章都有20年的历史了呀，时间过得真快……</span><br>
<span>碰撞算法是其一，还有一个重要的是加速算法/结构，得益于计算机图形学的高速发展……</span><br>
<span>《实时计算机图形学》 第9章：</span><br>
<span>至于后三个问题……</span><br>
<span>3. 本来想说用Render target，不过你说怎样比较好看这属于美术方面的，我无从下手</span><br>
<span>4. 前面说的什么？</span><br>
<span>5. 武器轨迹的问题吗？之前还真跟同事讨论过这个需求……</span><br>
<span>要硬想的话，我想到的是指定武器几个Sample点，每帧收集位置，画个spline曲线，再生成个面片，给面片加上材质，要圆滑多填点面就好了</span><br>
<span>但google都会给出答案啊，还有代码呢</span><br>
<span>楼上老哥说的粒子的实现还很多呀，效果也不错呢</span><br>
<span>UE的实现：</span><br>
<span>https://cghow.com/unreal-engine-sword-animtrail-effect-breakdown/</span><br>
<span>用的老版粒子编辑器，新版用尼亚加拉的会更牛逼吧</span><br>
<span>顺便这个东西是需要美术做的，程序不参与</span><br>
<span>Unity的实现：</span><br>
<span>https://www.youtube.com/watch?v=8tW14NaIM-k</span><br>
<span>这些一搜Weapon trail就有好多呀……</span><br>
<span>我说的都是比较基础的</span><br>
<span>坛内大佬看我说的哪有错，有不好的或过时的望帮回帖指正一下</span><br>
<span>话说你这一下子问一大堆形态各异的问题，不会给自己吓到吗？整的这么唬人</span><br>
<span>还一个人从头到尾怎么做</span><br>
<span>实际制作游戏不会这么恐怖呀，这是令人兴奋的</span><br>
<span>这些问题，确实是有不少会在开发中遇到的，但也都是一些比较基本的问题，甚至大部分多少年前别人都解决好了</span><br>
<span>遇到一个问题，钻研一个问题，解决一个问题</span><br>
<span>自己制作游戏的前辈们不都是这么趟过来的么</span><br>
<span>近就有个星露谷物语的例子</span><br>
<span>不做游戏，去研究工具，那也可以写一套插件给哥们几个用用</span><br>
<span>好用上UnityStore UnrealMarketplace卖钱</span><br>
<span>但从你字里行间的意思来看，想做游戏就去做啊</span><br>
</p><p><b>凉宫绿豆沙: </b><br>
<span>zerofree0000 发表于 2020-3-11 18:25</span><br>
<span>会shader并不能做出游戏。但是不会shader做出完整游戏的难度远小于不会编程。</span><br>
<span>中国的游戏开发公司也不会 ...</span><br>
<span>啊，这就是困扰了我很久的问题，我到底想做什么样的游戏。</span><br>
</p><p><b>最美人贩子: </b><br>
<span> 本帖最后由 最美人贩子 于 2020-3-11 23:20 编辑 </span><br>
<span>final007 发表于 2020-3-10 02:03</span><br>
<span>那么想做个模拟经营游戏用什么最快呢？</span><br>
<span>rpgmaker能做这种类型吗？</span><br>
<span>看你想做的是哪种。</span><br>
<span>最简单的，就是数值增长减少那种。KRKR之类的就能做。甚至早期的三国志那种也行。我见过用KRKR做的相当复杂的SLG游戏雏形。不过这个东西运行效率确实很低。</span><br>
<span>如果是一堆小人走来走去盖房子那种，有专门的引擎。环世界、监狱、高考工厂、修仙貌似都用的是它。</span><br>
<span>像P社那种复杂数据库游戏，估计就很让人头大了，有必要发明轮子。</span><br>
</p><p><b>perfaceNext: </b><br>
<span>mes 发表于 2020-3-9 11:38</span><br>
<span>love2d逻辑也很简单，反正纯2d，不用考虑编译。</span><br>
<span>以前好像还有人用日本的HSP，但是应该一直不能显示中文。 ...</span><br>
<span>难得能看到love2D，玩过一段时间，不过好久没碰了，现成的轮子太少了吧，资料不够多，没有一个可视化的开发工具是最大的痛点，不知道现在有没有一个好用的开发工具了，lua的编程还是挺简单的</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-11 22:03</span><br>
<span>说实话我看你说话很头大啊……</span><br>
<span>你讨论和询问的的东西实在太杂，又没有重点，天南地北你都要问个遍耶，这 ...</span><br>
<span>说真的那种感觉并不想想起来，只是既然想起了就不吐不快。</span><br>
<span>1 如果是这样，图是合并大图，然后位置数据出自tiled生成文件，那就是可以想象，但有点复杂。</span><br>
<span>2 其实和上面差不多，怎么把显示的地图3d模型的边界收集起来，可能要手动了，我自己想了下，如果角色是圆柱的话可以大略简化为圆心在不在某个图形内。</span><br>
<img src="https://i.niupic.com/images/2020/03/11/70hn.jpg" title="https://i.niupic.com/images/2020/03/11/70hn.jpg"><br>
<span>3 是美术问题。</span><br>
<span>4 关于俯视2D游戏（如RPG MAKER）各种图块和人物的叠放顺序，如果想做地图有高度差，人物可以跳在其他物体上时如何处理的问题。</span><br>
<span>5 武器轨迹我查到有人说有两种主要方法，一种就是轨迹，但没说怎么具体做，另一种是做透明平面，然后让贴图“滑过”。</span><br>
</p><p><b>mes: </b><br>
<span>perfaceNext 发表于 2020-3-11 23:29</span><br>
<span>难得能看到love2D，玩过一段时间，不过好久没碰了，现成的轮子太少了吧，资料不够多，没有一个可视化的开 ...</span><br>
<span>也许看看各种game jam有没相关作品……</span><br>
</p><p><b>zerofree0000: </b><br>
<span>mes 发表于 2020-3-11 20:17</span><br>
<span>我的意思是如果能力已经到了shader都会写，那搞不好用sdl之类都能做3d游戏。</span><br>
<span>可能这样说比较冒犯，不过 ...</span><br>
<span>我觉得你这么臆想中国人怎么作游戏实在过于偏颇了。恰好我目前在日本做游戏，还是在dmm上的黄油，在中国和日本都干过的我觉得自己在这事上还是比较有发言权的。</span><br>
<span>用unity什么版本根本就不重要，甚至用什么工具都不重要，重要是能做出产品来。这点无论在企业还是在独立游戏圈都是适用的。如果你只想学点技术，那就别去纠结别人还是中国怎么做的。</span><br>
<span>游戏是个复合产品，里面包含了很多跨界的知识点。很多没实际开发经验（无论商业还是独立）的人经常会夸大某一部分的存在价值，就像你觉得视觉效果非常重要，能做出这些视觉效果就能做出游戏了，做3d游戏比2d游戏难得多等等。也有人觉得美术视觉效果就是贴图而已，核心是调试手感等，一天总想着物理引擎那些玩意。</span><br>
<span>不过我觉得都不是问题，实际上手做一下就明白了。</span><br>
<span>你觉得什么都没有解决，那是因为我提供了解决问题的办法——google一下关键字——你却不想去看。论坛显然并不适合也没必要打字去从基础知识去介绍，大多数人找不到门道是因为连搜索什么关键字都不知道。w30of写的内容里有大量的术语我觉得你可能看不懂，我感觉他搞引擎造轮子的经验比我多的多，相比之下我是应用派只用引擎实现需要的结果。</span><br>
<span>但是，能不造轮子坚决不造轮子，这才是独立开发游戏的基础思想，也是现代引擎成熟之后独立游戏开始雨后春笋的原因。</span><br>
<span>最后你关心的碰撞，我再说一遍。</span><br>
<span>你可能把显示形状和碰撞检测给拉到一块了。其实，看到的东西和碰撞检测是两件事。通常来说它们是重合的，但在实现上只不过是碰撞检测使用的矩形刚好和用户能看到的外形一样。</span><br>
<span>实际应用中碰撞检测盒与模型（无论2d还是3d）不重合的情况占大多数。3d游戏经常穿模穿房子就是这样的。2d游戏你要做地面，在unity中，也是把2d collider的大小弄得与你的地面的贴图重叠。</span><br>
<span>2d下无视z轴，z轴的前后顺序不影响碰撞检测，只影响视觉上的贴图遮挡另一张贴图。</span><br>
<span>unity提供了很多种collider，其中一种是自动根据模型的网格形状的mesh collider。但是这种碰撞器消耗很大，不能用于动态物体，只能用于不会动的环境房屋。会动的东西，几乎都是用立方体或是多个立方体拟合出大致形状近似的。</span><br>
<span>你考虑的这种问题，unity都给你解决了，官方教程里都写着怎么实现，别自己空想了，去看看照着做一遍。</span><br>
</p><p><b>凉宫绿豆沙: </b><br>
<span>zerofree0000 发表于 2020-3-12 10:06</span><br>
<span>我觉得你这么臆想中国人怎么作游戏实在过于偏颇了。恰好我目前在日本做游戏，还是在dmm上的黄油，在中国 ...</span><br>
<span>前辈你好，请问有关于游戏设计（策划）方面的网站博客吗，或者是具体分析经典游戏设计思路的也可以。</span><br>
</p><p><b>zerofree0000: </b><br>
<span>final007 发表于 2020-3-10 02:03</span><br>
<span>那么想做个模拟经营游戏用什么最快呢？</span><br>
<span>rpgmaker能做这种类型吗？</span><br>
<span>其实我觉得模拟经营类反而比一般的动作游戏对编程和逻辑的需求更高，因为大量的数值体系和计算都需要脚本控制。</span><br>
<span>推荐你会一种程序语言（脚本语言）开发起来会比较快。使用rpg maker一样也会需要去写java script的。反过来会脚本语言了用啥都差不多。</span><br>
</p><p><b>zerofree0000: </b><br>
<span>凉宫绿豆沙 发表于 2020-3-12 10:16</span><br>
<span>前辈你好，请问有关于游戏设计（策划）方面的网站博客吗，或者是具体分析经典游戏设计思路的也可以。 ...</span><br>
<span>你要问game design的话那是另一个领域的东西了……</span><br>
<span>我虽然自己也想做独立游戏但本质只是个工程师，游戏设计上只是野路子凭自己高兴（这也是自己做独立游戏的目的），所以没啥积累没办法给你推荐，抱歉。</span><br>
</p><p><b>mes: </b><br>
<span>zerofree0000 发表于 2020-3-12 10:06</span><br>
<span>我觉得你这么臆想中国人怎么作游戏实在过于偏颇了。恰好我目前在日本做游戏，还是在dmm上的黄油，在中国 ...</span><br>
<span>那就是因为你并没想过可能要独自完成，比如那个地方要是出问题了怎么办？要是只依赖插件什么而完全不想原理那能做到多好？</span><br>
<span>碰撞，好的，再说碰撞，说到碰撞请列出式子，因为开发的前提就是有这种可能，你要自己写。</span><br>
<span>什么方形圆形好像现在谁都会说了，那，就完了？要是碰了，怎么调整位置？我觉得，你们肯定不想去想。</span><br>
<span>动手当然是动过，之前RPG MAKER我也试过了，只是要说要做出什么来并没有，结论就是不如先明白更多，否则只是试也是一场灾难。</span><br>
<span>其实我也不懂你的目标，是像我这样并没有还是怎样，如果想做的是纸片人对话那其实unity不合适，我也想搞懂更“动作”，需要移动和碰撞检测的类型。</span><br>
</p><p><b>zerofree0000: </b><br>
<span>mes 发表于 2020-3-12 11:16</span><br>
<span>那就是因为你并没想过可能要独自完成，比如那个地方要是出问题了怎么办？要是只依赖插件什么而完全不想原 ...</span><br>
<span>ha？</span><br>
<span>老子就是做动作游戏出身的你跟我说这些？我tm在公司里整个工程从内存资源管理到服务器都是我一个人搞定的，所有系统都是我写了模板别人参照着写的，你跟我说这些？</span><br>
<span>碰撞发生进行位置修正物理引擎帮你干了。当年我拿xna写洛克人时没物理引擎也自己写过碰撞判定，根据上一帧的位置来决定这一帧因为碰撞而修正的位置。但是这些基础烦恼的活现在游戏引擎都给你做了，都是一样的东西自己弄一遍很有意思？不重复造轮子是代码界的基础常识，你是想写引擎还是咋的？你咋不从c++编译器写起呢？</span><br>
<span>你说基础，什么叫基础？网格顶点法线这些知识是基础，程序语言是基础，计算机组成原理内存结构数据结构这是基础，你以为你问的那些是基础？</span><br>
<span>我跟你说，以绝大部分人同人独立游戏的内容，unity已经提供了足够的无需懂得内部实现的条件。你不需要知道deferring render的原理也可以使用各种照明和渲染算法。你不需要自己去实现一个物理引擎也可以做个愤怒小鸟。</span><br>
<span>你的问题就是想太多又不愿意去学基础，学下编程，了解计算机是怎么存储数据和生成画面的，你那些问题根本都不是问题。</span><br>
</p><p><b>w30of: </b><br>
<span> 本帖最后由 w30of 于 2020-3-12 11:42 编辑 </span><br>
<span>mes 发表于 2020-3-12 11:16</span><br>
<span>那就是因为你并没想过可能要独自完成，比如那个地方要是出问题了怎么办？要是只依赖插件什么而完全不想原 ...</span><br>
<span>说了好多遍……分离轴啊，这个算法用来判断重叠检测而判断的依据就是得出最小重叠向量</span><br>
<span>这个最小重叠向量能干什么呢，把这个向量加到对应的多边形上，就可以让两个多边形刚刚好脱离重叠……</span><br>
<span>你去看一下再问也行啊</span><br>
<span>我知道你实际没去看NTutorial了</span><br>
<span>https://www.metanetsoftware.com/technique/tutorialA.html</span><br>
<span>看到那两个箭头没，紫色的那个就是分离轴算法的结果</span><br>
<span>这个教程里还有交互flash帮助你理解呢，多好的文章呀</span><br>
<span>之所以没在这里贴代码，是因为有现成文章讲解的非常好呀</span><br>
<span>Collision Detection Using the Separating Axis Theorem</span><br>
<span>https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169</span><br>
<span>这篇文章有图，有代码，还把公式拆了给你讲解</span><br>
<span>在收藏夹里好多年了……</span><br>
</p><p><b>mes: </b><br>
<span>zerofree0000 发表于 2020-3-12 11:32</span><br>
<span>ha？</span><br>
<span>老子就是做动作游戏出身的你跟我说这些？我tm在公司里整个工程从内存资源管理到服务器都是我一个人 ...</span><br>
<span>so……最后一问，喜欢回就回，不喜欢就算了。</span><br>
<span>jeffreythompson.org/collision-detection/poly-point.php</span><br>
<span>式子给你了，码也给你了。问题是它们碰了后怎么把点移到多边形外面？</span><br>
</p><p><b>mes: </b><br>
<span>w30of 发表于 2020-3-12 11:40</span><br>
<span>说了好多遍……分离轴啊，这个算法用来判断重叠检测判断重叠检测的依据就是得出最小重叠向量啊</span><br>
<span>我知道你 ...</span><br>
<span>分离轴好像是那个看两个物体间有没缝的吧？</span><br>
<span>我的原则是够用就好，并不是没看过，只是这种情况（点/圆对线段/多边形）觉得应该是别的方法。</span><br>
<span>另外有个关于圆形和方形的地方我也知道自己错了，无奈无人纠正，那就算了。</span><br>
</p><p><b>zerofree0000: </b><br>
<span> 本帖最后由 zerofree0000 于 2020-3-12 11:55 编辑 </span><br>
<span>mes 发表于 2020-3-12 11:40</span><br>
<span>so……最后一问，喜欢回就回，不喜欢就算了。</span><br>
<span>jeffreythompson.org/collision-detection/poly-point.php ...</span><br>
<span>改变物体的坐标啊？所有物体的位置不都是拿坐标管理着？</span><br>
<span>至于应该改变到哪儿，你通过上一帧的坐标和这一帧的坐标，计算出移动方向，然后在这个方向的连线上找一个刚好接触又不会重叠的位置，就是这一帧的修正坐标点。对于两个矩形来说，这个计算并不困难。对于不规则的多边形，这会有些麻烦，但如果你规定一些东西排除一些状况，比如只有梯形（可以做倾斜地面），也可以解决。完全不规则的情况——不一定是凸多边形——我不会想自己去实现这个。</span><br>
<span>而在你纠结这个的时候，真正的独立游戏开发者，已经用现成的引擎让自己的小人跳起来，然后开始考虑如何实现二段跳，踩墙跳，攀附墙壁等feature了。</span><br>
</p><p><b>w30of: </b><br>
<span>mes 发表于 2020-3-12 11:43</span><br>
<span>分离轴好像是那个看两个物体间有没缝的吧？</span><br>
<span>我的原则是够用就好，并不是没看过，只是这种情况（点/圆对 ...</span><br>
<span>有没有缝就是判断重叠，得出的向量就是用来脱离重叠啊，也就是你说的挤出去</span><br>
<span>判断点的话，长宽为零的矩形 和 半径为零的圆形等价于点</span><br>
<span>这个也是NTutorialA里有讲到的</span><br>
<span>另外你圆形和方形是在哪里说的……</span><br>
<span>算了，不再回了……</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-13 15:24 编辑 </span><br>
<span>没关系，反正最后说点实际的吧，圆形和方形碰撞怎么算，其实很简单，从方形在x轴最左和最右的范围内选出和圆心x最接近的值，y轴也一样，然后算这个方形上的点和圆心的距离（的平方），如果小于半径（的平方）则碰了。</span><br>
<span>刚看到的别人的成果</span><br>
<span>gfycat.com/windywastefulbrocketdeer</span><br>
<span>就是3角力量2里林克在墙上移动的机制。</span><br>
<span>真有兴趣可以猜猜怎么实现，我也不知道。</span><br>
<span>碰撞确实是很难想通，其实物理也一样卡了吧。</span><br>
<img src="https://i.niupic.com/images/2020/03/12/70o1.jpg" title="https://i.niupic.com/images/2020/03/12/70o1.jpg"><br>
<span>也许折中一下，就用物理引擎，但每多少秒通过位置算一算有没明显出界，然后推回去。</span><br>
<span>线段相交点</span><br>
<span>github.com/processing/processing/wiki/Line-Collision-Detection</span><br>
<span>试复制下来用godot来做个限制点在多边形内的演示，虽没完成应该可以，只是必须自己写的地方比较难看。</span><br>
<span>先是数学，其实我也没完全理解，因为要完成这个也需要点向量计算。</span><br>
<span>paulbourke.net/geometry/pointlineplane/</span><br>
<span>Pa = P1 + ua ( P2 - P1 )</span><br>
<span>Pb = P3 + ub ( P4 - P3 )</span><br>
<span>因为P都是向量/点坐标，意思是根据u可以算出这条线段所在直线中所有的点。</span><br>
<span>如果能算出Pa = Pb即是相交，算出u则能代入上面式子求出相交点。</span><br>
<span>在godot工程里，那只要把原始位置和新位置的之间线段和多边形的线都算一遍，如果有交点则新位置为交点，就是最基本的方法。但是因为平行线相交时算不出来，应该需要额外处理。还有是单纯这样就算不出界，但到边就卡主了，怎么处理也需要再看看。</span><br>
<span>首先参考官方教程，把范围画出来。</span><br>
<span>godot-es-docs.readthedocs.io/en/latest/tutorials/2d/custom_drawing_in_2d.html</span><br>
<span>得说我不明白为什么不能在_draw外用比如draw_line，也不明白为什么不能在func外写了var a =1后再写个a=2，总之就是这样。</span><br>
<span>还有想用数组之类存放所有点的坐标，c#里似乎好几种，反正这里好像就一种，就随便了。</span><br>
<img src="https://i.niupic.com/images/2020/03/13/70Ve.jpg" title="https://i.niupic.com/images/2020/03/13/70Ve.jpg"><br>
<span>之后参考下面复制移动的部分的码，</span><br>
<span>godot-es-docs.readthedocs.io/en/latest/getting_started/step_by_step/your_first_game.html</span><br>
<span>然后我想想需要取得上一层的node2d里的那个数组，how？谷歌，其实有印象之前在哪见过，但想用时还是得搜。用get_node，get_node("..")就是上一层，get_node("../Label")就是同一层的label。</span><br>
<img src="https://i.niupic.com/images/2020/03/13/70VX.jpg" title="https://i.niupic.com/images/2020/03/13/70VX.jpg"><br>
<span>运行就像这样</span><br>
<img src="https://i.niupic.com/images/2020/03/13/70W6.jpg" title="https://i.niupic.com/images/2020/03/13/70W6.jpg"><br>
<span>当然可以看到我就验了一条线，而且还有前面提到的问题，反正不就是“可以”了吗？而且这种程度对我来说才叫“可以”，当然我觉得还是很多人会看不懂。</span><br>
</p><p><b>liuyuan23: </b><br>
<span> 本帖最后由 liuyuan23 于 2020-3-14 16:23 编辑 </span><br>
<span>国内很不好的一个风气就是，一些人疯狂的去宣传没必要去造轮子</span><br>
<span>是，作为增加社会运行效率和降低产品成本，轮子可以不造，用别人制作的现成工具当然是很棒棒的事情</span><br>
<span>但是你们忽略了有人就是想了解和学习怎么造，他们是轮子的潜在开发者和维护者</span><br>
<span>作为有相关知识和开发经验的人，在这个时候更应该是以一种自己知道的更多，把自己的学识分享交流出去的心态，能帮助到同行人难道不也是开心的事么</span><br>
<span>开发者天天吵着国内没有开发资料和讨论圈子，要建立良好的开发生态，放到国外就说人家学术氛围好，开源社区棒，到处都是友善的大神，回头到国内就是造轮子傻逼，你咋不去重新定义CPU和操作系统呢</span><br>
<span>从经济逻辑上来看没有错，没必要重复的去踩同一个坑。</span><br>
<span>但是知识本身也是没有错的</span><br>
<span>你可能知道对方问题的答案，但是你没有做出正面的知识性的回答，你心中对这个简单的问题嗤之以鼻，这么简单还要问，伸手党？你不会去搜一下？然后再嘲笑别人一句造轮子，对于提问者会怎么看你？觉得你哇这个人厉害啊，是个大佬？</span><br>
<span>每个人心里怎么想的我不知道，我也没兴趣去猜测别人的心理</span><br>
<span>但是我知道，一个良好技术的圈子，不需要人人都是工程师和科学家，但是绝对不能人人都不是工程师和科学家</span><br>
<span>外面人家开源社区的发展也不是靠一两个大佬掌握核心科技，然后其他人舔出来的，</span><br>
<span>而是每个人都在各种轮子上添砖加瓦一点一点累积起来的</span><br>
<span>人类的科技知识就是不断的踩在前人的肩膀上，眺望更遥远的地平线，有创新，也有传承</span><br>
<span>计算机科学如此，其他所有文化科技经济知识亦是如此</span><br>
<span>反观国内各个领域的现状，请问，是轮子造太多了？还是已经没有几个人认识什么叫轮子了</span><br>
<span>假如最初发明轮子的人像你们这样，没有教会任何一个人轮子怎么造，</span><br>
<span>你今天就会在博物馆的橱窗里，看着XX出土的一号上古神器，学名：轮子</span><br>
</p><p><b>Lunamos: </b><br>
<span> 本帖最后由 Lunamos 于 2020-3-14 18:17 编辑 </span><br>
<span>liuyuan23 发表于 2020-3-14 17:17</span><br>
<span>国内很不好的一个风气就是，一些人疯狂的去宣传没必要去造轮子</span><br>
<span>是，作为增加社会运行效率和降低产品成本， ...</span><br>
<span>你说的不叫“造轮子”，你说的叫“要不要发展基础技术或者基础科学”，这是两码事。</span><br>
<span>这两个概念其实很容易区分，但你故意把它们混为一谈了。</span><br>
<span>任何层次的事情，都有任何层次之下的轮子，每个人都在用。</span><br>
<span>如果你做游戏，那当然也很好，那么你写游戏的轮子就是别人做好的引擎工具链，比如渲染器就是其中一个。</span><br>
<span>如果你的目标是做渲染器，那当然也很好。你的轮子就是别人做好的Rasterization API，计算材质Graph的包，光线追踪的引擎</span><br>
<span>如果你要做光线追踪，那当然也很好，你的轮子就是空间搜索树的快速建立，光线几何的快速求交，不同的搜索光线空间MC积分的方法。</span><br>
<span>如果你要做光线几何的快速求交，那当然也很好，你的轮子就是AVX，CUDA，就是那些快速求交算法本身的改进空间</span><br>
<span>如果你要做支持AVX、CUDA的SIMD硬件，那当然也很好，你的轮子就是Cadence, Synopsys的工具，定义好工艺的IP</span><br>
<span>……</span><br>
<span>这件事可以一直列下去。关键在于，你的目的是什么。</span><br>
<span>你要去做CPU，所以你去做CPU了，这不叫造轮子。</span><br>
<span>你要去写游戏引擎，所以你去写游戏引擎了，这不叫造轮子。</span><br>
<span>你要去证明哥德巴赫猜想，所以你去学数论了，这不叫造轮子。</span><br>
<span>这都是他们的目标，他们要做的就是这件事本身。</span><br>
<span>原因或许有很多，比如个人爱好，比如技术封锁，比如好奇心，比如工业界的工作，比如学校里的学习……这都是毫无问题的。</span><br>
<span>什么叫造轮子？</span><br>
<span>你要去做游戏，所以你去写CPU了，这叫造轮子。</span><br>
<span>你要去做网站，所以你去写服务器操作系统了，这叫造轮子。</span><br>
<span>不知道逻辑清晰了没有？</span><br>
<span>只要轮子满足需求，就不要去造它。这不是什么难以理解的事情，更不是什么“国人鼓吹”，这是普世适用的真理，也是所有工程师都在用的现实准则。比如你所提到的“人类的科技知识就是不断的踩在前人的肩膀上”，指的无非也就是这件事。别人将其他应用层的轮子抽象成为可以直接调用的工具，就是为了让你能把你这个层次的事情做到最好。</span><br>
<span>当然这也不是提倡不求甚解，如果你发现了解更多会有助于你项目本身进展的时候，自然会去了解底层的东西，而不是一开始就转移火力，递归学习。同时，了解更多是为了“不重复发明轮子”。这里注意了，“不重复发明轮子”和“不造轮子”是两件事。前者的意思是避免思而不学，导致重复发明，避免浪费智力。后者的意思是利用抽象和复用减少工作量，目的是避免浪费劳动。</span><br>
<span>为什么不提倡“造轮子”呢？它的危害在于，你很容易因为无法完成自己的目标而丧失动力和斗志，最终一事无成。我相信吃过递归学习亏的人不少。从零开始学别人已经造过，而且比你这个新手造得好得多的轮子的造法，想要达到工业级强度的时候，恐怕已经须发花白——与此同时，别人的游戏已经Release了二三十款，或许成为了GDC终生成就级别的游戏制作人。归根结底，你到底想做什么事，有没有做到呢？时常回想初心吧。</span><br>
</p><p><b>mes: </b><br>
<span>就说如果真的用过比如unity，就是想用一个多边形围着一个圆不让它出来那怎么办？</span><br>
<span>我只想到每条边都做一个方形的碰撞形状，这就是最简单的方法。</span><br>
<span>就好像想用剪刀剪线，但是只有菜刀。</span><br>
<span>当然这个剪刀我也没完全确定能造出来，只能近似，至少我想了，还试了，要是连这也做不到那最终游戏能做出来吗？</span><br>
<span>除了看着是不是难看以外，还有就是会不会想至少这样做会更有意思，归根究底是兴趣问题。</span><br>
<span>反正我也只是兴趣，要说有什么让我觉得不爽那就是可以感到并没有其他真正有兴趣的人。</span><br>
<span>关于101l问题1，基本方法，也只是参考，和如何与有一大片tile的地图检测</span><br>
<span>jonathanwhiting.com/tutorial/collision/</span><br>
<span>lazyfoo.net/tutorials/SDL/39_tiling/index.php</span><br>
</p><p><b>liuyuan23: </b><br>
<span> 本帖最后由 liuyuan23 于 2020-3-14 19:24 编辑 </span><br>
<span>Lunamos 发表于 2020-3-14 17:10</span><br>
<span>你说的不叫“造轮子”，你说的叫“要不要发展基础技术或者基础科学”，这是两码事。</span><br>
<span>这两个概念其实很容易 ...</span><br>
<span>你没有看懂我的意思。</span><br>
<span>我的核心点在于，这种基于七嘴八舌家长里短的的七大姑八大姨言论在这种技术性比较强的网络社区都是不合时宜的。</span><br>
<span>在技术社区讨论时，人家问什么问题，你就回答什么问题，在这个核心问题之外的“我觉得”"你应该”都应该是不受欢迎的</span><br>
<span>作为回复者没有理由和必要去替提问者担心他的任何人身相关问题，我虽然不想把他上升到一个社会啊，民族文化习惯上的高度，但有些地方还是有必要去抑制住咱们国人普遍的喜欢凑热闹管闲事的坏毛病</span><br>
<span>很多网络论坛社区一进来都会说：欢迎大家单纯的讨论非本版块之外的内容，但就是有这么些人读不懂单纯两个字的意思。</span><br>
<span>既然人家提的问题是问：轮子怎么造？java好不好？那就应该提供怎么造的回答，java哪里好，哪里不好，而不是阴阳怪气的“我今天来和大家聊一聊为什么不提倡“造轮子”呢？”“那些年我用java踩过的坑（逃”bla bla bla</span><br>
<span>我想你应该知道stackoverflow不欢迎中国人注册和回答的事，就是因为中国人的回答里太多类似的东西了，在那里回答问题涉及到任何和问题核心无关的内容会被删楼的，哪怕你的回答是有干货的，</span><br>
<span>因为人家也不想变成baidu zhidao</span><br>
<span>我假设一个场景</span><br>
<span>假如在CSDN：</span><br>
<span>#0 2007-01-01 标题：MFC里XXXX api 怎么用？</span><br>
<span>#1 2007-01-01 沙发</span><br>
<span>#2 2007-01-02 lz现在还有人用mfc啊，转.net啦，又快又方便</span><br>
<span>#3 2007-01-02 自己顶</span><br>
<span>#4 2007-01-03 没人回答吗</span><br>
<span>#5 2007-02-01 已经解决啦，谢谢各位</span><br>
<span>#6 2019-03-03 lz问题解决了吗，怎么解决的可以说一下吗？？</span><br>
<span>本楼年代过于久远，不再提供回复功能</span><br>
<span>我相信用过百度的程序员都遇到过类似场景吧。</span><br>
<span>你试想一下，当你在q内只能搜到类似内容，你什么感想？</span><br>
<span>每种社区都承担着自己应有的功能，如果想了解相关的话题可以去zhihu之类的，那里欢迎这种非技术性的问题</span><br>
</p><p><b>Lunamos: </b><br>
<span> 本帖最后由 Lunamos 于 2020-3-14 20:41 编辑 </span><br>
<span>liuyuan23 发表于 2020-3-14 19:46</span><br>
<span>你没有看懂我的意思。</span><br>
<span>我的核心点在于，这种基于七嘴八舌家长里短的的七大姑八大姨言论在这种技术性比较 ...</span><br>
<span>我理解你这层的意思。不过这就跟你之前的讨论的问题不同了。之前是关于造轮子是否被国人过渡宣传，而这楼涉及的是技术论坛的基本礼仪问题。</span><br>
<span>关于技术论坛礼仪，你说的没错。但你忽略了一个重要问题，S1不是技术论坛，S1是有巨魔的，问的也不是这么单纯的问题。同时，技术论坛对问问题本身也是有要求的。一个不好的问题在技术论坛只能拿到downvote，而有些地方好歹有人多说两句指点一下。</span><br>
<span>我相信一个真的想解决问题的人问出一个具体的问题，在这里只会有大量热心人来提解决方案，并不会用那些你列举的没营养说辞。但如果你是想为这位LZ说话的话，应该只是因为你没仔细看过他发的这一系列主题贴。我猜你是大概看了一下这些贴，没有追下来，也没有仔细看他到底问了什么，所以会有“LZ不就是问了几个问题么，回答问题不就好了？”这种不腰疼的感想。有时间的话可以仔细爬一下看他在这个楼和其他几个楼在说什么，应该就能明白了。如果想切身体会，可以试着回答一下他的问题，然后看看他的回复，你自己就气笑了。</span><br>
</p><p><b>liuyuan23: </b><br>
<span>Lunamos 发表于 2020-3-14 19:40</span><br>
<span>我理解你这层的意思。不过这就跟你之前的讨论的问题不同了。之前是关于造轮子是否被国人过渡宣传，而这楼 ...</span><br>
<span>我没说s1 ，我也没说lz，也没仔细爬楼，太长耽误我写代码，我只是看到楼里面有人提到造轮子 这三个字，想表达一下我对这个事情的看法而已，我也知道这是巨魔论坛，没指望在这里看到什么有价值的技术讨论，只是我觉得有人提出来想搞点技术帖子觉得蛮有意思看个乐子，但是果然不出所料，两层楼不到就又吵起来了，不过这就是在巨魔论坛应该做的事，不是么</span><br>
</p><p><b>汪达: </b><br>
<span>liuyuan23 发表于 2020-3-14 19:59</span><br>
<span>我没说s1 ，我也没说lz，也没仔细爬楼，太长耽误我写代码，我只是看到楼里面有人提到造轮子 这三个字，想 ...</span><br>
<span>说得好，那么你为什么不尝试解答楼主的疑问呢？</span><br>
</p><p><b>mes: </b><br>
<span>LS某些人，那我也不客气，下次回答问题请把工程文件拿出来谢谢。</span><br>
</p><p><b>Lunamos: </b><br>
<span>mes 发表于 2020-3-14 21:20</span><br>
<span>LS某些人，那我也不客气，下次回答问题请把工程文件拿出来谢谢。</span><br>
<span>那也得要求你问出一个好问题才行。你问出的问题如果足够好，我相信会有人愿意去试着实现一下再来回答。</span><br>
<span>如果问题不够好，给的教程不看，推荐的书不读，谁有有义务去帮你实现一遍呢。</span><br>
<span>我觉得你先尝试一下，每次只问一个具体问题比较好。你的语言组织很糟糕，经常看不出你的问题在哪里，或者到底想说什么。比如你131l说，101l的问题1是tile碰撞，你自己想出来了，但你101楼的问题1明明是</span><br>
<span>那地图的图块以什么形式显示在游戏里，图块位置又以什么形式作为数据储存和读取？</span><br>
<span>这谁又知道你想说什么啊</span><br>
</p><p><b>w30of: </b><br>
<span>liuyuan23 发表于 2020-3-14 19:59</span><br>
<span>我没说s1 ，我也没说lz，也没仔细爬楼，太长耽误我写代码，我只是看到楼里面有人提到造轮子 这三个字，想 ...</span><br>
<span>我有点了解你的感受，应该是爬楼爬一半看到“造轮子”被触动了，就直接回帖了吧</span><br>
<span>造不造轮子总是根据情况来决定的，大家都懂嘛，别妖魔化就行了</span><br>
<span>不过嘛，这帖子的乐趣倒不是关于轮子不轮子的问题了</span><br>
<span>我是头铁在尝试解答楼主提出的问题，爬楼爬下来看看</span><br>
<span>帮我分析一下楼主到底在问什么问题……</span><br>
<span>我是累了</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-14 21:42 编辑 </span><br>
<span>Lunamos 发表于 2020-3-14 20:29</span><br>
<span>那也得要求你问出一个好问题才行。你问出的问题如果足够好，我相信会有人愿意去试着实现一下再来回答。</span><br>
<span> ...</span><br>
<span>如果你看了连接，还有一丁点编程知识的话应该知道，不管你有没兴趣还是说说。</span><br>
<span>map[][]</span><br>
<span>比如要找地图上横m竖n，因为是0开始的</span><br>
<span>map</span><br>
<span>我查到的差不多都这样。</span><br>
<span>反正留给走到这一步的人，毕竟我也是名称也不会记的人，无法更详细解释。</span><br>
<span>还有你们可以继续开发，不再参与。</span><br>
<img src="https://i.niupic.com/images/2020/03/14/71qY.jpg" title="https://i.niupic.com/images/2020/03/14/71qY.jpg"><br>
</p><p><b>liuyuan23: </b><br>
<span>汪达 发表于 2020-3-14 20:12</span><br>
<span>说得好，那么你为什么不尝试解答楼主的疑问呢？</span><br>
<span>这就是活的：你比国足踢得好你怎么不上？</span><br>
<span>回答你的问题，这里是非技术性论坛，我讨论的是非技术性问题</span><br>
</p><p><b>汪达: </b><br>
<span> 本帖最后由 汪达 于 2020-3-14 20:51 编辑 </span><br>
<span>liuyuan23 发表于 2020-3-14 20:42</span><br>
<span>这就是活的：你比国足踢得好你怎么不上？</span><br>
<span>回答你的问题，这里是非技术性论坛，我讨论的是非技术性问题 ...</span><br>
<span>别，我真没说你比国足踢得好</span><br>
<span>我只问你怎么不上</span><br>
<span>所谓言传身教，你教别人怎么做，只是靠嘴炮吗？</span><br>
</p><p><b>w30of: </b><br>
<span>汪达 发表于 2020-3-14 20:49</span><br>
<span>别，我真没说你比国足踢得好</span><br>
<span>我只问你怎么不上</span><br>
<span>所谓言传身教，你教别人怎么做，只是靠嘴炮吗？</span><br>
<span>造轮子属于老生常谈的问题，也与本楼的主题不符</span><br>
<span>我们就不要因此再展开讨论了罢</span><br>
</p><p><b>liuyuan23: </b><br>
<span> 本帖最后由 liuyuan23 于 2020-3-14 20:58 编辑 </span><br>
<span>汪达 发表于 2020-3-14 20:49</span><br>
<span>别，我真没说你比国足踢得好</span><br>
<span>我只问你怎么不上</span><br>
<span>所谓言传身教，你教别人怎么做，只是靠嘴炮吗？</span><br>
<span>不回答这种没营养的话题蛤，知道巨魔们喜欢引战然后一边乐此不疲，人年纪大了不喜欢参与这种事情</span><br>
</p><p><b>汪达: </b><br>
<span>liuyuan23 发表于 2020-3-14 20:56</span><br>
<span>不回答这种没营养的话题蛤，小朋友找别人玩去</span><br>
<span>楼上几位老哥相当诚恳地浪费生命回答楼主缺乏常识+刁难般的提问，还要被你个连帖子都不看的跳出来喷政治不正确，喷巨魔？这真是啃脚的笑话别人年纪小了。</span><br>
</p><p><b>zerofree0000: </b><br>
<span> 本帖最后由 zerofree0000 于 2020-3-15 14:17 编辑 </span><br>
<span>liuyuan23 发表于 2020-3-14 16:17</span><br>
<span>国内很不好的一个风气就是，一些人疯狂的去宣传没必要去造轮子</span><br>
<span>是，作为增加社会运行效率和降低产品成本， ...</span><br>
<span>大哥你根本不明白，他的问题不在于我是否在宣扬不去造轮子，而是如果他真想学怎么造轮子，我也给了他应该搜索哪些关键字，但是他并不想去学这些基础知识。</span><br>
<span>这好比一个不断问轮子怎么做，却不愿意去动手去削木头，也不愿意去学习数学，还非要别人用他能理解范围内的知识去解释清楚。造轮子有数学理论部分，也有材料工学部分。</span><br>
<span>他问的很多问题，都是学了编程就能明白的。以他现在的知识水平，既不能用轮子去造车，也造不出轮子。</span><br>
<span>而要想让他明白这些东西，由于缺少了对应的知识体系，我难道要把图形学的书里内容全部粘贴到这里吗？我其实又不是反对造轮子，但是他连编程和图形渲染的基础知识都没有，先推荐他看看相关知识，自然迎刃而解。</span><br>
<span>再说这帖子本来的标题就是讨论游戏制作工具，讨论unity的。所以我默认认为重点在于unity怎么用，而不是去把unity给你造好的轮子再造一遍。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-15 14:44 编辑 </span><br>
<span>为这么句回复也太无谓，发发马里欧的数据，看来有人已经懂了，我只看到跳时上升速度会变慢（不影响高度），如果这是对的那确实是上升下落不同。</span><br>
<span>s276.photobucket.com/user/jdaster64/media/smb_playerphysics.png.html</span><br>
<span>blog.hamaluik.ca/posts/super-mario-world-physics/</span><br>
</p><p><b>q8f13: </b><br>
<span>爬了下楼这歪的够严重的，这到底是在讨论啥</span><br>
<span>输入缓冲对于act ftg platformer等需要实时反应的游戏是标配。除只是要做个粪游戏或者4399</span><br>
<span>所谓跳跃手感，包括马里奥在内，没有固定的做法。取决于你想营造的手感是什么样的</span><br>
<span>所谓硬核的概念是玩家主观不是开发者主观</span><br>
<span>抛开设计谈实现没有意义</span><br>
<span>有问题集中问一个问题的解决不要东拉西扯</span><br>
<span>— from Google Pixel 3, Android 10 of S1 Next Goose v2.2.2</span><br>
</p><p><b>mes: </b><br>
<span>麻烦不做的人不要回了，因为比如LS也知道歪了吧？那你还继续？如果这么想的人请自己做个完整游戏拿出来，再大家讨论手感啥的，这就是个工具及使用帖，讨论能怎么使用，我有我个人的兴趣，而且只看到没人来解决，而且也没别人有真正的问题。</span><br>
<span>反正这种我也不再回。</span><br>
</p><p><b>q8f13: </b><br>
<span>mes 发表于 2020-3-15 15:41</span><br>
<span>麻烦不做的人不要回了，因为比如LS也知道歪了吧？那你还继续？如果这么想的人请自己做个完整游戏拿出来，再 ...</span><br>
<span>这版我看你也发了不少这方面的帖了，但说实话，甚至从业者中，和你抱类似想法但确有一腔热情的人都很多，我自己过去也是这样。作为文科专业如今却在coding的过来人，当然希望更少的人走更少的弯路，并且能更好地融入这个领域</span><br>
<span>其实楼里也有朋友提过，实际想进入这个领域，先自己确定一个想法，不用考虑专不专业对不对路子。集中围绕这个想法一点点尝试着做出来。遇到问题找解决，找人提问，慢慢地把这个想法作为原型实现出来。结果并不重要，等做完后回头看你会发现自己相对开始的时候，其实已经进步了很多</span><br>
<span>还有一点，无论是作为hobby还是想入行，最好都先确定一下自己的定位。虽说独立开发不是找职位，但作为个体，仍然需要有某些方面更感兴趣更擅长，才好给自己找未来的路线。举例来说，如果是觉得gameplay细节和逻辑更有意思，那就从数学，单位控制器设计，代码上入手；如果是动效，画面观感更吸引自己，那就从引擎功能，渲染，美术等方面入手</span><br>
<span>你提的问题里，很大部分其实都是空中楼阁。自己搭下梯子，很多问题自然就消解了</span><br>
<span>另外一个tip，做游戏，尤其是独立开发。最难的其实是坚持</span><br>
</p><p><b>mes: </b><br>
<span>q8f13 发表于 2020-3-15 16:06</span><br>
<span>这版我看你也发了不少这方面的帖了，但说实话，甚至从业者中，和你抱类似想法但确有一腔热情的人都很多， ...</span><br>
<span>所以我有提出问题，说不定有人有相同的问题。</span><br>
<span>我有问题也是搜到别人的提问。</span><br>
<span>数学教程可以，不过要中学生能看懂的水准。</span><br>
<span>同理，实现就要包括怎么写码，至少是相关工具的工程测试过可以的。</span><br>
<span>要是都没有，那还有什么讨论的意义呢？这里面对的还是更初级的人士。</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1917695[100-150]</guid>
    </item>
    <item>
      <title>unity及其他免费PC游戏制作引擎或工具帖[50-100]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1917695-1-1.html</link>
      <description>unity及其他免费PC游戏制作引擎或工具帖&#13;
 本帖最后由 mes 于 2020-3-8 00:08 编辑 

首先我觉得没这个需要，要是有人完全不懂的情况下搜到了也许有那么点帮助，反正随便搜只搜到4年前的帖，不知道大家游戏做出来没。
&#13;
https://bbs.saraba1st.com/2b/thread-1351885-1-1.html
&#13;
然后就是比较“多功能”的之中我只用过unity，也并没做出过完整的什么东西，要是问我我多数不懂，可能搜一下能不能解决，也不会顶，随便占几楼编辑下吧。
&#13;
unity基础
&#13;
[*]Q：如何编程？
&#13;
A：复制粘贴，想要速成吗？那就搜你想要的内容复制粘贴，但本人完全不支持拆别人工程之类的行为，请用网上免费教程之类的码。
&#13;
[*]Q：可不可以不编程……
&#13;
A：也许看类型，但个人不觉得对这一层完全不碰能做到多好，听说国产有个不用编程的引擎，也许试试那个。
&#13;
[*]unity中比较一般的做法是，把控制角色，敌人，可收集（如金币）都作为一个个的物体放入场景，然后在这些物体中挂脚本来控制移动、收集完消失之类，但是！据说这样的效率不好，大概用ECS会好点，反正我也还不懂。
&#13;
[*]那些物体上的脚本一般可以看成有一开始只运行一遍的部分，和之后一直在每帧更新的部分，而物理的更新和每帧更新又是不同的，这个就看码大概就知道怎么分开，总之记住有这么回事就好。</description>
      <content:encoded><![CDATA[<p><b>back57992: </b><br>
<span>真田丸 发表于 2020-3-8 16:13</span><br>
<span>ECS是啥？Entity Component System？这不是快10年前的概念吗？unity的确是典型entity based。 ...</span><br>
<span>在游戏上应用的少，我只知道一个OW，效率也确实超神。unity现在加速转变DOTS，ecs架构在unity上普及是早晚的事。</span><br>
</p><p><b>back57992: </b><br>
<span>2D游戏也同样推荐GODOT，免费开源，比业余的引擎专业，IDE集成在编辑器里（个人比较喜欢这种整合的），比专业的引擎轻量。</span><br>
<span>其次unity吧， 其他的什么love2d，资料实在太少，国内几乎没人用。</span><br>
<span>我觉得游戏制作人 会一个unity就行了，资料多，学习成本低点，下到手游小游戏，上到新的管线也能适应3A作品。</span><br>
</p><p><b>back57992: </b><br>
<span>再加一句ue4什么都好，但做手游实在是不适合</span><br>
</p><p><b>mes: </b><br>
<span>Freesil 发表于 2020-3-8 23:39</span><br>
<span>adv类型的游戏 有什么不用回编程就能用的吗，橙光感觉太糙了</span><br>
<span>古有NS吉里吉里，今有……忘了，去freem看看，有能输出html的。</span><br>
<span>但是还是要用一些码控制换行什么的，也不会再简单了。</span><br>
</p><p><b>mes: </b><br>
<span>back57992 发表于 2020-3-9 09:12</span><br>
<span>2D游戏也同样推荐GODOT，免费开源，比业余的引擎专业，IDE集成在编辑器里（个人比较喜欢这种整合的），比专 ...</span><br>
<span>love2d逻辑也很简单，反正纯2d，不用考虑编译。</span><br>
<span>以前好像还有人用日本的HSP，但是应该一直不能显示中文。</span><br>
<span>另外有好像能做PS4 PSV NS游戏的ＤＸライブラリ。</span><br>
</p><p><b>真田丸: </b><br>
<span>Freesil 发表于 2020-3-8 23:39</span><br>
<span>adv类型的游戏 有什么不用回编程就能用的吗，橙光感觉太糙了</span><br>
<span>renpy？</span><br>
</p><p><b>真田丸: </b><br>
<span>back57992 发表于 2020-3-9 09:12</span><br>
<span>2D游戏也同样推荐GODOT，免费开源，比业余的引擎专业，IDE集成在编辑器里（个人比较喜欢这种整合的），比专 ...</span><br>
<span>godot的luascript有人用过吗？</span><br>
</p><p><b>mes: </b><br>
<span>也许做FC游戏？</span><br>
<span>github.blog/2018-07-16-how-the-nintendo-entertainment-system-lives-on-in-open-source-game-bytes/</span><br>
<span>MD游戏</span><br>
<span>gamasutra.com/blogs/DoctorLudos/20191019/352537/Making_a_SEGA_Mega_Drive__Genesis_game_in_2019.php</span><br>
<span>还有gameboy游戏</span><br>
<span>github.com/gbdev/awesome-gbdev</span><br>
</p><p><b>Lunamos: </b><br>
<span> 本帖最后由 Lunamos 于 2020-3-9 16:20 编辑 </span><br>
<span>不需要先学十种锤子的用法，然后满世界找钉子。首先你要有个想砸钉子的地方（做游戏的想法），然后用且只用一把锤子好好地把钉子砸进去。</span><br>
<span>完整砸进一个钉之后，再反思这把锤子有没有不好用的地方，要不要换一把更趁手的，许多技巧举一反三上手新锤也不慢；或者下次还用这个锤子熟能生巧，获得了许多可以把钉子砸得更漂亮的心法。</span><br>
<span>Done is better than perfect，做工具党容易一直研究工具但是不出活。最关键还是有真正想做的游戏，并坚持下去。</span><br>
<span>(以上也是自己的教训）</span><br>
</p><p><b>mes: </b><br>
<span>Lunamos 发表于 2020-3-9 15:13</span><br>
<span>不需要先学十种锤子的用法，然后满世界找钉子。首先你要有个想砸钉子的地方（做游戏的想法），然后用且只用 ...</span><br>
<span>但是如果只有自己全部搞懂，那有的部分就像数学，老师觉得“只是转了个弯”的题，可能自己永远钻不出来。所以先看看成品拆开怎样的，还有别人用这些工具怎么做，我觉得也是正确的。</span><br>
</p><p><b>Lunamos: </b><br>
<span>mes 发表于 2020-3-9 16:52</span><br>
<span>但是如果只有自己全部搞懂，那有的部分就像数学，老师觉得“只是转了个弯”的题，可能自己永远钻不出来。 ...</span><br>
<span>这是思而不学则殆的错误，重复造轮子，跟工具党思维无关。砸的时候当然要学怎么用锤。</span><br>
<span>现在的独立开发者先简略跟随教程和例子简略学一下Unity肯定没错。有想做的东西可以看看相关机制单独的tutorial和例子。更深的东西没必要现在学，做出东西来自然会对未来方向的理解更加深刻。</span><br>
</p><p><b>melting: </b><br>
<span>凉宫绿豆沙 发表于 2020-3-8 21:39</span><br>
<span>只有做**的还在坚持了</span><br>
<span>其实arcaea就是用cocos2dx做的</span><br>
</p><p><b>w30of: </b><br>
<span>melting 发表于 2020-3-9 16:03</span><br>
<span>其实arcaea就是用cocos2dx做的</span><br>
<span>宝可梦大师也是cocos做的</span><br>
</p><p><b>mes: </b><br>
<span>Lunamos 发表于 2020-3-9 16:00</span><br>
<span>这是思而不学则殆的错误，重复造轮子，跟工具党思维无关。砸的时候当然要学怎么用锤。</span><br>
<span>现在的独立开发者 ...</span><br>
<span>这话……可能对学生们有用，还不用太深入，看公式就可以了，不用管为什么是这样列。如果真的要做的话只要涉及都该看看，毕竟很多不按直觉的东西，就算不是自己亲自动手做的部分也需要懂，知道那些部分限制在哪里，因为很多确实是不按直觉，不然人人都一打开就会用unity了，何须教程之类。</span><br>
</p><p><b>Lunamos: </b><br>
<span>mes 发表于 2020-3-9 17:55</span><br>
<span>这话……可能对学生们有用，还不用太深入，看公式就可以了，不用管为什么是这样列。如果真的要做的话只要 ...</span><br>
<span>一个独立游戏制作者最关键的是知道自己要做什么，有没有毅力坚持下去。只要这件事确定下来，可以说事情已经做成了一半。其他完全可以边做边学，需要什么学什么。尤其刚开始的时候工具都不用挑，根据想做的东西稍加选择，投入进去即可，大部分都能举一反三。手边只有RPG Maker？拿来做个RPG毫无问题。只填充内容和逻辑利用现有游戏底子做成MOD？一样能把游戏的想法展现出来。</span><br>
<span>Celeste原型是用PICO-8 Lua写的，废都物语是RPG Maker做的，Dota是魔兽的地图，吃鸡是武装突袭的MOD，太吾绘卷则来自Unity中蹩脚的编码。而这些丝毫不影响他们成为经典。反观常立志的制作者经常陷入工具的深渊。一会儿纠结这个效率底下，一会儿纠结那个资源匮乏，MOD太不自由，RPG Maker太low，UE4太难，H5又做不出3A——拜托，等那天想做3A的时候再考虑吧。</span><br>
<span>当然，独立游戏制作者和游戏程序员是完全不同的职业，跟引擎程序员更是八竿子打不着。我默认这里讨论的主体都是前者。后者真的不需要看一个玩家论坛的帖子做决策。如果你讨论的是后者，那你把UE4源码看一遍写个架构解析出书，我也不会拦着你。</span><br>
</p><p><b>mes: </b><br>
<span>Lunamos 发表于 2020-3-9 17:35</span><br>
<span>一个独立游戏制作者最关键的是知道自己要做什么，有没有毅力坚持下去。只要这件事确定下来，可以说事情已 ...</span><br>
<span>没有什么独不独立，什么职位，有的只是兴趣，不管是有多少人，想做什么，都可以讨论，如果你已经默认以“职业”为前提那我也不管那块。</span><br>
<span>好像有个公开控制部分源码的游戏不太记得是不是celeste，有几千行，老实说我想象不出来，不就是上下左右加几个键吗，各人有各人的做法了，那我至少知道有这回事，并认为不适合自己，然后看有没别的做法。</span><br>
</p><p><b>Lunamos: </b><br>
<span>mes 发表于 2020-3-9 18:43</span><br>
<span>没有什么独不独立，什么职位，有的只是兴趣，不管是有多少人，想做什么，都可以讨论，如果你已经默认以“ ...</span><br>
<span>主要是一般有这个“爱好”的人，都是想做游戏的人，而不是想做程序员接活的人。对独立开发者来说，程序方面主要是原型和机制框架实现，程序外的东西才是工作主体。</span><br>
<span>像本贴这样的技术讨论当然毫无问题，只是之前注意到很多人陷在大量细节实现之中，而游戏本身甚至还没有可玩原型用来验证，实为本末倒置，因而有感而发提出一些自己的经验教训。以自己要做的游戏为中心而不是追求工具和细节的完美主义，从最小原型着手开始做，需要什么再学习什么也更有效率和成就感。</span><br>
</p><p><b>8064战五渣: </b><br>
<span>GameMaker Studio 2</span><br>
<span>上手指南：https://indienova.com/indie-game-development/gms-2-tutorial-for-starters/引用文章的最后一段：</span><br>
<span>五、题外话</span><br>
<span>在你学习实践的过程中，可能会有些“专家”跳出来跟你讲“这么学没用，GameMaker 是玩具，真正的游戏引擎绕不开写代码”之类的，老老实实报个班学 Unity3D 或者 C++ 吧，你只需回复“你牛逼你用汇编写个 Undertale 啊”。我认为在未来，游戏引擎必然像玩具一样，你只需要专注设计，人工智能会替你完成编程。在当前这个过度阶段，通过“拖放”了解游戏开发的整体思维和设计理念要比通过 printf 实现 "Hello, World!" 有意义得多。</span><br>
<span>关于游戏引擎的选择，我曾经在某网站目睹 Unity3D 用户和 GameMaker 用户对喷，各方皆在论证自己的引擎比对方的更好，自己的选择比对方更明智，都在张贴各自阵营引擎的代表作，却没有一个贴出自己的作品。我认为引擎只是工具，各有千秋，优越感是通过作品而不是工具体现的。需要用什么引擎取决于你想做什么游戏。如果还没想好，那最合适你的引擎就是纸笔，因为纸上原型学习和实现成本最低，无论是资金成本还是时间成本。</span><br>
<span>至于我为什么一直强调查阅英文原版文档，那是因为即便有一天国内出现了汉化的文档和界面，也不可能将函数和代码表达方法汉化，结果反而导致代码与帮助文档的差异更大，更看不懂，比如汉化文档说“精灵”，你不一定知道它对应的是 “sprite”，于是你去找画着精灵的那幅 png 图片，说到“速度”，你不知道是 "room_speed"还是"game_set_speed" (GMS 2 相对 GMS 1 有理念更新，老用户请自行查阅)，说到“帧率”，你不知道是 "image_speed" 还是“gamespeed_fps”…类似很多，每个脑子里需要转个弯，这些小弯道累积起来就非常影响理解效率了，总体难度绝对会大于学英文+学代码的难度总和。况且，你都有勇气学游戏引擎了，还怕那点英文词汇吗？</span><br>
<span>最后，引用我校友王雪竹说过的一句话：</span><br>
<span>尽快把你人生中的前十个游戏做完，因为它们都是垃圾。</span><br>
</p><p><b>mes: </b><br>
<span>Lunamos 发表于 2020-3-9 18:44</span><br>
<span>主要是一般有这个“爱好”的人，都是想做游戏的人，而不是想做程序员接活的人。对独立开发者来说，程序方 ...</span><br>
<span>现实来说，如果实在没人，最好是有美术基础的人自己学会做游戏，就看看有没有了。</span><br>
</p><p><b>pandaman7777: </b><br>
<span>想问下这帖里应该有专业的技术大拿，用引擎做游戏内录的过场已经是非常成熟的技术了，那么以后有没有可能用引擎做更高端的类型影片，比如宣传动画啥的</span><br>
</p><p><b>mes: </b><br>
<span>8064战五渣 发表于 2020-3-9 18:57</span><br>
<span>GameMaker Studio 2</span><br>
<span>上手指南：https://indienova.com/indie-game-development/gms-2-tutorial-for-starter ...</span><br>
<span>我觉得有点道理，有实力大概都可以去参加game jam啥的，还干嘛对喷……</span><br>
<span>为了避免变成这样，我提个问题，看有没有人来回答，因为我用不上所以暂时不会管，但如果自己弄懂了大概也发一下。</span><br>
<span>问题是，看过某blog说，在unity2d里可以设置成一个方块，上下左右分别是不同判定，比如某一面是刺，但是不需要再另外做一个刺的判定形状，那到底要怎么实现？要是别的引擎或工具也行。</span><br>
</p><p><b>Lunamos: </b><br>
<span>mes 发表于 2020-3-9 21:02</span><br>
<span>我觉得有点道理，有实力大概都可以去参加game jam啥的，还干嘛对喷……</span><br>
<span>为了避免变成这样，我提个问题， ...</span><br>
<span>用normal判断即可</span><br>
</p><p><b>mes: </b><br>
<span>Lunamos 发表于 2020-3-9 20:16</span><br>
<span>用normal判断即可</span><br>
<span>是可以。看到的时候大概还没碰过，不知怎么想起，然而写着时我也觉得按接触到平面的方向就行，要么坐标也直接能算。但不知道有没记错，如果真的是说是可以“设置”成那样，那大概就是设计和程序分开，设计一直都觉得就是这么回事，如果真的那样，到底是好还是不好呢。又或者真的可以，只是方法比较隐秘。</span><br>
</p><p><b>Lunamos: </b><br>
<span>mes 发表于 2020-3-9 21:23</span><br>
<span>是可以。看到的时候大概还没碰过，不知怎么想起，然而写着时我也觉得按接触到平面的方向就行，要么坐标也 ...</span><br>
<span>设计当然要通过程序体现。你想设计这么个四向刺球，那就把这个刺球的所有可能产生的行为定义清楚不就行了。</span><br>
</p><p><b>香月诗浓: </b><br>
<span>说起来ps4那个dreams有谁试过了？貌似搞出成品的不少</span><br>
</p><p><b>真田丸: </b><br>
<span>pandaman7777 发表于 2020-3-9 19:57</span><br>
<span>想问下这帖里应该有专业的技术大拿，用引擎做游戏内录的过场已经是非常成熟的技术了，那么以后有没有可能用 ...</span><br>
<span>SFM了解一下</span><br>
</p><p><b>final007: </b><br>
<span>那么想做个模拟经营游戏用什么最快呢？</span><br>
<span>rpgmaker能做这种类型吗？</span><br>
<span>—— 来自 Sony G8142, Android 9上的 S1Next-鹅版 v2.2.0.1</span><br>
</p><p><b>hshiki: </b><br>
<span>只做2d的话先用gms2实现起来挺方便的，我个人倾向于先提出需求，再想办法实现出来，不用太纠结具体用什么工具。</span><br>
<span>学技术和提需求相互作用，想要自己做游戏的话后者更重要一些。对技术现实有一些大体上的了解，有助于提出更合理的需求。</span><br>
<span>当然如果励志做程序员只关心技术，确实要把大部分精力都放在学习掌握技术上。</span><br>
</p><p><b>hshiki: </b><br>
<span>mes 发表于 2020-3-9 17:43</span><br>
<span>没有什么独不独立，什么职位，有的只是兴趣，不管是有多少人，想做什么，都可以讨论，如果你已经默认以“ ...</span><br>
<span>蔚蓝人物控制的代码确实很长，有很多细节优化，代码在网上公开的。其中一个优化是跳跃落地之前几帧如果按下跳跃键会储存这个命令直到落地执行，防止没落地提前按跳吞掉操作，玩家不知道具体原因只会觉得手感差。</span><br>
<span>如果不理解为什么需要做这么多优化调节，跟着教程做一个平台跳跃游戏，自然就明白了。比如人物跳起来和落下的加速度，移动的惯性，跳跃时控制方向的速度变化等等。</span><br>
</p><p><b>すぴぱら: </b><br>
<span> 本帖最后由 すぴぱら 于 2020-3-10 09:43 编辑 </span><br>
<span>mes 发表于 2020-3-9 17:43</span><br>
<span> 没有什么独不独立，什么职位，有的只是兴趣，不管是有多少人，想做什么，都可以讨论，如果你已经默认以“ ...</span><br>
<span>楼上大佬说过了蔚蓝做了防吞操作的设计的。</span><br>
<span>现在可能没什么教材教输入缓冲（Input buffering）和土狼时间（Coyote time）那种手感优化了，大概是专业开发者觉得太简单，新入门开发者也没有那种优化经验根本不会想的到，以前读过一个海外blog怎么在gms上优化动作游戏的输入判断，受益匪浅</span><br>
<span>至于蔚蓝为什么要做输入缓冲和复杂的状态机来判断角色输入及位置状态（不多，几百行大概），你找个那种普通的U3D跳跃教程，就拿那种用什么物理引擎做2D的，然后操作一下，基本就会发现那种教程都是胡写，手感和操作控制都是屎，甚至写教程的自己都没试过。</span><br>
<span>https://www.baidu.com/s?wd=%E8%BE%93%E5%85%A5%E7%BC%93%E5%86%B2+%E5%B9%B3%E5%8F%B0%E6%B8%B8%E6%88%8F</span><br>
<span>https://www.google.com/search?source=hp&q=input+buffering+2d+platformer</span><br>
<span>来感受一下输入缓冲用中文搜索引擎只能搜到一条正确结果的凄凉感。</span><br>
</p><p><b>dumplingpro: </b><br>
<span> 本帖最后由 dumplingpro 于 2020-3-10 09:41 编辑 </span><br>
<span>Lunamos 发表于 2020-3-9 17:35</span><br>
<span>一个独立游戏制作者最关键的是知道自己要做什么，有没有毅力坚持下去。只要这件事确定下来，可以说事情已 ...</span><br>
<span>做MOD没得选还好说，哪怕是自己坐着玩，引擎还是要挑一挑，工具还是要点推荐。</span><br>
<span>选UNITY这些主流的，网上教程一大堆，完全可以现学现卖，找个小众的引擎，怕是现学都找不到地方。</span><br>
<span>一些工具也是很重要的，就像MOD一样，让没有能力的人变得有能力。</span><br>
<span>比如像素画风的话，我上面就推荐Pixelmash，找点现实中的照片转换成像素画，调一下色作为场景/背景素材就挺好了，可以让不会画画的人省掉不少功夫。</span><br>
<span>还有Qubicle Voxel Editor把像素画转换成像素风模型，即使没有什么基础的人都可以搞定像素建模。</span><br>
<span>这2个STEAM还有得卖，价格也不贵，不用折腾**。</span><br>
<span>所以我还是希望有更多这类工具推荐。</span><br>
</p><p><b>HuangY: </b><br>
<span>学习学习</span><br>
<span>-- 来自 能手机投票的 Stage1官方 iOS客户端</span><br>
</p><p><b>mes: </b><br>
<span>hshiki 发表于 2020-3-10 02:46</span><br>
<span>蔚蓝人物控制的代码确实很长，有很多细节优化，代码在网上公开的。其中一个优化是跳跃落地之前几帧如果按 ...</span><br>
<span>有个教程里见到没没验证过的说法，是马里奥跳起和落下是两种曲线，如果是，要么自己截图自己算，要么看有没相关资料，有的话当然是看资料方便了。也听说过有第一人称游戏其实已经离开了平台要掉下去，但还是给一点“多余空间”来起跳。总之就是，先告诉我那种游戏完整具体是怎样的就方便多了，移动这种程度的话不需要具体代码，但具体数据还是要。</span><br>
</p><p><b>hshiki: </b><br>
<span>mes 发表于 2020-3-10 10:54</span><br>
<span>有个教程里见到没没验证过的说法，是马里奥跳起和落下是两种曲线，如果是，要么自己截图自己算，要么看有 ...</span><br>
<span>我更倾向于从内到外学习，自己先做，发现一堆问题去看看别人怎么做的，而不是事先在网上收集好多少种优化，做游戏时塞进来。</span><br>
<span>比如最开始学习写人物移动的代码，键盘按住左再按右是否改变方向，再松开右还是否继续向左走等等，试试就知道该怎么改了。</span><br>
</p><p><b>mes: </b><br>
<span>すぴぱら 发表于 2020-3-10 08:46</span><br>
<span>楼上大佬说过了蔚蓝做了防吞操作的设计的。</span><br>
<span>现在可能没什么教材教输入缓冲（Input buffering）和土狼时间 ...</span><br>
<span>这些“硬核”玩家们肯定不屑，而且不是说好几行吗？</span><br>
<span>indienova.com/u/root/blogread/11340</span><br>
<span>而且如果游戏真的硬核，给这种缓冲反而不好吧，重试的时候说不定感觉更乱，反正硬核游戏我不碰所以不太清楚，我想也许可以给一个落地瞬间如果跳键是按住的状态的话还是能起跳，那其实在起跳条件里写成按住或按下似乎就好。当然都没实际试过。</span><br>
<span>至于物理引擎，所以说不推荐特别是“像素”游戏用，以前游戏是用长方形（或类似方法）判断碰撞，移动一次是水平移动和垂直移动分开，其实斜移是会像这样</span><br>
<img src="https://i.niupic.com/images/2020/03/10/6ZGX.jpg" title="https://i.niupic.com/images/2020/03/10/6ZGX.jpg"><br>
<span>至少我看的教程是这样说的。</span><br>
</p><p><b>mes: </b><br>
<span>hshiki 发表于 2020-3-10 11:20</span><br>
<span>我更倾向于从内到外学习，自己先做，发现一堆问题去看看别人怎么做的，而不是事先在网上收集好多少种优化 ...</span><br>
<span>我只见过一种写法，if left left，else if right right，else if up……</span><br>
<span>就是其实只接受一种，而且有先后，如果先先判断右，那自然会按左和右时向右，还没见过其他什么奇特的写法。</span><br>
</p><p><b>すぴぱら: </b><br>
<span> 本帖最后由 すぴぱら 于 2020-3-10 12:05 编辑 </span><br>
<span>mes 发表于 2020-3-10 11:30</span><br>
<span> 这些“硬核”玩家们肯定不屑，而且不是说好几行吗？ indienova.com/u/root/blogread/11340 而且如果游戏 ...</span><br>
<span>试过就知道了，不做缓冲输入就被吞。。。。 毕竟玩家的手和帧刷新是有延迟的，可能按早了或者按晚了，但是心理想的是我明明按下了怎么吞键？！</span><br>
<span>另外物理引擎是用来做hitbox aabb的</span><br>
</p><p><b>dumplingpro: </b><br>
<span> 本帖最后由 dumplingpro 于 2020-3-10 11:43 编辑 </span><br>
<span>mes 发表于 2020-3-10 11:37</span><br>
<span>我只见过一种写法，if left left，else if right right，else if up……</span><br>
<span>就是其实只接受一种，而且有先后 ...</span><br>
<span>输入序列还是有的，那些类似格斗游戏连按指令的要用到。</span><br>
</p><p><b>mes: </b><br>
<span>すぴぱら 发表于 2020-3-10 11:38</span><br>
<span>试过就知道了，不做缓冲输入就被吞。。。。 毕竟玩家的手和帧刷新是有延迟的，可能按早了或者按晚了，但是 ...</span><br>
<span>那“硬核”玩家就应该习惯，明白是在那时按才有效，如果给一个提前多少帧的错觉那反而对“硬核”玩家不好。另外如果有这种缓冲，应该只按住跳键就会一直在原地跳，有哪些这样的游戏？</span><br>
<span>不太确定意思，但物理引擎做AABB还是物理引擎，该怎么物理引擎还是怎么物理引擎。</span><br>
</p><p><b>mes: </b><br>
<span>dumplingpro 发表于 2020-3-10 11:40</span><br>
<span>输入序列还是有的，那些类似格斗游戏连按指令的要用到。</span><br>
<span>那应该就是另一种系统了，其实也可能需要，因为有能搓招的动作游戏，只是还没见过这种教程。</span><br>
</p><p><b>汪达: </b><br>
<span> 本帖最后由 汪达 于 2020-3-10 12:24 编辑 </span><br>
<span>用else的话left + up之类的斜向操作不是无法实现？</span><br>
<span>比较靠谱的教程一般会用 switch</span><br>
<span>case left: lspeed=n</span><br>
<span>case right: rspeed=-n</span><br>
<span>case up: uspeed=n</span><br>
<span>case down: dspeed=-n</span><br>
<span>hspeed=lspeed+rspeed; vspeed=uspeed+dspeed;</span><br>
<span>然后角色step事件里x+=hspeed y+=vspeed</span><br>
<span>如果考虑斜方向减速则再利用相关的处理dir的function对hspeed和vspeed数值处理，手柄摇杆会有更细节的dir判定，如果需要做到移动角度这么细同样要修正</span><br>
<span>而且这么写同时按左和右这种冲突指令时hspeed自然为0，同时按左和上则不会</span><br>
<span>不明白楼主为什么总喜欢在个玩家论坛发这类帖，就算别人给出意见吧还总觉得这里都是玩家不比自己知道的多，utube、udemy上也有不少近乎手把手的教程视频可以看，建议先去那里多看看照着教程做一遍，先学会基础逻辑，明白引擎运作的原理，再考虑更宏伟的目标</span><br>
</p><p><b>mes: </b><br>
<span>汪达 发表于 2020-3-10 12:18</span><br>
<span>用else的话left + up之类的斜向操作不是无法实现？</span><br>
<span>比较靠谱的教程一般会用 switch</span><br>
<span>case left: lspeed=n</span><br>
<span>我想想，平台游戏不这么做主要是“不需要”，为什么要同时按左和右？按你们的说法，这种程度还是需要考虑的。我也见过俯视2D的控制，好像有左和右是一块，下面不用else上和下是一块，然后还搞了个加速度。至于360度手柄摇杆是另一回事，应该有值可以直接拿来用。</span><br>
<span>不过就是讨论而已嘛，要是我能说到你会做游戏，还是你说到我会做游戏都很好啊。</span><br>
<span>只是对事，这样写应该不好，玩家输入和不管物理引擎什么角色的“惯性”是分开的，这样写就变成了按完左再按右还有留下向左的速度需要先减完，（当然不是完整的码，单这样还不会，只是我猜是这个意思，）如果非得做同时按左和右会不动之类也应该能简化点，比如直接在if left和else if right间加个if right。</span><br>
</p><p><b>mes: </b><br>
<span>刚见到的平台游戏，想玩可能要趁早，只是不清楚是用什么做的，感觉效率可以接受，网页版我的机也能玩。</span><br>
<span>eniko.itch.io/superbernieworld</span><br>
<span>More information里有steam连接</span><br>
<span>感觉已经做的很好了，我自己一个要是能做到这个程度已经该被自己感动得泪流满面，但明显对比真正的马奥还差了很多。</span><br>
<img src="https://i.niupic.com/images/2020/03/10/6ZIg.jpg" title="https://i.niupic.com/images/2020/03/10/6ZIg.jpg"><br>
</p><p><b>すぴぱら: </b><br>
<span> 本帖最后由 すぴぱら 于 2020-3-10 14:48 编辑 </span><br>
<span>mes 发表于 2020-3-10 12:11</span><br>
<span>那“硬核”玩家就应该习惯，明白是在那时按才有效，如果给一个提前多少帧的错觉那反而对“硬核”玩家不好 ...</span><br>
<span>不做缓冲硬核玩家能把操作精确到1个tick的吗？那叫TAS，不是人类的操作， 逐帧判断和输入缓冲并不冲突，输入缓冲是为了保存上一次tick的输入结果后给当前的tick用，这种90%的现代动作游戏都是基本配置的东西，结果讨论来讨论去就歪楼了，变成了“硬核”不需要这东西，“玩家”应该去习惯，“横板游戏不可能同时按两个方向键”，“我只见过一种写法”， “另外如果有这种缓冲，应该只按住跳键就会一直在原地跳”。</span><br>
<span>我说老哥，这不讨论蔚蓝呢么，你怎么抗拒他干嘛。。。。嫌他写的不好？既然只接受一个观念，那就算了，不再讨论。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-11 13:15 编辑 </span><br>
<span>すぴぱら 发表于 2020-3-10 14:45</span><br>
<span>不做缓冲硬核玩家能把操作精确到1个tick的吗？那叫TAS，不是人类的操作， 逐帧判断和输入 ...</span><br>
<span>那设计比如强制拖板时留点余地啊，而不是什么按早按晚了，至少除非以前的游戏都这么做，我个人觉得这种做法有疑问。如果要说有延迟，那你可以根据最基本的按方向键时等多久才动来感受，音游也能调延迟，但那是全部的延迟而不是单独某个键的。</span><br>
<span>没说不可以按，但很多手柄不能按，要是你非要按，给个理由，所以个人觉得不处理也是正规的，当然按键盘输入为前提处理了也算用心。</span><br>
<span>不然呢？因为有缓冲啊，那不是该一直跳吗？</span><br>
<span>不知道，我脑力有限，只想按自己的方式搞懂，要是跟不上别人的思路，那也就算了。</span><br>
<span>还有想起以前玩过一个按格移动游戏，有冰面会滑动途中不能操作，但是其实它记住了操作，在滑到底时会立即按那个操作移动，我个人觉得如果是这种情况虽还算不上BUG吧，还是应该修一下。</span><br>
<span>其实还是忍不住要吐槽，想想几个人说想做游戏，为按左右键这种事争论了半天，这游戏还能做出来吗？当然可能我也回的太主观，那再客观点，1是除非游戏需要按住左右键的操作，否则可以不用考虑，2是缓冲到底有没必要，如果是我我觉得可能没区别，因为我的迟钝有可能分不清10帧什么的，但多少可以“感到”，那失败一次又一次反而可能永远找不到感觉，因为和实际不一样了。3是我觉得是会一直原地跳，要不是怎样的复杂条件分歧？4是不对游戏，而且玩的时候都没所谓，没这么认真，但一样东西拆开后当然就会开始想，这里怎么放得这么乱之类，既然我的目的也不是非得做出来不可，自然还是想放的至少自己觉得舒服。</span><br>
</p><p><b>dumplingpro: </b><br>
<span>mes 发表于 2020-3-10 14:57</span><br>
<span>那设计比如强制拖板时留点余地啊，而不是什么按早按晚了，至少除非以前的游戏都这么做，我个人觉得这种做 ...</span><br>
<span>貌似不少引擎/或者主机API之类的都是自带了缓冲的，不需要自己处理。</span><br>
</p><p><b>mes: </b><br>
<span>说到缓冲，个人觉得有个更有必要的是储存，比如很多unity小游戏就没存档功能，还有像推箱子类撤回操作，还有回顾已读文本应该都需要，只是不知道是不是算同一种。</span><br>
</p><p><b>凉宫绿豆沙: </b><br>
<span>melting 发表于 2020-3-9 16:03</span><br>
<span>其实arcaea就是用cocos2dx做的</span><br>
<span>是的，确实有个例，但无法改变大趋势了，连maimai这种大型街机都用unity了。</span><br>
</p><p><b>mes: </b><br>
<span>想了想，我其实目前并不想真的做一个游戏，总之定个稍微有趣的目标，就是尽量把这些视觉效果做出来</span><br>
<span>bilibili.com/video/av184101/</span><br>
<span>首先就是砍起来的那个轨迹，如果可以尽量想直接做成动画，但这样就是有个平时看不到的一片，到挥时才显示出来，这到底能不能直接动画暂还不清楚，还有其实这些发光半透明效果也还不知道标准做法。</span><br>
</p><p><b>zerofree0000: </b><br>
<span>mes 发表于 2020-3-11 12:31</span><br>
<span>想了想，我其实目前并不想真的做一个游戏，总之定个稍微有趣的目标，就是尽量把这些视觉效果做出来</span><br>
<span>bilibil ...</span><br>
<span>想用unity的话，本坛有不少职业开发者的。</span><br>
<span>我也可以回答绝大多数问题除了光照shader这些视觉效果的东西，有需要就@ 我，最近在公司几乎天天刷s1，看见就回。</span><br>
<span>你这里说的视觉效果大概主要是指粒子效果（particle）？</span><br>
<span>关于粒子可以找相关专门书籍看。粒子是特效这个工种的重要组成部分，在天朝手游几乎等义于特效师。</span><br>
<span>顺带一提刀剑轨迹其实是比较具体的特效实现的方面。</span><br>
<span>笨办法可以为每个动作做一个粒子效果，虽然苯但是效果最好。</span><br>
<span>程序根据人物动作中武器的运动轨迹来生成mesh网格也是可以的，以前我用了asset store上一个插件，国人写的效果还不错。</span><br>
<span>关于主楼写的东西，unity的话不会编程可以利用Play Maker等visual script的插件来帮助你实现一些不太复杂的逻辑。效率一般，但是对于很多人是0和1的区别，可以试着入手。</span><br>
<span>另外视觉效果整体其实和编程有不少距离。unity官方有关于渲染灯光等教程，属于技术美术（technical arts）方向的知识。可以从网格、顶点、法线、着色器等知识开始了解。</span><br>
<span>unity其实不存在2d。2d不过是把摄像机从透视相机换成了正交相机，始终平行于z轴，只是用x和y，然后网上贴图就是了。物理碰撞方面unity提供了2d碰撞器（相对于3d碰撞），和3d几乎一样。</span><br>
<span>还有不少楼提到地图编辑器，这其实是一个特定领域。2d的低成本作品通常使用方块形式的瓦片地图编辑器，这个同样在asset store上有很多。地图编辑器主要提供快捷的制作地图的手段，并不是必须的。</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1917695[50-100]</guid>
    </item>
    <item>
      <title>unity及其他免费PC游戏制作引擎或工具帖[0-50]</title>
      <link>https://bbs.saraba1st.com/2b/thread-1917695-1-1.html</link>
      <description>unity及其他免费PC游戏制作引擎或工具帖&#13;
 本帖最后由 mes 于 2020-3-8 00:08 编辑 

首先我觉得没这个需要，要是有人完全不懂的情况下搜到了也许有那么点帮助，反正随便搜只搜到4年前的帖，不知道大家游戏做出来没。
&#13;
https://bbs.saraba1st.com/2b/thread-1351885-1-1.html
&#13;
然后就是比较“多功能”的之中我只用过unity，也并没做出过完整的什么东西，要是问我我多数不懂，可能搜一下能不能解决，也不会顶，随便占几楼编辑下吧。
&#13;
unity基础
&#13;
[*]Q：如何编程？
&#13;
A：复制粘贴，想要速成吗？那就搜你想要的内容复制粘贴，但本人完全不支持拆别人工程之类的行为，请用网上免费教程之类的码。
&#13;
[*]Q：可不可以不编程……
&#13;
A：也许看类型，但个人不觉得对这一层完全不碰能做到多好，听说国产有个不用编程的引擎，也许试试那个。
&#13;
[*]unity中比较一般的做法是，把控制角色，敌人，可收集（如金币）都作为一个个的物体放入场景，然后在这些物体中挂脚本来控制移动、收集完消失之类，但是！据说这样的效率不好，大概用ECS会好点，反正我也还不懂。
&#13;
[*]那些物体上的脚本一般可以看成有一开始只运行一遍的部分，和之后一直在每帧更新的部分，而物理的更新和每帧更新又是不同的，这个就看码大概就知道怎么分开，总之记住有这么回事就好。</description>
      <content:encoded><![CDATA[<p><b>mes: </b><br>
<span>unity及其他免费PC游戏制作引擎或工具帖</span><br>
<span> 本帖最后由 mes 于 2020-3-8 00:08 编辑 </span><br>
<span>首先我觉得没这个需要，要是有人完全不懂的情况下搜到了也许有那么点帮助，反正随便搜只搜到4年前的帖，不知道大家游戏做出来没。</span><br>
<span>https://bbs.saraba1st.com/2b/thread-1351885-1-1.html</span><br>
<span>然后就是比较“多功能”的之中我只用过unity，也并没做出过完整的什么东西，要是问我我多数不懂，可能搜一下能不能解决，也不会顶，随便占几楼编辑下吧。</span><br>
<span>unity基础</span><br>
<span>[*]Q：如何编程？</span><br>
<span>A：复制粘贴，想要速成吗？那就搜你想要的内容复制粘贴，但本人完全不支持拆别人工程之类的行为，请用网上免费教程之类的码。</span><br>
<span>[*]Q：可不可以不编程……</span><br>
<span>A：也许看类型，但个人不觉得对这一层完全不碰能做到多好，听说国产有个不用编程的引擎，也许试试那个。</span><br>
<span>[*]unity中比较一般的做法是，把控制角色，敌人，可收集（如金币）都作为一个个的物体放入场景，然后在这些物体中挂脚本来控制移动、收集完消失之类，但是！据说这样的效率不好，大概用ECS会好点，反正我也还不懂。</span><br>
<span>[*]那些物体上的脚本一般可以看成有一开始只运行一遍的部分，和之后一直在每帧更新的部分，而物理的更新和每帧更新又是不同的，这个就看码大概就知道怎么分开，总之记住有这么回事就好。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-8 00:19 编辑 </span><br>
<span>unity2d</span><br>
<span>至少有可以一格格画地图的工具，只是配合物理引擎的话，并不适合做“像素”游戏，可能没有跳跃的会好点，或者俯视游戏，但俯视游戏加上跳跃再加上可以跳到物品上的话，我也有点想不明白，主要是图像重叠的顺序，如果是平台游戏那么直接定几层就好了，但是俯视的游戏就没法，因为角色可以走到其他物品“前”，又能走到它的“后”，正常方法应该是调z轴的值。</span><br>
<span>适合的做起来最简单的游戏：想不到，愤怒的鸟也许。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-8 12:56 编辑 </span><br>
<span>unity3d</span><br>
<span>来到3d的话，角色控制器随便复制一个罢了，但免费的第三人称视角的还没见到镜头不会穿模的，只是免费素材很多，也许随便做个什么很容易，但是没有什么好用的场景制作工具，其实我也不是很肯定，因为我的前提是免费，这个大概是最好用的了</span><br>
<span>assetstore.unity.com/packages/tools/modeling/probuilder-2-x-111418</span><br>
<span>适合的容易做的游戏：第一人称恐怖走路游戏</span><br>
<span>关于unity的模型导入blender</span><br>
<span>dkrevel.com/unity-and-blender/unity-to-blender</span><br>
</p><p><b>mes: </b><br>
<span>godot</span><br>
<span>（观望中）</span><br>
</p><p><b>すぴぱら: </b><br>
<span> 本帖最后由 すぴぱら 于 2020-3-8 02:08 编辑 </span><br>
<span>godot其实蛮香的，甚至我觉得比unity要更适合2d，很期待后面c#脚本全平台实装</span><br>
<span>关于有提到unity的2d渲染顺序的问题，其实unity的默认管线是给3d准备的，但是有transparent sorting axis这个东西，一般来说把y值拉上去就会优先根据y排序，用自带的或者写自定义管线都行</span><br>
<span>只拉z轴做渲染顺序的话，说实话很难和tilemap这种平面的组件做配合，主要是关卡不好编辑，图块一多就很难受了。我能想到的有几种路子，一个是只用z轴但是和地面45度，角色和植被写个billboard，当个3d游戏做，或者把z轴抛弃掉只用y轴的sorting axis当纯2d做，或者是把y轴的值写进sortingorder，官方有主力推过这种做法</span><br>
<span>反正我不会推荐unity/xna/godot 作为非程序员的入门引擎，因为他太反直觉了，首先是工具链的不完善，几乎没什么用的可视化编辑器，基本就不是给非程序员准备的，unity更倾向于一个图形引擎，关于gameplay的一切都要自己用c#造轮子，从管理一个游戏的生命周期开始造，研究各种设计模式，到ui框架，到游戏数据的增删改查，到简化动画系统，到AI状态机实现，大部分时间都处于造轮子，想做一个RPG？好的你得先有RPG的开发经验，想做一个galgame？很好先从如何设计一个脚本系统开始写，这对非程序开发人员是致命的，因为鬼才有那么多时间造轮子</span><br>
<span>对于玩票性质不打算秃头的爱好者，其实 rpgmaker wolf krkr renpy这种更好 术业专攻，做什么用什么</span><br>
</p><p><b>zag: </b><br>
<span>不编程，买个dream universe啊</span><br>
</p><p><b>Hieda: </b><br>
<span>大学的时候跟着社团参加过一段时间game jam搞2d游戏，最后把我搞自闭了，和unity的逻辑八字不合</span><br>
<span>毕业之后学习了ECS，相见恨晚，虽然仔细回想unity好像也是类似的思路，但感觉还是自己拿amethyst之类比较直白的框架撸代码比较舒服</span><br>
</p><p><b>前田利家: </b><br>
<span>unreal挺好的，蓝图虽然麻烦但是不写代码一样能做游戏。</span><br>
</p><p><b>HazukiShion: </b><br>
<span>有UE4相关的吗？</span><br>
<span>最近自学UE4，学完蓝图和材质不知道要学什么了。。。</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-8 13:33 编辑 </span><br>
<span>すぴぱら 发表于 2020-3-8 00:14</span><br>
<span>godot其实蛮香的，甚至我觉得比unity要更适合2d，很期待后面c#脚本全平台实装</span><br>
<span>关于有提到unity的2d渲染顺 ...https://i.niupic.com/images/2020/03/08/6Z68.jpg</span><br>
<span>反正只有一个值得话不够吧，首先地形有高度差，而且物体能互相叠在上面，结论来说就是不适合，干脆3d。</span><br>
<span>如果unity都不适合那就没有适合的了，主要是现实里就只有这些了，如果用RM做，不动脚本也是范围太狭窄。另外像做gal这种文字系统一想很简单，其实还是不合适，大概需要做个按顺序存放文本的系统，至少还需要选项分支，已读文本。不方便，所以虽然里面已经有太多东西，但作为业余感觉还是缺了很多东西，无法下手。</span><br>
<span>wolf好像已经能正常显示中文，无奈没见过人用。</span><br>
</p><p><b>mes: </b><br>
<span>HazukiShion 发表于 2020-3-8 10:52</span><br>
<span>有UE4相关的吗？</span><br>
<span>最近自学UE4，学完蓝图和材质不知道要学什么了。。。</span><br>
<span>个人不会，有网友会可以指教。只是个人觉得在本国，要是做不出国人脑内那种很虚幻引擎的画面那不如干脆转别的比较舒心。</span><br>
</p><p><b>whzfjk: </b><br>
<span>すぴぱら 发表于 2020-3-8 00:14</span><br>
<span>godot其实蛮香的，甚至我觉得比unity要更适合2d，很期待后面c#脚本全平台实装</span><br>
<span>关于有提到unity的2d渲染顺 ...</span><br>
<span>没有公模或者样板类型游戏这样的轮子吗？</span><br>
</p><p><b>卿卿雅儿: </b><br>
<span>熟练的java后端程序员，但是没有美工基础，想做个小黄油该用什么？</span><br>
</p><p><b>marine_01: </b><br>
<span>编程门槛又不高，为何不花时间学习下</span><br>
<span>—— 来自 Xiaomi Redmi K20 Pro Premium Edition, Android 10上的 S1Next-鹅版 v2.2.0.1</span><br>
</p><p><b>すぴぱら: </b><br>
<span> 本帖最后由 すぴぱら 于 2020-3-8 12:35 编辑 </span><br>
<span>mes 发表于 2020-3-8 11:55</span><br>
<span>反正只有一个值得话不够吧，首先地形有高度差，而且物体能互相叠在上面，结论来说就是不适合，干脆3d。</span><br>
<span> ...</span><br>
<span>https://blogs.unity3d.com/jp/201 ... ments-with-tilemap/</span><br>
<span>官方有提到过Z和Y的问题，高度差判断他们更推荐的是Y => ORDER, 至于为什么不用Z，因为tilemap本质是个大平面，只有一个Z值，在上面用笔刷铺地形，都是铺在平面上，高地和低地只有sortinglayer不同</span><br>
</p><p><b>HazukiShion: </b><br>
<span>mes 发表于 2020-3-8 11:58</span><br>
<span>个人不会，有网友会可以指教。只是个人觉得在本国，要是做不出国人脑内那种很虚幻引擎的画面那不如干脆转 ...</span><br>
<span>只是个人兴趣啦，作为一种爱好来学的。</span><br>
</p><p><b>mes: </b><br>
<span>すぴぱら 发表于 2020-3-8 12:31</span><br>
<span>https://blogs.unity3d.com/jp/201 ... ments-with-tilemap/</span><br>
<span>官方有提到过Z和Y的问题，高度差判断他们更 ...</span><br>
<span>看了下没看到是怎么算的，因为并不是想做等角，就是RPG MAKER视角，所以如果不懂怎么算是做不了。</span><br>
</p><p><b>すぴぱら: </b><br>
<span> 本帖最后由 すぴぱら 于 2020-3-8 14:08 编辑 </span><br>
<span>mes 发表于 2020-3-8 13:31</span><br>
<span>看了下没看到是怎么算的，因为并不是想做等角，就是RPG MAKER视角，所以如果不懂怎么算是做不了。 ...</span><br>
<span>等角和头顶视图的差异是啥，渲染顺序上没有任何差异吧，反正我没觉得有差异。</span><br>
<span>Project Stteings -> Graphics -> Scriptable Render Pipeline & Camera Settings </span><br>
<span>->Custom Transparency Sort Axis 这里就是渲染管线决定以Z（3D）还是Y（2D）为基准的地方。2D游戏请把它改成Y</span><br>
<span>Sprite Renderer和Timemap Renderer里会有sorting order和sortinglayer来控制2D层级，要决定多个图像叠加的顺序就改预设的这里，不需要计算。</span><br>
<span>RPGMAKER的2D地图，同一个层级Y坐标低的图像会优先渲染，不同层级就先区分地形的层级。</span><br>
<span>Unity这里是比较乱，但是最好别用2D或者3d游戏思维看，了解渲染顺序就行了，你真的要用Z做，就别用2D的图块组件，坑太多了</span><br>
</p><p><b>mhfdt: </b><br>
<span>unity就别把2D 3D分开来了，搞的好像两个工具一样</span><br>
<span>你只要搞清楚空间和摄像机原理，2D 3D无非一个角度的事情</span><br>
<span>实际做都一样做，比如动画，触发器，碰撞这些东西要掌握</span><br>
</p><p><b>tyauto: </b><br>
<span>自己做独立游戏工具软件再方便好用到后期发现会画画或找个好美工其实是最重要的......</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-8 16:01 编辑 </span><br>
<span>すぴぱら 发表于 2020-3-8 13:58</span><br>
<span>等角和头顶视图的差异是啥，渲染顺序上没有任何差异吧，反正我没觉得有差异。</span><br>
<span>Project Stteings -> Graphi ...</span><br>
<span>因为这不单是显示上的问题，角色可以“跳上去”，“跳下去”，在高的地方“碰不到”看着是周围格子但是低的地方这样，我是想不清了。</span><br>
<span>还有只想显示的话还是主要是不知道为什么这样设，为什么是1，为什么是0.5，为什么是0.2几，没有说明，难道一个个小数试，然后猜为什么这样？不如使用手册里说明下，用户看不看懂不懂是各人的事，这明明说想了解算法就看手册结果连过去什么都没是什么意思？当然可能是翻译上的问题，但没有真的不行。</span><br>
</p><p><b>mes: </b><br>
<span>mhfdt 发表于 2020-3-8 13:58</span><br>
<span>unity就别把2D 3D分开来了，搞的好像两个工具一样</span><br>
<span>你只要搞清楚空间和摄像机原理，2D 3D无非一个角度的事情 ...</span><br>
<span>做2d和3d的思维是完全不同吧，2d动画可以是几张图片，3d就只能动作，要说有什么一样的话，就是都不好用。</span><br>
</p><p><b>山竹罐头: </b><br>
<span>每个预制体都单独整一个脚本的话，复杂场景会效率比较低。</span><br>
<span>不如弄个instance集中起来，用的时候直接调用，会方便很多。</span><br>
</p><p><b>mhfdt: </b><br>
<span> 本帖最后由 mhfdt 于 2020-3-8 15:11 编辑 </span><br>
<span>mes 发表于 2020-3-8 14:44</span><br>
<span>做2d和3d的思维是完全不同吧，2d动画可以是几张图片，3d就只能动作，要说有什么一样的话，就是都不好用。 ...</span><br>
<span>一样的。你只是把思维停留在原始资源的结构上，而恰恰这部分和U3D本身没什么关系，无论是传统2D atlas图集，还是新兴的spine动画，还是3D模型+动画，都是一个game object的事，我想要这个game object移动，攻击，播放对应动画，从代码层面和animator设计上来说都是一回事，无非调整位置是三轴还是二轴，摄像机角度如何。</span><br>
<span>而图集啊spine动画啊3D模型加动画啊，基本上，都是其他工具做好了导入，然后unity内部加载对应组件成为可用格式（2D为 sprite renderer/3D如mesh renderer)，这部分是引擎内部的事情，一般情况下和我们最终用户无关。</span><br>
</p><p><b>zxlice: </b><br>
<span>我觉得一般游戏程序要求不高……</span><br>
<span>还是assets重要</span><br>
</p><p><b>mes: </b><br>
<span>mhfdt 发表于 2020-3-8 15:08</span><br>
<span>一样的。你只是把思维停留在原始资源的结构上，而恰恰这部分和U3D本身没什么关系，无论是传统2D atlas图集 ...</span><br>
<span>其实不管什么思维，能做出来就行了。只是我见过某个问题，问怎么程序上实现某些“对齐”，回答是交给图像的人让他们对齐就好了，这就十分之……</span><br>
</p><p><b>真田丸: </b><br>
<span>Hieda 发表于 2020-3-8 06:59</span><br>
<span>大学的时候跟着社团参加过一段时间game jam搞2d游戏，最后把我搞自闭了，和unity的逻辑八字不合</span><br>
<span>毕业之后 ...</span><br>
<span>ECS是啥？Entity Component System？这不是快10年前的概念吗？unity的确是典型entity based。</span><br>
</p><p><b>真田丸: </b><br>
<span>卿卿雅儿 发表于 2020-3-8 12:00</span><br>
<span>熟练的java后端程序员，但是没有美工基础，想做个小黄油该用什么？</span><br>
<span>做什么形式的小黄油？gal还是rpgmaker那种？</span><br>
</p><p><b>mhfdt: </b><br>
<span>mes 发表于 2020-3-8 16:07</span><br>
<span>其实不管什么思维，能做出来就行了。只是我见过某个问题，问怎么程序上实现某些“对齐”，回答是交给图像 ...</span><br>
<span>如果你说的是atlas图集的对齐，那确实是美工的活</span><br>
<span>U3D可控的，只是U3D内部的资源集</span><br>
<span>即使U3D自带生成atlas的功能/插件，也不代表程序要去管这个，顶多，写个工具自动分割然后由美术手调再重生成图集——这工作外部工具多了去了，有更专业的，也不需要全依赖U3D。</span><br>
<span>至于其他情况的“对齐”，runtime下调整transform而已，基本操作</span><br>
</p><p><b>处男鉴黄师: </b><br>
<span>如果是在网页端或者微信小程序上运行的轻量级3D游戏，用threejs是不是更好？</span><br>
</p><p><b>mes: </b><br>
<span>mhfdt 发表于 2020-3-8 17:00</span><br>
<span>如果你说的是atlas图集的对齐，那确实是美工的活</span><br>
<span>U3D可控的，只是U3D内部的资源集</span><br>
<span>即使U3D自带生成atlas ...</span><br>
<span>不记得，也许是关于3d模型拿着**的时候对着目标，不是有IK啥的吗？回答是你就让搞图像的做个对齐的动作就好。</span><br>
<span>反正我当时觉得那个问题的意义在于如果真的需要那种技术那怎么实现，而不是怎么看着行就行了。</span><br>
</p><p><b>heroboy: </b><br>
<span>没人提cocos creator吗？虽然我看不上这种国产软件，也不用。但是公司在用。好像可以很方便的导出各种微信 oppo 华为等等各种听也没听说过的小程序。</span><br>
</p><p><b>mhfdt: </b><br>
<span>mes 发表于 2020-3-8 17:30</span><br>
<span>不记得，也许是关于3d模型拿着**的时候对着目标，不是有IK啥的吗？回答是你就让搞图像的做个对齐的动作就 ...</span><br>
<span>你们如果是做VR项目，动作追踪之类的，那可能是要靠程序算IK或者FK</span><br>
<span>通常项目，Unity自带Humanoid骨骼，但凡人型的，骨骼由美工做好，导入后各节点确认绿色，剩下都是自匹配的。如果动画出现中心点歪斜之类的现象，检查导入动画（通常为fbx文件）中的节点设置。</span><br>
</p><p><b>mes: </b><br>
<span>mhfdt 发表于 2020-3-8 18:14</span><br>
<span>你们如果是做VR项目，动作追踪之类的，那可能是要靠程序算IK或者FK</span><br>
<span>通常项目，Unity自带Humanoid骨骼，但 ...</span><br>
<span>就比如像生化危机会转头看附近的东西，又或者来个会伸手指向目的地的系统，虽然是不是用这种方法最好还是疑问，但至少先说明这种方法是怎样的也算有个选择。</span><br>
</p><p><b>卿卿雅儿: </b><br>
<span>真田丸 发表于 2020-3-8 16:15</span><br>
<span>做什么形式的小黄油？gal还是rpgmaker那种？</span><br>
<span>画面进化的RPG Maker</span><br>
</p><p><b>mes: </b><br>
<span>虚幻引擎4</span><br>
<span>但是epic送了那么多游戏，虽然不用，要是遇到相关还是发一下吧。</span><br>
</p><p><b>dumplingpro: </b><br>
<span>tyauto 发表于 2020-3-8 14:10</span><br>
<span>自己做独立游戏工具软件再方便好用到后期发现会画画或找个好美工其实是最重要的...... ...</span><br>
<span>还好，天朝产业化还是不错的，如果只是小制作，可以场景资源靠买现成，剩下的花钱定制（3D淘宝有，2D米画师之类的），我定过。</span><br>
</p><p><b>dumplingpro: </b><br>
<span> 本帖最后由 dumplingpro 于 2020-3-8 20:39 编辑 </span><br>
<span>如果只是基于个人兴趣的话，个人推荐：</span><br>
<span>2D像素流，个人推荐Pixelmash，可以直接把图片像素化，比如用照片/图画像素化，搭配Qubicle Voxel Editor，可以把2D像素图，转换成像素风的3D模型，可以一定程度解决美工问题。</span><br>
<span>3D的话，个人推荐ninjaripper ，可以直接在运行中的游戏里截取显存信息，把所有3D模型提取出来。比如说人物模型，直接找个可以捏人的游戏，捏个人，然后截取出来，绑定骨骼，就完成了。</span><br>
<span>搭配这个网站https://www.spriters-resource.com/，下载游戏3D或者2D模型素材作为场景使用。</span><br>
<span>另外还有一个VR流，用MasterpieceVR之类的工具可以自己捏模型（VR下建模跟雕刻/捏橡皮泥差不多，不过个人手残搞不定），VoxVR是类似我的世界那样像素积木砌积木。</span><br>
<span>然后灯塔定位的VR（INDEX/VIVE/小派），花2000买3个定位器，绑在身体和双脚上，VR本身头盔手柄跟踪头部+双手，搭配IK可以全身动捕，可以用来制作简单的骨骼动画，也是个野路子方案。</span><br>
</p><p><b>testalphagogogo: </b><br>
<span>现在有啥RTS的使用简单的引擎么</span><br>
</p><p><b>mes: </b><br>
<span> 本帖最后由 mes 于 2020-3-8 23:34 编辑 </span><br>
<span>dumplingpro 发表于 2020-3-8 20:33</span><br>
<span>如果只是基于个人兴趣的话，个人推荐：</span><br>
<span>2D像素流，个人推荐Pixelmash，可以直接把图片像素化，比如用照片/ ...</span><br>
<span>要是都到提取显存了……为什么不用unity商店里那么多的免费人物模型？</span><br>
<span>不过要是有没版权争议的模型可以自己试试或者给我用blender试试（自动）绑骨。</span><br>
<span>顺便要是有人想做同人游戏可以拿去，不过只要有爱就算是这个精度自己也能做得更好吧。</span><br>
<img src="https://i.niupic.com/images/2020/02/26/6Wqg.jpg" title="https://i.niupic.com/images/2020/02/26/6Wqg.jpg"><br>
</p><p><b>mes: </b><br>
<span>testalphagogogo 发表于 2020-3-8 20:41</span><br>
<span>现在有啥RTS的使用简单的引擎么</span><br>
<span>spring rts engine</span><br>
<span>springrts.com</span><br>
<span>但是没素材（原来是给横扫千军用的），简不简单也不知道。</span><br>
</p><p><b>dumplingpro: </b><br>
<span> 本帖最后由 dumplingpro 于 2020-3-9 09:21 编辑 </span><br>
<span>mes 发表于 2020-3-8 20:55</span><br>
<span>要是都到提取显存了……为什么不用unity商店里那么多的免费人物模型？</span><br>
<span>不过要是有没版权争议的模型可以 ...</span><br>
<span>主要是可以找个有捏人但无法的游戏，捏好了再截出来，这点比较方便</span><br>
<span>免费资源/资源商店收费资源，淘宝米画师定制肯定是主打的。</span><br>
<span>其实个人最喜欢是VR手捏流/雕刻流，可惜是个手残。</span><br>
</p><p><b>mhfdt: </b><br>
<span>testalphagogogo 发表于 2020-3-8 20:41</span><br>
<span>现在有啥RTS的使用简单的引擎么</span><br>
<span>万用军.刀.unity</span><br>
<span>家园那个啥啥沙漠新作unity做的</span><br>
</p><p><b>mhfdt: </b><br>
<span>heroboy 发表于 2020-3-8 18:11</span><br>
<span>没人提cocos creator吗？虽然我看不上这种国产软件，也不用。但是公司在用。好像可以很方便的导出各种微信...</span><br>
<span>在地方棋.牌.死亡后一并死了</span><br>
<span>部分公司要维护项目还在招，但是很少有见过拿这个开新项目的了。</span><br>
</p><p><b>testalphagogogo: </b><br>
<span>mes 发表于 2020-3-8 20:58</span><br>
<span>spring rts engine</span><br>
<span>springrts.com</span><br>
<span>但是没素材（原来是给横扫千军用的），简不简单也不知道。 ...</span><br>
<span>这个10年前试过一次，居然还有更新么</span><br>
</p><p><b>凉宫绿豆沙: </b><br>
<span>heroboy 发表于 2020-3-8 18:11</span><br>
<span>没人提cocos creator吗？虽然我看不上这种国产软件，也不用。但是公司在用。好像可以很方便的导出各种微信...</span><br>
<span>只有做**的还在坚持了</span><br>
</p><p><b>mes: </b><br>
<span>testalphagogogo 发表于 2020-3-8 21:35</span><br>
<span>这个10年前试过一次，居然还有更新么</span><br>
<span>忘了上次什么时候见到，只是好像用这个的需要开源，可能更适合兴趣制作。</span><br>
</p><p><b>w30of: </b><br>
<span>不编程的话</span><br>
<span>UE的蓝图啊，不写代码直接把游戏做完都可以</span><br>
</p><p><b>凉宫绿豆沙: </b><br>
<span>比起工具的学习使用，现在比较蛋疼的是自己不知道想做什么</span><br>
</p><p><b>Freesil: </b><br>
<span>adv类型的游戏 有什么不用回编程就能用的吗，橙光感觉太糙了</span><br>
</p>]]></content:encoded>
      <guid isPermaLink="false">1917695[0-50]</guid>
    </item>
  </channel>
</rss>
